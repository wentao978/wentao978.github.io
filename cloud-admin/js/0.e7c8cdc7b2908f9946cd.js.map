{"version":3,"sources":["webpack:///js/0.e7c8cdc7b2908f9946cd.js","webpack:///./src/views/charts/mixchart.vue","webpack:///./~/_zrender@3.5.2@zrender/lib/core/util.js","webpack:///./~/_echarts@3.4.0@echarts/lib/echarts.js","webpack:///./~/_echarts@3.4.0@echarts/lib/util/graphic.js","webpack:///./~/_echarts@3.4.0@echarts/lib/util/number.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/vector.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Path.js","webpack:///./~/_echarts@3.4.0@echarts/lib/util/format.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/env.js","webpack:///./~/_echarts@3.4.0@echarts/lib/util/model.js","webpack:///./~/_echarts@3.4.0@echarts/lib/model/Model.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/BoundingRect.js","webpack:///./~/_echarts@3.4.0@echarts/lib/model/Component.js","webpack:///./~/_echarts@3.4.0@echarts/lib/util/clazz.js","webpack:///./~/_echarts@3.4.0@echarts/lib/util/layout.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/curve.js","webpack:///./~/_zrender@3.5.2@zrender/lib/mixin/Eventful.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/text.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/event.js","webpack:///./~/_zrender@3.5.2@zrender/lib/tool/color.js","webpack:///./~/_echarts@3.4.0@echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/_echarts@3.4.0@echarts/lib/scale/Scale.js","webpack:///./~/_zrender@3.5.2@zrender/lib/config.js","webpack:///./~/_zrender@3.5.2@zrender/lib/container/Group.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/PathProxy.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/matrix.js","webpack:///./~/_echarts@3.4.0@echarts/lib/CoordinateSystem.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/dataZoom/DataZoomView.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/dataZoom/helper.js","webpack:///./~/_echarts@3.4.0@echarts/lib/coord/axisHelper.js","webpack:///./~/_echarts@3.4.0@echarts/lib/model/Series.js","webpack:///./~/_echarts@3.4.0@echarts/lib/scale/Interval.js","webpack:///./~/_echarts@3.4.0@echarts/lib/util/component.js","webpack:///./~/_echarts@3.4.0@echarts/lib/util/throttle.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/timsort.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Displayable.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Gradient.js","webpack:///./~/_echarts@3.4.0@echarts/lib/chart/helper/Symbol.js","webpack:///./~/_echarts@3.4.0@echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/grid.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/helper/sliderMove.js","webpack:///./~/_echarts@3.4.0@echarts/lib/coord/cartesian/AxisModel.js","webpack:///./~/_echarts@3.4.0@echarts/lib/coord/cartesian/Grid.js","webpack:///./~/_echarts@3.4.0@echarts/lib/data/List.js","webpack:///./~/_echarts@3.4.0@echarts/lib/model/mixin/colorPalette.js","webpack:///./~/_echarts@3.4.0@echarts/lib/util/symbol.js","webpack:///./~/_echarts@3.4.0@echarts/lib/view/Chart.js","webpack:///./~/_echarts@3.4.0@echarts/lib/view/Component.js","webpack:///./~/_zrender@3.5.2@zrender/lib/Element.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/Animator.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/util.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/LRU.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/guid.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/log.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Image.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Pattern.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Style.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/helper/poly.js","webpack:///mixchart.vue","webpack:///mixchart.vue?9e3a","webpack:///./src/views/charts/mixchart.vue?ec0b","webpack:///./~/_echarts@3.4.0@echarts/lib/ExtensionAPI.js","webpack:///./~/_echarts@3.4.0@echarts/lib/chart/bar.js","webpack:///./~/_echarts@3.4.0@echarts/lib/chart/bar/BarSeries.js","webpack:///./~/_echarts@3.4.0@echarts/lib/chart/bar/BarView.js","webpack:///./~/_echarts@3.4.0@echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./~/_echarts@3.4.0@echarts/lib/chart/bar/barItemStyle.js","webpack:///./~/_echarts@3.4.0@echarts/lib/chart/bar/helper.js","webpack:///./~/_echarts@3.4.0@echarts/lib/chart/helper/SymbolDraw.js","webpack:///./~/_echarts@3.4.0@echarts/lib/chart/line.js","webpack:///./~/_echarts@3.4.0@echarts/lib/chart/line/LineSeries.js","webpack:///./~/_echarts@3.4.0@echarts/lib/chart/line/LineView.js","webpack:///./~/_echarts@3.4.0@echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./~/_echarts@3.4.0@echarts/lib/chart/line/poly.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/axis.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/axis/AxisView.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/dataZoom.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/dataZoom/InsideZoomModel.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/dataZoom/InsideZoomView.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/dataZoom/SliderZoomModel.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/dataZoom/SliderZoomView.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/dataZoom/roams.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/helper/RoamController.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/helper/interactionMutex.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/helper/listComponent.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/legend.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/legend/LegendModel.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/legend/LegendView.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/legend/legendAction.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/legend/legendFilter.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/title.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/tooltip.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/_echarts@3.4.0@echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/_echarts@3.4.0@echarts/lib/coord/Axis.js","webpack:///./~/_echarts@3.4.0@echarts/lib/coord/axisDefault.js","webpack:///./~/_echarts@3.4.0@echarts/lib/coord/axisModelCommonMixin.js","webpack:///./~/_echarts@3.4.0@echarts/lib/coord/axisModelCreator.js","webpack:///./~/_echarts@3.4.0@echarts/lib/coord/cartesian/Axis2D.js","webpack:///./~/_echarts@3.4.0@echarts/lib/coord/cartesian/Cartesian.js","webpack:///./~/_echarts@3.4.0@echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./~/_echarts@3.4.0@echarts/lib/coord/cartesian/GridModel.js","webpack:///./~/_echarts@3.4.0@echarts/lib/coord/cartesian/axisLabelInterval.js","webpack:///./~/_echarts@3.4.0@echarts/lib/data/DataDiffer.js","webpack:///./~/_echarts@3.4.0@echarts/lib/data/helper/completeDimensions.js","webpack:///./~/_echarts@3.4.0@echarts/lib/layout/barGrid.js","webpack:///./~/_echarts@3.4.0@echarts/lib/layout/points.js","webpack:///./~/_echarts@3.4.0@echarts/lib/loading/default.js","webpack:///./~/_echarts@3.4.0@echarts/lib/model/Global.js","webpack:///./~/_echarts@3.4.0@echarts/lib/model/OptionManager.js","webpack:///./~/_echarts@3.4.0@echarts/lib/model/globalDefault.js","webpack:///./~/_echarts@3.4.0@echarts/lib/model/mixin/areaStyle.js","webpack:///./~/_echarts@3.4.0@echarts/lib/model/mixin/boxLayout.js","webpack:///./~/_echarts@3.4.0@echarts/lib/model/mixin/itemStyle.js","webpack:///./~/_echarts@3.4.0@echarts/lib/model/mixin/lineStyle.js","webpack:///./~/_echarts@3.4.0@echarts/lib/model/mixin/textStyle.js","webpack:///./~/_echarts@3.4.0@echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/_echarts@3.4.0@echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/_echarts@3.4.0@echarts/lib/processor/dataSample.js","webpack:///./~/_echarts@3.4.0@echarts/lib/scale/Log.js","webpack:///./~/_echarts@3.4.0@echarts/lib/scale/Ordinal.js","webpack:///./~/_echarts@3.4.0@echarts/lib/scale/Time.js","webpack:///./~/_echarts@3.4.0@echarts/lib/visual/seriesColor.js","webpack:///./~/_echarts@3.4.0@echarts/lib/visual/symbol.js","webpack:///./src/views/charts/mixchart.vue?821a","webpack:///./src/components/Charts/mixchart.vue","webpack:///./src/components/Charts/mixchart.vue?9e0e","webpack:///./src/views/charts/mixchart.vue?613e","webpack:///./~/_zrender@3.5.2@zrender/lib/Handler.js","webpack:///./~/_zrender@3.5.2@zrender/lib/Layer.js","webpack:///./~/_zrender@3.5.2@zrender/lib/Painter.js","webpack:///./~/_zrender@3.5.2@zrender/lib/Storage.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/Animation.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/Clip.js","webpack:///./~/_zrender@3.5.2@zrender/lib/animation/easing.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/arc.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/cubic.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/line.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/path.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/quadratic.js","webpack:///./~/_zrender@3.5.2@zrender/lib/contain/windingLine.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/GestureMgr.js","webpack:///./~/_zrender@3.5.2@zrender/lib/core/bbox.js","webpack:///./~/_zrender@3.5.2@zrender/lib/dom/HandlerProxy.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/CompoundPath.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/LinearGradient.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/RadialGradient.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/Text.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/helper/roundRect.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/mixin/RectText.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Arc.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/BezierCurve.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Circle.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Line.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Polygon.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Polyline.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Rect.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Ring.js","webpack:///./~/_zrender@3.5.2@zrender/lib/graphic/shape/Sector.js","webpack:///./~/_zrender@3.5.2@zrender/lib/mixin/Animatable.js","webpack:///./~/_zrender@3.5.2@zrender/lib/mixin/Draggable.js","webpack:///./~/_zrender@3.5.2@zrender/lib/mixin/Transformable.js","webpack:///./~/_zrender@3.5.2@zrender/lib/tool/path.js","webpack:///./~/_zrender@3.5.2@zrender/lib/tool/transformPath.js","webpack:///./~/_zrender@3.5.2@zrender/lib/zrender.js"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","injectStyle","ssrContext","Component","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","slice","Function","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","get","prefixedKey","removeKey","noop","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","opts","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","throttle","zrUtil","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_api","ExtensionAPI","_coordSysMgr","CoordinateSystemManager","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","on","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","query","eachComponent","model","index","view","__viewId","__alive","doDispatchAction","silent","payloadType","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","__model","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","Math","floor","stopAnimation","blendMode","canvasSupported","setStyle","z","zlevel","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","graphic","colorTool","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","__lastOnlyGraphic","o","optionPreprocessorFuncs","setTheme","log","getModel","getOption","getWidth","getHeight","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","painter","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","mathMin","min","mathMax","max","left","Infinity","top","right","bottom","canvasList","dpr","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","style","x","y","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","coordSysMgr","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","name","cfg","hideLoading","loadingEffects","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","echarts","version","dependencies","replace","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","getInstanceByDom","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","isNaN","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","number","format","matrix","vector","color","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","getShallow","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","pathTool","round","Path","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","extendShape","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","getBoundingRect","aspect","cx","cy","resizePath","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","setText","textStyle","labelModel","labelPosition","labelOffset","labelColor","textStyleModel","textDistance","textFont","getFont","textPosition","textOffset","textFill","getTextColor","updateProps","initProps","getTransform","ancestor","mat","identity","mul","getLocalTransform","parent","vertex","transform","invert","transformDirection","direction","hBase","abs","vBase","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","anid","oldEl","newProp","_trim","str","linearMap","val","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","match","parseFloat","NaN","precision","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","dotIndex","getPixelPrecision","dataExtent","pixelExtent","LN10","dataQuantity","sizeQuantity","isFinite","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","parseDate","ret","quantity","pow","nice","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","ArrayCtor","Float32Array","out","copy","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","strokeNoScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirty","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","extendFrom","defaultShape","thisShape","numberUtil","textContain","formatUtil","addCommas","toCamelCase","upperCaseFirst","group1","charAt","normalizeCssArray","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","formatTpl","tpl","paramsList","encode","seriesLen","$vars","alias","k","s2d","formatTime","date","getFullYear","M","getMonth","getDate","h","getHours","getMinutes","getSeconds","capitalFirst","substr","truncateText","navigator","os","ua","firefox","ie","edge","touchEventsSupported","pointerEventsSupported","userAgent","has","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","createDataFormatModel","dataFormatMixin","seriesName","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","getFormattedLabel","dimIndex","itemModel","getItemModel","formatter","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","parsedKey","queryType","queryParam","queryComponents","parentModel","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","Ctor","setReadOnly","properties","customizeGetParent","enableClassExtend","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","getDependencies","deps","getClassesByMainType","arrayPush","componentUtil","componentIndex","defaultOption","dependentModels","uid","layoutMode","$constructor","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","hasOwn","optList","Class","getReferringComponents","enableClassManagement","registerWhenExtend","enableSubTypeDefaulter","enableTopologicalTravel","checkClassType","superCall","superApply","IS_CONTAINER","host","RootClass","mandatoryMethods","proto","ExtendedClass","entity","options","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","hasClass","getAllClassMainTypes","types","hasSubTypes","originalExtend","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","enoughParamNumber","ignoreSize","hasProp","hasValue","hNames","vNames","hResult","vResult","copyLayoutParams","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","cos","THREE_SQRT","sin","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","arrySlice","_$handlers","_h","isSilent","newList","l","argLen","triggerWithContext","getTextWidth","textWidthCache","textLines","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getTextRect","textAlign","textBaseline","textLineLen","lineHeight","adjustTextPositionOnRect","textRect","textHeight","halfHeight","ellipsis","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","join","charCode","charCodeAt","font","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","m1","m2","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","excludes","propName","Scale","_extent","_interval","scaleProto","extent","unionExtent","unionExtentFromData","dim","getDataExtent","getExtent","setExtent","start","end","thisExtent","getTicksLabels","labels","ticks","getTicks","getLabel","config","debugMode","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","rotate","out0","out1","out2","out3","out4","out5","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","retrieveRaw","processRangeProp","percentProp","valueProp","rawOption","thisOption","helper","AxisProxy","eachAxisDim","DataZoomModel","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","dataZoomModel","axisModel","axis","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","dimName","singleAxis","singleAxisModel","singleAxisIndex","axisIndices","axisModels","_isSeriesHasAllAxesTypeOf","axisId","axisType","is","seriesAxisIndex","globalOption","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","indices","callback","getAxisProxy","setRawRange","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getTargetCoordInfo","save","coordModel","store","coordIndex","coordSysLists","getComponent","getCoordSysModel","AXIS_DIMS","COORDS","isCoordSupported","coordType","createNameEach","attrs","capitalNames","capitalAttrs","nameObj","capital","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","isNodeAbsorded","nodes","isLinked","hasLink","edgeType","edgeId","records","absorb","sourceNode","processSingleNode","existsLink","OrdinalScale","IntervalScale","axisHelper","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","setBlank","getNeedCrossZero","niceScaleExtent","splitNumber","base","niceExtent","minInterval","getInterval","intervalScale","origin","setInterval","createScaleByModel","getCategories","ifAxisCrossZero","getAxisLabelInterval","tickCoords","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","tick","classUtil","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","label","fillDataTextStyle","newSeriesOption","cloneShallow","getLinkedData","getRawData","coordDimToDataDim","coordDim","dataDimToCoordDim","dataDim","getBaseAxis","multipleSeries","formattedValue","valStr","getDimensionInfo","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipDataIndex","getTooltipPosition","mathFloor","mathCeil","roundingErrorFix","niceTicks","_niceExtent","reverse","expandSize","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","lib","ORIGIN_METHOD","RATE","fn","delay","debounce","exec","lastExec","getTime","timer","currCall","diff","lastCall","clearTimeout","setTimeout","createOrUpdate","fnAttr","rate","throttleType","originFn","lastThrottleType","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","rectHover","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","getSymbolSize","symbolSize","getScale","Symbol","seriesScope","updateData","driftSymbol","drift","symbolUtil","symbolProto","_createSymbol","symbolType","hostModel","symbolPath","createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","downplay","setZ","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","hasItemOption","getItemStyle","elStyle","setColor","opacity","valueDim","dimensions","onEmphasis","ratio","onNormal","fadeOut","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","axesInfo","completeDimensions","categoryIndex","nameList","createNameList","categories","dimValueGetter","categoryAxesModels","initData","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","stackable","isXAxisCateogry","isYAxisCategory","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","angle","geo","gridModel","getRect","xAxis","yAxis","grid","handleEnds","mode","handleIndex","getRealDelta","handleMinMax","getAxisType","axisDim","axisModelCreator","AxisModel","resetRange","gridIndex","gridId","extraOption","isAxisUsedInTheGrid","getLabelUnionRect","labelCount","isLabelIgnored","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","updateAxisTransfrom","coordBase","axisExtent","axisExtentSum","toGlobalCoord","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","ifAxisCanNotOnZero","otherAxisDim","axes","axesMap","_updateScale","onZero","adjustAxes","axesList","isHorizontal","gridRect","inverse","getBoxLayoutParams","labelUnionRect","getAxis","axesMapOnDim","getCartesian","coordList","_findConvertTarget","cartesian","dataToPoint","dataToCoord","pointToData","coordToData","coordsList","point","createAxisCreator","axisPosition","axisPositionUsed","onBand","axesCount","addAxis","grids","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","transferProperties","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","DataDiffer","TRANSFERABLE_PROPERTIES","__wrappedMethods","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","_dimensionInfos","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","getDimension","size","dimensionInfoMap","idList","nameRepeatCount","DataCtor","stackedValue","getValues","dimData","dimExtent","getSum","sum","rawIndex","indexOfNearest","maxDistance","nearestIdx","minDist","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","colorIdx","colorNameMap","colorPalette","Triangle","Diamond","Pin","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","line","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","textVerticalAlign","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","Chart","elSetState","state","toggleHighlight","dataIdx","chartProto","componentProto","guid","Transformable","Animatable","clipPath","decomposeTransform","beforeUpdate","afterUpdate","updateTransform","hide","show","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","PI2","normalizeRadian","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","idStart","ZImage","globalImageCache","src","_image","cachedImgObj","onload","pending","sWidth","sHeight","drawImage","repeat","createPattern","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","shadowBlur","shadowOffsetX","shadowOffsetY","textStroke","textPositionRect","textShadowBlur","textShadowOffsetX","textShadowOffsetY","textTransform","textRotation","blend","prevStyle","firstDraw","styleName","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","smoothSpline","smoothBezier","points","smooth","controlPoints","smoothConstraint","cp1","cp2","__webpack_exports__","defineProperty","className","default","mounted","initChart","methods","getElementById","xData","title","subtext","fontSize","subtextStyle","tooltip","axisPointer","borderWidth","legend","calculable","axisLine","lineStyle","splitLine","axisTick","splitArea","axisLabel","dataZoom","handleIcon","handleSize","handleStyle","borderColor","barMaxWidth","barGap","barBorderRadius","symbol","__WEBPACK_IMPORTED_MODULE_0_components_Charts_mixchart__","__WEBPACK_IMPORTED_MODULE_0_components_Charts_mixchart___default","components","mixchart","sources","mappings","file","sourcesContent","sourceRoot","chartInstance","echartsAPIList","barLayoutGrid","eachSeriesByType","brushSelector","createRect","animationModel","rectShape","animateProperty","animateTarget","removeRect","getRectItemLayout","fixedLineWidth","getLineWidth","signX","signY","updateStyle","itemStyleModel","getBarItemStyle","labelPositionOutside","setLabel","rawLayout","BAR_BORDER_WIDTH_QUERY","BarView","_renderOnCartesian","oldData","_data","baseAxis","newIndex","oldIndex","execute","getMarkerPosition","pt","legendHoverLink","barMinHeight","getBorderLineDash","labelText","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","SymbolCtor","newIdx","symbolEl","oldIdx","enableAnimation","clipOverflow","smoothMonotone","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","getBandWidth","dir","sign","getStackedOnPoints","valueAxis","getOtherAxis","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","r0","clockwise","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","unshift","gradient","lineAnimationDiff","polyHelper","lineGroup","symbolDraw","_symbolDraw","_lineGroup","lineStyleModel","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","getLineStyle","lineJoin","stackedOnSmooth","getAreaStyle","categoryAxis","getAxesByScale","current","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","stackedOnBBox","makeAxisEventDataBase","innerTextLayout","verticalAlign","rotationDiff","endTextLayout","textRotate","onLeft","tooltipOpt","AxisBuilder","nameDirection","tickDirection","labelDirection","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","getGroup","pt1","pt2","lineCap","isBlank","tickModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","isTwoLabelOverlapped","firstRect","nextRect","axisLabelShow","labelMargin","labelRotation","labelLayout","categoryData","textEls","triggerEvent","tickVal","itemTextStyleModel","textColor","pos","labelBeforeFormat","textEl","targetType","firstLabel","lastLabel","axisName","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","truncatedText","formatterParams","__fullText","__truncatedText","content","rawTick","layoutAxis","getZero","theAxis","rawAxisPosition","rectBound","axisOffset","posMap","dirMap","getLabelInterval","axisBuilderAttrs","selfBuilderAttrs","AxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","areaStyle","calculateDataExtent","seriesModels","seriesData","seriesExtent","fixExtentByAxis","setAxisModel","isRestore","getAxisModel","percentWindow","_percentWindow","valueWindow","_valueWindow","useOrigin","setRange","_dimName","_axisIndex","_dataExtent","_dataZoomModel","getTargetSeriesModels","getOtherAxisModel","coordSysIndexName","isCartesian","foundOtherAxisModel","otherAxisModel","calculateDataWindow","percentExtent","boundValue","boundPercent","reset","dataWindow","restore","filterData","isInWindow","disabled","zoomLock","fixRange","bound","DataZoomView","sliderMove","roams","InsideZoomView","_range","shouldRecordRange","coordInfoList","allCoordIds","coordInfo","generateCoordId","coordId","containsPoint","dataZoomId","throttleRate","panGetRange","_onPan","zoomGetRange","_onZoom","unregister","controller","oldX","oldY","newX","newY","directionInfo","getDirectionInfo","percentDelta","signal","pixel","pixelLength","mouseX","mouseY","percentPoint","pixelStart","oldPoint","newPoint","pointToCoord","SliderZoomModel","dataBackground","fillerColor","labelPrecision","showDetail","showDataShadow","getOtherDim","thisDim","HORIZONTAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_displayables","_orient","_handleEnds","_size","_handleWidth","_handleHeight","_location","_dragging","_dataShadowInfo","_buildView","_updateView","thisGroup","_resetLocation","_resetInterval","barGroup","_renderBackground","_renderHandle","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","ecSize","layoutParams","layoutRect","padding","location","targetAxisModel","otherAxisInverse","_getViewExtent","info","_prepareDataShadowInfo","otherDim","getShadowDim","otherDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","linePoints","thisCoord","stride","otherCoord","thisAxis","displaybles","handles","handleLabels","filler","_onDragMove","ondragstart","_showDataInfo","ondragend","_onDragEnd","onmouseover","onmouseout","iconStr","bRect","handleColor","viewExtent","_updateInterval","viewExtend","nonRealtime","handleInterval","handle","handleHeight","_updateDataInfo","barTransform","textPoint","orderedHandleEnds","labelTexts","dataInterval","_formatLabel","valueStr","showOrHide","_applyBarTransform","_dispatchZoomAction","linkedNodesFinder","effectedModels","resetSingleAxis","filterSingleAxis","percentRange","valueRange","giveStore","ATTR","createController","dataZoomInfo","newRecord","RoamController","enable","onPan","onZoom","cleanStore","record","wrapAndDispatch","getRange","dataZoomInfos","theDataZoomId","theCoordId","setContainsPoint","mousedown","_x","_y","mousemove","eventTool","gestureEvent","interactionMutex","isTaken","mouseup","mousewheel","zoomDelta","zoom","pinch","pinchScale","pinchX","pinchY","zoomX","zoomY","zoomLimit","newZoom","zoomMin","zoomMax","zoomScale","mousedownHandler","mousemoveHandler","mouseupHandler","mousewheelHandler","pinchHandler","controlType","disable","isDragging","isPinching","_pinching","getStore","take","resourceKey","userKey","release","positionGroup","addBackground","LegendModel","selected","_updateData","legendData","hasSelected","isSelected","select","availableNames","getSeries","_availableNames","unSelect","toggleSelected","align","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","symbolCreator","listComponentHelper","_symbolTypeStore","legendModel","selectMode","itemAlign","legendDrawedMap","getSeriesByName","legendSymbolType","_createItem","eachRawSeries","itemGroup","itemIcon","tooltipModel","legendGlobalTooltipModel","textX","hitRect","legendIndex","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","legendModels","findComponents","filterSeries","subtarget","fontWeight","titleModel","subtextStyleModel","subText","subTextEl","link","sublink","open","groupRect","layoutOption","alignStyle","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","cssText","assembleCssText","transitionDuration","zrColor","borderName","camelCase","TooltipContent","appendChild","_container","_show","_hideTimeout","onmouseenter","enterable","_inContent","onmousemove","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","isShow","showContent","triggerOn","alwaysShowContent","confine","showDelay","hideDelay","borderRadius","extraCssText","animationEasingUpdate","crossStyle","shadowStyle","dataEqual","makeLineShape","makeRectShape","makeSectorShape","refixTooltipPosition","viewWidth","viewHeight","confineTooltipPosition","calcTooltipPosition","domWidth","domHeight","rectWidth","rectHeight","updatePosition","positionExpr","ifSeriesSupportAxisTrigger","_axisPointers","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastHover","_alwaysShowContent","_seriesGroupByAxis","_prepareAxisTriggerData","crossText","_crossText","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_tryShow","_mousemove","_hide","_showTimeout","seriesHaveDataOnIndex","_series","isTriggerAxis","findHover","manuallyHideTip","seriesGroupByAxis","globalTrigger","_showAxisTooltip","_ticket","_hideAxisPointer","_resetLastHover","_showItemTooltipContent","subTooltipModel","defaultHtml","asyncTicket","_showTooltipContent","axisPointerModel","axisPointerType","_showAxisPointer","allNotShow","seriesCoordSysSameAxis","allCoordSys","contentNotChange","lastHover","valIndex","_showSinglePointer","_showPolarPointer","_showCartesianPointer","_dispatchAndShowSeriesTooltipContent","moveGridLine","otherExtent","targetShape","pointerEl","_getPointerElement","moveAnimation","moveGridShadow","bandWidth","_updateCrossText","otherAxis","movePolarLine","mouseCoord","coordToPoint","movePolarShadow","crossStyleModel","pointerModel","initShape","axisPointers","pointerType","styleModel","isShadow","elementType","seriesList","rootTooltipModel","baseDimIndex","sampleSeriesIndex","payloadBatch","firstDataIndex","firstLine","seriesTooltipModel","html","ticket","cbTicket","fixExtentWithBands","nTick","normalizedExtent","Axis","containData","alignWithLabel","bands","getBands","coords","getLabelsCoords","_isBlank","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","timeAxis","logAxis","logBase","rangeStart","rangeEnd","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","axisLabelInterval","coordExtent","_labelInterval","dimAxisMapper","_axes","Cartesian","_dimList","getAxes","_dataCoordConvert","input","dimList","output","axisX","axisY","dataToPoints","containLabel","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","defaultNames","extraPrefix","value0","retrieveValue","guessOrdinal","getSeriesStackId","getAxisKey","calBarWidthAndOffset","barSeries","columnsMap","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","stackId","barWidth","barCategoryGap","barGapPercent","autoWidth","column","lastColumn","widthSum","barWidthAndOffset","getSeriesByType","isSeriesFiltered","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxisStart","lastCoord","lastCoordOrigin","maskColor","mask","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","cpt","assertSeriesInitialized","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","resultItem","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","oneSeries","rawSeriesIndex","eachRawSeriesByType","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","platform","fontFamily","fontStyle","animationDuration","animationThreshold","progressiveThreshold","lineType","getLineDash","dotSize","dashSize","gTextStyleModel","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","seriesOpt","clockWise","pointerColor","dataRange","visualMap","componentName","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","markPoint","markLine","mpData","mlData","samplers","average","nearest","indexSampler","sampler","fixRoundingError","originalVal","intervalScaleProto","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","rank","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","ONE_SECOND","ONE_MINUTE","ONE_DAY","encodeColor","colorAccessPath","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","locals","_vm","$createElement","_self","_c","class","staticRenderFns","staticClass","staticStyle","makeEventPacket","eveType","targetInfo","topTarget","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","Handler","proxy","painterRoot","_hovered","_lastTouchMoment","lastHovered","hovered","hoveredTarget","lastHoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","eventArgs","setCursorStyle","cursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downel","_upel","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","fillRect","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","createRoot","domRoot","Painter","root","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","getViewportRoot","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","invTransform","_doPaintEl","token","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","displayList","whIdx","wh","cwh","plt","prb","pathToImage","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","_renderList","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","remainder","arg","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_l","atan2","_a","_b","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","pointPair","center","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","track","pinchEnd","pinchPre","pinchCenter","extremity","fromPoints","xDim","yDim","tx","ty","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","touchmove","touchend","click","handlerDomProxyProto","paths","_updatePathDirty","globalCoord","strokeText","fillText","r1","r2","r3","r4","total","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","interpolate","segs","w2","w3","maxValue","lastIndexOf","baseline","shadowColor","textShadowColor","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","pointAt","tangentAt","roundRectHelper","shadowTemp","modified","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","mIdentity","transformableProto","parentHasTransform","tmpTransform","transformCoordToGlobal","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathList","pathEl","pathBundle","nPoint","mathAtan2","delInstance","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","_needsRefresh","oldDelFromStorage","oldAddToStorage","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation"],"mappings":"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iBM27C,Q6DljiBN,S7DojiBI3jE,IACE1D,K6DnjiBN0rB,O7DojiBM27C,Q6DljiBN,S7DojiBIljE,OACEnE,K6DnjiBN0rB,O7DojiBM27C,Q6DljiBN,S7DojiBIjjE,QACEpE,K6DnjiBN0rB,O7DojiBM27C,Q6DjjiBN,U7DojiBE/oE,KAAM,WACJ,UAEFgpE,QAAS,WACPznE,K6DnjiBJ0nE,a7DsjiBEC,SACED,UAAW,WACT1nE,KAAKkK,MAAQ8L,EAAQ7R,KAAK5G,SAASqqE,eAAe5nE,K6DpjiBxD6D,I7DqjiBM,IAAIgkE,GAAQ,WAEV,IAAK,GADDppE,MACK3C,EAAI,EAAGA,EAAI,GAAIA,IACtB2C,EAAKS,K6DpjiBfpD,EAAA,M7DsjiBQ,O6DpjiBR2C,K7DsjiBMuB,MAAKkK,MAAMqF,WACTgB,gB6DpjiBR,U7DqjiBQu3D,OACEz+C,K6DpjiBV,K7DqjiBU0+C,Q6DpjiBV,oC7DqjiBU11D,E6DpjiBV,K7DqjiBUwN,WACEjH,M6DpjiBZ,O7DqjiBYovD,S6DnjiBZ,M7DqjiBUC,cACErvD,M6DpjiBZ,U7DqjiBYovD,S6DljiBZ,O7DqjiBQE,SACE9+D,Q6DpjiBV,O7DqjiBU++D,aACEtoD,WACEjH,M6DjjiBd,U7DqjiBQo4C,MACEoX,Y6DpjiBV,E7DqjiBU32D,I6DpjiBV,I7DqjiBUE,O6DpjiBV,G7DqjiBUkO,WACEjH,M6DljiBZ,S7DqjiBQyvD,QACEh2D,E6DpjiBV,M7DqjiBUZ,I6DpjiBV,M7DqjiBUoO,WACEjH,M6DnjiBZ,W7DqjiBUna,MAAO,IAAK,I6DnjiBtB,O7DqjiBQ6pE,Y6DpjiBR,E7DqjiBQxX,QACE3wD,K6DpjiBV,W7DqjiBUooE,UACEC,WACE5vD,M6DljiBd,Y7DqjiBU6vD,WACE3K,M6DnjiBZ,G7DqjiBU4K,UACE5K,M6DnjiBZ,G7DqjiBU6K,WACE7K,M6DnjiBZ,G7DqjiBU8K,WACEvjD,S6DljiBZ,G7DqjiBU5mB,K6DnjiBVopE,I7DqjiBQ9W,QACE5wD,K6DpjiBV,Q7DqjiBUsoE,WACE3K,M6DnjiBZ,G7DqjiBUyK,UACEC,WACE5vD,M6DljiBd,Y7DqjiBU8vD,UACE5K,M6DnjiBZ,G7DqjiBU8K,WACEvjD,S6DnjiBZ,G7DqjiBUsjD,WACE7K,M6DljiBZ,K7DqjiBQ+K,WACE/K,M6DpjiBV,E7DqjiBUv5D,O6DpjiBV,G7DqjiBUw1C,Y6DljiBV,G7DmjiBUpoC,O6DljiBV,G7DmjiBU0/B,M6DljiBV,G7DmjiBUC,I6DljiBV,G7DmjiBUw3B,W6DljiBV,2G7DmjiBUC,W6DljiBV,O7DmjiBUC,aACEpwD,M6DhjiBZ,W7DmjiBUiH,WACEjH,M6DljiBZ,Q7DmjiBUqwD,Y6DhjiBV,Y7DmjiBU9oE,K6DjjiBV,S7DkjiBU29D,M6DjjiBV,E7DkjiBUv5D,O6DjjiBV,G7DkjiBU8sC,M6DjjiBV,E7DkjiBUC,I6DhjiBV,K7DkjiBQ7lC,SACEgJ,K6DjjiBV,I7DkjiBUtU,K6DjjiBV,M7DkjiBUuL,M6DjjiBV,K7DkjiBUw9D,Y6DjjiBV,G7DkjiBUC,O6DjjiBV,M7DkjiBUpc,WACEt+B,QACE7V,M6DjjiBd,sB7DkjiBcupC,OACE2b,M6DjjiBhB,E7DkjiBgBj+C,WACEjH,M6DhjiBlB,Q7DkjiBgB2G,S6DjjiBhB,Y7DkjiBgB2Q,UAAW,SAAmBiU,GAC5B,MAAOA,GAAErmC,MAAQ,EAAIqmC,EAAErmC,M6DjjiBzC,O7DsjiBUW,M6DhjiBV,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAIA,Q7DoiiBUgW,K6DliiBV,I7DmiiBUtU,K6DliiBV,M7DmiiBUuL,M6DliiBV,K7DmiiBUqhD,WACEt+B,QACE7V,M6DliiBd,oB7DmiiBcwwD,gB6DliiBd,E7DmiiBcjnB,OACE2b,M6DliiBhB,E7DmiiBgBv+C,S6DliiBhB,M7DmiiBgB2Q,UAAW,SAAmBiU,GAC5B,MAAOA,GAAErmC,MAAQ,EAAIqmC,EAAErmC,M6DliiBzC,O7DuiiBUW,M6DjiiBV,IACA,KACA,IACA,KACA,IACA,IACA,IACA,KACA,KACA,IACA,IAEA,O7DuhiBUgW,K6DrhiBV,K7DshiBUtU,K6DrhiBV,O7DshiBUuL,M6DrhiB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","file":"js/0.e7c8cdc7b2908f9946cd.js","sourcesContent":["webpackJsonp([0],Array(277).concat([\n/* 277 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(466)\n}\nvar Component = __webpack_require__(38)(\n  /* script */\n  __webpack_require__(350),\n  /* template */\n  __webpack_require__(494),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-cb20660c\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 278 */,\n/* 279 */,\n/* 280 */,\n/* 281 */,\n/* 282 */,\n/* 283 */,\n/* 284 */,\n/* 285 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n/* 286 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(292);\n\n    var GlobalModel = __webpack_require__(438);\n    var ExtensionAPI = __webpack_require__(385);\n    var CoordinateSystemManager = __webpack_require__(312);\n    var OptionManager = __webpack_require__(439);\n\n    var ComponentModel = __webpack_require__(296);\n    var SeriesModel = __webpack_require__(317);\n\n    var ComponentView = __webpack_require__(335);\n    var ChartView = __webpack_require__(334);\n    var graphic = __webpack_require__(287);\n    var modelUtil = __webpack_require__(293);\n    var throttle = __webpack_require__(320);\n\n    var zrender = __webpack_require__(533);\n    var zrUtil = __webpack_require__(285);\n    var colorTool = __webpack_require__(303);\n    var Eventful = __webpack_require__(300);\n    var timsort = __webpack_require__(322);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts (dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this);\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.time && console.time('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            // console.time && console.timeEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            var view = ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId];\n            if (view && view.__alive) {\n                view[method](model, ecModel, ecIns._api, payload);\n            }\n        }, ecIns);\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // if (__DEV__) {\n        //     zrUtil.assert(\n        //         !this[IN_MAIN_PROCESS],\n        //         '`dispatchAction` should not be called during main process.'\n        //         + 'unless updateMathod is \"none\".'\n        //     );\n        // }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        for (var i = 0; i < payloads.length; i++) {\n            var batchItem = payloads[i];\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var actions = [];\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.4.0',\n        dependencies: {\n            zrender: '3.3.0'\n        }\n    };\n\n    function enableConnect(chart) {\n\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n\n    }\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(452));\n    echarts.registerPreprocessor(__webpack_require__(446));\n    echarts.registerLoading('default', __webpack_require__(437));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    //\n    echarts.List = __webpack_require__(331);\n    echarts.Model = __webpack_require__(294);\n\n    echarts.graphic = __webpack_require__(287);\n    echarts.number = __webpack_require__(288);\n    echarts.format = __webpack_require__(291);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(309);\n    echarts.vector = __webpack_require__(289);\n    echarts.color = __webpack_require__(303);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))\n\n/***/ }),\n/* 287 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(285);\n\n    var pathTool = __webpack_require__(531);\n    var round = Math.round;\n    var Path = __webpack_require__(290);\n    var colorTool = __webpack_require__(303);\n    var matrix = __webpack_require__(309);\n    var vector = __webpack_require__(289);\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(307);\n\n    graphic.Image = __webpack_require__(344);\n\n    graphic.Text = __webpack_require__(514);\n\n    graphic.Circle = __webpack_require__(521);\n\n    graphic.Sector = __webpack_require__(527);\n\n    graphic.Ring = __webpack_require__(526);\n\n    graphic.Polygon = __webpack_require__(523);\n\n    graphic.Polyline = __webpack_require__(524);\n\n    graphic.Rect = __webpack_require__(525);\n\n    graphic.Line = __webpack_require__(522);\n\n    graphic.BezierCurve = __webpack_require__(520);\n\n    graphic.Arc = __webpack_require__(519);\n\n    graphic.CompoundPath = __webpack_require__(511);\n\n    graphic.LinearGradient = __webpack_require__(512);\n\n    graphic.RadialGradient = __webpack_require__(513);\n\n    graphic.BoundingRect = __webpack_require__(295);\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n/* 288 */\n/***/ (function(module, exports) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * Fix rounding error of float numbers\n     * @param {number} x\n     * @return {number}\n     */\n    number.round = function (x, precision) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        return +(+x).toFixed(precision);\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n        var dotIndex = str.indexOf('.');\n        if (dotIndex < 0) {\n            return 0;\n        }\n        return str.length - 1 - dotIndex;\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    /**\n     * @param {string|Date|number} value\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Treat as ISO format. See issue #3623\n            var ret = new Date(value);\n            if (isNaN(+ret)) {\n                // FIXME new Date('1970-01-01') is UTC, new Date('1970/01/01') is local\n                ret = new Date(new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'));\n            }\n            return ret;\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\n    };\n\n    // \"Nice Numbers for Graph Labels\" of Graphic Gems\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\n     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     * @param  {number} val\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exp10 = number.quantity(val);\n        var f = val / exp10; // between 1 and 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        return nf * exp10;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n/* 289 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n/* 290 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(323);\n    var zrUtil = __webpack_require__(285);\n    var PathProxy = __webpack_require__(308);\n    var pathContain = __webpack_require__(505);\n\n    var Pattern = __webpack_require__(345);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n/* 291 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(285);\n    var numberUtil = __webpack_require__(288);\n    var textContain = __webpack_require__(301);\n\n    var formatUtil = {};\n    /**\n     * 每三位默认加,格式化\n     * @type {string|number} x\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var y = date.getFullYear();\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var h = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n/***/ }),\n/* 292 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n/* 293 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(291);\n    var nubmerUtil = __webpack_require__(288);\n    var Model = __webpack_require__(294);\n    var zrUtil = __webpack_require__(285);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n\n            var seriesIndex = this.seriesIndex;\n            var seriesName = this.name;\n\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: seriesIndex,\n                seriesName: seriesName,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-';\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, goeName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = parsedKey[2];\n\n            if (!mainType || !queryType) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            queryParam[queryType.toLowerCase()] = value;\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n/***/ }),\n/* 294 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(285);\n    var clazzUtil = __webpack_require__(297);\n    var env = __webpack_require__(292);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(444));\n    mixin(Model, __webpack_require__(441));\n    mixin(Model, __webpack_require__(445));\n    mixin(Model, __webpack_require__(443));\n\n    module.exports = Model;\n\n\n/***/ }),\n/* 295 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(289);\n    var matrix = __webpack_require__(309);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n/* 296 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(294);\n    var zrUtil = __webpack_require__(285);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(319);\n    var clazzUtil = __webpack_require__(297);\n    var layout = __webpack_require__(298);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(442));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n/* 297 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(285);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n/* 298 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(285);\n    var BoundingRect = __webpack_require__(295);\n    var numberUtil = __webpack_require__(288);\n    var formatUtil = __webpack_require__(291);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n        var hNames = ['width', 'left', 'right']; // Order by priority.\n        var vNames = ['height', 'top', 'bottom']; // Order by priority.\n        var hResult = merge(hNames);\n        var vResult = merge(vNames);\n\n        copy(hNames, targetOption, hResult);\n        copy(vNames, targetOption, vResult);\n\n        function merge(names) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n/***/ }),\n/* 299 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(289);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n/* 300 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n/* 301 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = __webpack_require__(285);\n    var BoundingRect = __webpack_require__(295);\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n/* 302 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(300);\n    var env = __webpack_require__(292);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n/* 303 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(341);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n/* 304 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(285);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n/* 305 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(297);\n\n    function Scale() {\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n/* 306 */\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n/* 307 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(285);\n    var Element = __webpack_require__(337);\n    var BoundingRect = __webpack_require__(295);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n/* 308 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(299);\n    var vec2 = __webpack_require__(289);\n    var bbox = __webpack_require__(509);\n    var BoundingRect = __webpack_require__(295);\n    var dpr = __webpack_require__(306).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n/* 309 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n/* 310 */,\n/* 311 */,\n/* 312 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(285);\n\n    /**\n     * Interface of Coordinate System Class\n     *\n     * create:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *     @return {Object} coordinate system instance\n     *\n     * update:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *\n     * convertToPixel:\n     * convertFromPixel:\n     *     These two methods is also responsible for determine whether this\n     *     coodinate system is applicable to the given `finder`.\n     *     Each coordinate system will be tried, util one returns none\n     *     null/undefined value.\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {Object} finder\n     *     @param {Array|number} value\n     *     @return {Array|number} convert result.\n     *\n     * containPoint:\n     *     @param {Array.<number>} point In pixel coordinate system.\n     *     @return {boolean}\n     */\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n/* 313 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    var zrUtil = __webpack_require__(285);\n    var env = __webpack_require__(292);\n    var echarts = __webpack_require__(286);\n    var modelUtil = __webpack_require__(293);\n    var helper = __webpack_require__(315);\n    var AxisProxy = __webpack_require__(402);\n    var each = zrUtil.each;\n    var eachAxisDim = helper.eachAxisDim;\n\n    var DataZoomModel = echarts.extendComponentModel({\n\n        type: 'dataZoom',\n\n        dependencies: [\n            'xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'\n        ],\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            zlevel: 0,\n            z: 4,                   // Higher than normal component (z: 2).\n            orient: null,           // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n            xAxisIndex: null,       // Default the first horizontal category axis.\n            yAxisIndex: null,       // Default the first vertical category axis.\n\n            filterMode: 'filter',   // Possible values: 'filter' or 'empty'.\n                                    // 'filter': data items which are out of window will be removed.\n                                    //           This option is applicable when filtering outliers.\n                                    // 'empty': data items which are out of window will be set to empty.\n                                    //          This option is applicable when user should not neglect\n                                    //          that there are some data items out of window.\n                                    // Taking line chart as an example, line will be broken in\n                                    // the filtered points when filterModel is set to 'empty', but\n                                    // be connected when set to 'filter'.\n\n            throttle: null,         // Dispatch action by the fixed rate, avoid frequency.\n                                    // default 100. Do not throttle when use null/undefined.\n                                    // If animation === true and animationDurationUpdate > 0,\n                                    // default value is 100, otherwise 20.\n            start: 0,               // Start percent. 0 ~ 100\n            end: 100,               // End percent. 0 ~ 100\n            startValue: null,       // Start value. If startValue specified, start is ignored.\n            endValue: null          // End value. If endValue specified, end is ignored.\n        },\n\n        /**\n         * @override\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * key like x_0, y_1\n             * @private\n             * @type {Object}\n             */\n            this._dataIntervalByAxis = {};\n\n            /**\n             * @private\n             */\n            this._dataInfo = {};\n\n            /**\n             * key like x_0, y_1\n             * @private\n             */\n            this._axisProxies = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * @private\n             */\n            this._autoThrottle = true;\n\n            var rawOption = retrieveRaw(option);\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function (newOption) {\n            var rawOption = retrieveRaw(newOption);\n\n            //FIX #2591\n            zrUtil.merge(this.option, newOption, true);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @protected\n         */\n        doInit: function (rawOption) {\n            var thisOption = this.option;\n\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            this._setDefaultThrottle(rawOption);\n\n            processRangeProp('start', 'startValue', rawOption, thisOption);\n            processRangeProp('end', 'endValue', rawOption, thisOption);\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this._resetTarget();\n\n            this._giveAxisProxies();\n        },\n\n        /**\n         * @private\n         */\n        _giveAxisProxies: function () {\n            var axisProxies = this._axisProxies;\n\n            this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n                var axisModel = this.dependentModels[dimNames.axis][axisIndex];\n\n                // If exists, share axisProxy with other dataZoomModels.\n                var axisProxy = axisModel.__dzAxisProxy || (\n                    // Use the first dataZoomModel as the main model of axisProxy.\n                    axisModel.__dzAxisProxy = new AxisProxy(\n                        dimNames.name, axisIndex, this, ecModel\n                    )\n                );\n                // FIXME\n                // dispose __dzAxisProxy\n\n                axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetTarget: function () {\n            var thisOption = this.option;\n\n            var autoMode = this._judgeAutoMode();\n\n            eachAxisDim(function (dimNames) {\n                var axisIndexName = dimNames.axisIndex;\n                thisOption[axisIndexName] = modelUtil.normalizeToArray(\n                    thisOption[axisIndexName]\n                );\n            }, this);\n\n            if (autoMode === 'axisIndex') {\n                this._autoSetAxisIndex();\n            }\n            else if (autoMode === 'orient') {\n                this._autoSetOrient();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _judgeAutoMode: function () {\n            // Auto set only works for setOption at the first time.\n            // The following is user's reponsibility. So using merged\n            // option is OK.\n            var thisOption = this.option;\n\n            var hasIndexSpecified = false;\n            eachAxisDim(function (dimNames) {\n                // When user set axisIndex as a empty array, we think that user specify axisIndex\n                // but do not want use auto mode. Because empty array may be encountered when\n                // some error occured.\n                if (thisOption[dimNames.axisIndex] != null) {\n                    hasIndexSpecified = true;\n                }\n            }, this);\n\n            var orient = thisOption.orient;\n\n            if (orient == null && hasIndexSpecified) {\n                return 'orient';\n            }\n            else if (!hasIndexSpecified) {\n                if (orient == null) {\n                    thisOption.orient = 'horizontal';\n                }\n                return 'axisIndex';\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetAxisIndex: function () {\n            var autoAxisIndex = true;\n            var orient = this.get('orient', true);\n            var thisOption = this.option;\n            var dependentModels = this.dependentModels;\n\n            if (autoAxisIndex) {\n                // Find axis that parallel to dataZoom as default.\n                var dimName = orient === 'vertical' ? 'y' : 'x';\n\n                if (dependentModels[dimName + 'Axis'].length) {\n                    thisOption[dimName + 'AxisIndex'] = [0];\n                    autoAxisIndex = false;\n                }\n                else {\n                    each(dependentModels.singleAxis, function (singleAxisModel) {\n                        if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n                            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n                            autoAxisIndex = false;\n                        }\n                    });\n                }\n            }\n\n            if (autoAxisIndex) {\n                // Find the first category axis as default. (consider polar)\n                eachAxisDim(function (dimNames) {\n                    if (!autoAxisIndex) {\n                        return;\n                    }\n                    var axisIndices = [];\n                    var axisModels = this.dependentModels[dimNames.axis];\n                    if (axisModels.length && !axisIndices.length) {\n                        for (var i = 0, len = axisModels.length; i < len; i++) {\n                            if (axisModels[i].get('type') === 'category') {\n                                axisIndices.push(i);\n                            }\n                        }\n                    }\n                    thisOption[dimNames.axisIndex] = axisIndices;\n                    if (axisIndices.length) {\n                        autoAxisIndex = false;\n                    }\n                }, this);\n            }\n\n            if (autoAxisIndex) {\n                // FIXME\n                // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n                // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n\n                // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n                // dataZoom component auto adopts series that reference to\n                // both xAxis and yAxis which type is 'value'.\n                this.ecModel.eachSeries(function (seriesModel) {\n                    if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n                        eachAxisDim(function (dimNames) {\n                            var axisIndices = thisOption[dimNames.axisIndex];\n\n                            var axisIndex = seriesModel.get(dimNames.axisIndex);\n                            var axisId = seriesModel.get(dimNames.axisId);\n\n                            var axisModel = seriesModel.ecModel.queryComponents({\n                                mainType: dimNames.axis,\n                                index: axisIndex,\n                                id: axisId\n                            })[0];\n\n                            if (__DEV__) {\n                                if (!axisModel) {\n                                    throw new Error(\n                                        dimNames.axis + ' \"' + zrUtil.retrieve(\n                                            axisIndex,\n                                            axisId,\n                                            0\n                                        ) + '\" not found'\n                                    );\n                                }\n                            }\n                            axisIndex = axisModel.componentIndex;\n\n                            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n                                axisIndices.push(axisIndex);\n                            }\n                        });\n                    }\n                }, this);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetOrient: function () {\n            var dim;\n\n            // Find the first axis\n            this.eachTargetAxis(function (dimNames) {\n                !dim && (dim = dimNames.name);\n            }, this);\n\n            this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n        },\n\n        /**\n         * @private\n         */\n        _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n            // FIXME\n            // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n            // 例如series.type === scatter时。\n\n            var is = true;\n            eachAxisDim(function (dimNames) {\n                var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n                var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n                if (!axisModel || axisModel.get('type') !== axisType) {\n                    is = false;\n                }\n            }, this);\n            return is;\n        },\n\n        /**\n         * @private\n         */\n        _setDefaultThrottle: function (rawOption) {\n            // When first time user set throttle, auto throttle ends.\n            if (rawOption.hasOwnProperty('throttle')) {\n                this._autoThrottle = false;\n            }\n            if (this._autoThrottle) {\n                var globalOption = this.ecModel.option;\n                this.option.throttle =\n                    (globalOption.animation && globalOption.animationDurationUpdate > 0)\n                    ? 100 : 20;\n            }\n        },\n\n        /**\n         * @public\n         */\n        getFirstTargetAxisModel: function () {\n            var firstAxisModel;\n            eachAxisDim(function (dimNames) {\n                if (firstAxisModel == null) {\n                    var indices = this.get(dimNames.axisIndex);\n                    if (indices.length) {\n                        firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n                    }\n                }\n            }, this);\n\n            return firstAxisModel;\n        },\n\n        /**\n         * @public\n         * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n         */\n        eachTargetAxis: function (callback, context) {\n            var ecModel = this.ecModel;\n            eachAxisDim(function (dimNames) {\n                each(\n                    this.get(dimNames.axisIndex),\n                    function (axisIndex) {\n                        callback.call(context, dimNames, axisIndex, this, ecModel);\n                    },\n                    this\n                );\n            }, this);\n        },\n\n        getAxisProxy: function (dimName, axisIndex) {\n            return this._axisProxies[dimName + '_' + axisIndex];\n        },\n\n        /**\n         * If not specified, set to undefined.\n         *\n         * @public\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        setRawRange: function (opt) {\n            each(['start', 'end', 'startValue', 'endValue'], function (name) {\n                // If any of those prop is null/undefined, we should alos set\n                // them, because only one pair between start/end and\n                // startValue/endValue can work.\n                this.option[name] = opt[name];\n            }, this);\n        },\n\n        /**\n         * @public\n         * @return {Array.<number>} [startPercent, endPercent]\n         */\n        getPercentRange: function () {\n            var axisProxy = this.findRepresentativeAxisProxy();\n            if (axisProxy) {\n                return axisProxy.getDataPercentWindow();\n            }\n        },\n\n        /**\n         * @public\n         * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n         *\n         * @param {string} [axisDimName]\n         * @param {number} [axisIndex]\n         * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n         */\n        getValueRange: function (axisDimName, axisIndex) {\n            if (axisDimName == null && axisIndex == null) {\n                var axisProxy = this.findRepresentativeAxisProxy();\n                if (axisProxy) {\n                    return axisProxy.getDataValueWindow();\n                }\n            }\n            else {\n                return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n            }\n        },\n\n        /**\n         * @public\n         * @return {module:echarts/component/dataZoom/AxisProxy}\n         */\n        findRepresentativeAxisProxy: function () {\n            // Find the first hosted axisProxy\n            var axisProxies = this._axisProxies;\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n\n            // If no hosted axis find not hosted axisProxy.\n            // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n            // and the option.start or option.end settings are different. The percentRange\n            // should follow axisProxy.\n            // (We encounter this problem in toolbox data zoom.)\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n        }\n\n    });\n\n    function retrieveRaw(option) {\n        var ret = {};\n        each(\n            ['start', 'end', 'startValue', 'endValue', 'throttle'],\n            function (name) {\n                option.hasOwnProperty(name) && (ret[name] = option[name]);\n            }\n        );\n        return ret;\n    }\n\n    function processRangeProp(percentProp, valueProp, rawOption, thisOption) {\n        // start/end has higher priority over startValue/endValue,\n        // but we should make chart.setOption({endValue: 1000}) effective,\n        // rather than chart.setOption({endValue: 1000, end: null}).\n        if (rawOption[valueProp] != null && rawOption[percentProp] == null) {\n            thisOption[percentProp] = null;\n        }\n        // Otherwise do nothing and use the merge result.\n    }\n\n    module.exports = DataZoomModel;\n\n\n\n/***/ }),\n/* 314 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var ComponentView = __webpack_require__(335);\n\n    module.exports = ComponentView.extend({\n\n        type: 'dataZoom',\n\n        render: function (dataZoomModel, ecModel, api, payload) {\n            this.dataZoomModel = dataZoomModel;\n            this.ecModel = ecModel;\n            this.api = api;\n        },\n\n        /**\n         * Find the first target coordinate system.\n         *\n         * @protected\n         * @return {Object} {\n         *                   grid: [\n         *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n         *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n         *                       ...\n         *                   ],  // cartesians must not be null/undefined.\n         *                   polar: [\n         *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n         *                       ...\n         *                   ],  // polars must not be null/undefined.\n         *                   singleAxis: [\n         *                       {model: coord0, axisModels: [], coordIndex: 0}\n         *                   ]\n         */\n        getTargetCoordInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var ecModel = this.ecModel;\n            var coordSysLists = {};\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n                if (axisModel) {\n                    var coordModel = axisModel.getCoordSysModel();\n                    coordModel && save(\n                        coordModel,\n                        axisModel,\n                        coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []),\n                        coordModel.componentIndex\n                    );\n                }\n            }, this);\n\n            function save(coordModel, axisModel, store, coordIndex) {\n                var item;\n                for (var i = 0; i < store.length; i++) {\n                    if (store[i].model === coordModel) {\n                        item = store[i];\n                        break;\n                    }\n                }\n                if (!item) {\n                    store.push(item = {\n                        model: coordModel, axisModels: [], coordIndex: coordIndex\n                    });\n                }\n                item.axisModels.push(axisModel);\n            }\n\n            return coordSysLists;\n        }\n\n    });\n\n\n\n/***/ }),\n/* 315 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var formatUtil = __webpack_require__(291);\n    var zrUtil = __webpack_require__(285);\n\n    var helper = {};\n\n    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single'];\n    // Supported coords.\n    var COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n\n    /**\n     * @param {string} coordType\n     * @return {boolean}\n     */\n    helper.isCoordSupported = function (coordType) {\n        return zrUtil.indexOf(COORDS, coordType) >= 0;\n    };\n\n    /**\n     * Create \"each\" method to iterate names.\n     *\n     * @pubilc\n     * @param  {Array.<string>} names\n     * @param  {Array.<string>=} attrs\n     * @return {Function}\n     */\n    helper.createNameEach = function (names, attrs) {\n        names = names.slice();\n        var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n        attrs = (attrs || []).slice();\n        var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n\n        return function (callback, context) {\n            zrUtil.each(names, function (name, index) {\n                var nameObj = {name: name, capital: capitalNames[index]};\n\n                for (var j = 0; j < attrs.length; j++) {\n                    nameObj[attrs[j]] = name + capitalAttrs[j];\n                }\n\n                callback.call(context, nameObj);\n            });\n        };\n    };\n\n    /**\n     * Iterate each dimension name.\n     *\n     * @public\n     * @param {Function} callback The parameter is like:\n     *                            {\n     *                                name: 'angle',\n     *                                capital: 'Angle',\n     *                                axis: 'angleAxis',\n     *                                axisIndex: 'angleAixs',\n     *                                index: 'angleIndex'\n     *                            }\n     * @param {Object} context\n     */\n    helper.eachAxisDim = helper.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n\n    /**\n     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n     * dataZoomModels and 'links' make up one or more graphics.\n     * This function finds the graphic where the source dataZoomModel is in.\n     *\n     * @public\n     * @param {Function} forEachNode Node iterator.\n     * @param {Function} forEachEdgeType edgeType iterator\n     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n     */\n    helper.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\n\n        return function (sourceNode) {\n            var result = {\n                nodes: [],\n                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n            };\n\n            forEachEdgeType(function (edgeType) {\n                result.records[edgeType.name] = {};\n            });\n\n            if (!sourceNode) {\n                return result;\n            }\n\n            absorb(sourceNode, result);\n\n            var existsLink;\n            do {\n                existsLink = false;\n                forEachNode(processSingleNode);\n            }\n            while (existsLink);\n\n            function processSingleNode(node) {\n                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n                    absorb(node, result);\n                    existsLink = true;\n                }\n            }\n\n            return result;\n        };\n\n        function isNodeAbsorded(node, result) {\n            return zrUtil.indexOf(result.nodes, node) >= 0;\n        }\n\n        function isLinked(node, result) {\n            var hasLink = false;\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] && (hasLink = true);\n                });\n            });\n            return hasLink;\n        }\n\n        function absorb(node, result) {\n            result.nodes.push(node);\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] = true;\n                });\n            });\n        }\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 316 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(450);\n    var IntervalScale = __webpack_require__(318);\n    __webpack_require__(451);\n    __webpack_require__(449);\n    var Scale = __webpack_require__(305);\n\n    var numberUtil = __webpack_require__(288);\n    var zrUtil = __webpack_require__(285);\n    var textContain = __webpack_require__(301);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        axis.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var extent = axisHelper.getScaleExtent(axis, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axis.type === 'category' ? scale.getLabel(tick) : tick,\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n/* 317 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(285);\n    var formatUtil = __webpack_require__(291);\n    var classUtil = __webpack_require__(297);\n    var modelUtil = __webpack_require__(293);\n    var ComponentModel = __webpack_require__(296);\n    var colorPaletteMixin = __webpack_require__(332);\n    var env = __webpack_require__(292);\n    var layout = __webpack_require__(298);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', this.getInitialData(option, ecModel));\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Array.<number>} data indices.\n         */\n        getAxisTooltipDataIndex: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n/* 318 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(288);\n    var formatUtil = __webpack_require__(291);\n    var Scale = __webpack_require__(305);\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            var interval = this._interval;\n            var extent = this._extent;\n            var ticks = [];\n\n            // Consider this case: using dataZoom toolbox, zoom and zoom.\n            var safeLimit = 10000;\n\n            if (interval) {\n                var niceExtent = this._niceExtent;\n                var precision = getPrecisionSafe(interval) + 2;\n\n                if (extent[0] < niceExtent[0]) {\n                    ticks.push(extent[0]);\n                }\n                var tick = niceExtent[0];\n\n                while (tick <= niceExtent[1]) {\n                    ticks.push(tick);\n                    // Avoid rounding error\n                    tick = roundingErrorFix(tick + interval, precision);\n                    if (ticks.length > safeLimit) {\n                        return [];\n                    }\n                }\n                // Consider this case: the last item of ticks is smaller\n                // than niceExtent[1] and niceExtent[1] === extent[1].\n                if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceExtent[1])) {\n                    ticks.push(extent[1]);\n                }\n            }\n\n            return ticks;\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} n\n         * @return {number}\n         */\n        getLabel: function (data) {\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n            // var niceSpan = numberUtil.nice(span, false);\n            var step = roundingErrorFix(\n                numberUtil.nice(span / splitNumber, true),\n                Math.max(\n                    getPrecisionSafe(extent[0]),\n                    getPrecisionSafe(extent[1])\n                // extent may be [0, 1], and step should have 1 more digits.\n                // To make it safe we add 2 more digits\n                ) + 2\n            );\n\n            var precision = getPrecisionSafe(step) + 2;\n            // Niced extent inside original extent\n            var niceExtent = [\n                roundingErrorFix(mathCeil(extent[0] / step) * step, precision),\n                roundingErrorFix(mathFloor(extent[1] / step) * step, precision)\n            ];\n\n            this._interval = step;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundingErrorFix(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundingErrorFix(mathCeil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n/* 319 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(285);\n    var clazz = __webpack_require__(297);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n/* 320 */\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n/* 321 */,\n/* 322 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n/* 323 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(285);\n\n    var Style = __webpack_require__(346);\n\n    var Element = __webpack_require__(337);\n    var RectText = __webpack_require__(518);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n/* 324 */\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n/* 325 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(285);\n    var symbolUtil = __webpack_require__(333);\n    var graphic = __webpack_require__(287);\n    var numberUtil = __webpack_require__(288);\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n/* 326 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(331);\n    var completeDimensions = __webpack_require__(434);\n    var zrUtil = __webpack_require__(285);\n    var modelUtil = __webpack_require__(293);\n    var CoordinateSystem = __webpack_require__(312);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\n        }\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['x', 'y', 'z']);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, ['lng', 'lat', 'value'])\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n/* 327 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(287);\n    var zrUtil = __webpack_require__(285);\n    var echarts = __webpack_require__(286);\n\n    __webpack_require__(330);\n\n    __webpack_require__(398);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n/* 328 */\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * Calculate slider move result.\n     *\n     * @param {number} delta Move length.\n     * @param {Array.<number>} handleEnds handleEnds[0] and be bigger then handleEnds[1].\n     *                                    handleEnds will be modified in this method.\n     * @param {Array.<number>} extent handleEnds is restricted by extent.\n     *                                extent[0] should less or equals than extent[1].\n     * @param {string} mode 'rigid': Math.abs(handleEnds[0] - handleEnds[1]) remain unchanged,\n     *                      'cross' handleEnds[0] can be bigger then handleEnds[1],\n     *                      'push' handleEnds[0] can not be bigger then handleEnds[1],\n     *                              when they touch, one push other.\n     * @param {number} handleIndex If mode is 'rigid', handleIndex is not required.\n     * @param {Array.<number>} The input handleEnds.\n     */\n    module.exports = function (delta, handleEnds, extent, mode, handleIndex) {\n        if (!delta) {\n            return handleEnds;\n        }\n\n        if (mode === 'rigid') {\n            delta = getRealDelta(delta, handleEnds, extent);\n            handleEnds[0] += delta;\n            handleEnds[1] += delta;\n        }\n        else {\n            delta = getRealDelta(delta, handleEnds[handleIndex], extent);\n            handleEnds[handleIndex] += delta;\n\n            if (mode === 'push' && handleEnds[0] > handleEnds[1]) {\n                handleEnds[1 - handleIndex] = handleEnds[handleIndex];\n            }\n        }\n\n        return handleEnds;\n\n        function getRealDelta(delta, handleEnds, extent) {\n            var handleMinMax = !handleEnds.length\n                ? [handleEnds, handleEnds]\n                : handleEnds.slice();\n            handleEnds[0] > handleEnds[1] && handleMinMax.reverse();\n\n            if (delta < 0 && handleMinMax[0] + delta < extent[0]) {\n                delta = extent[0] - handleMinMax[0];\n            }\n            if (delta > 0 && handleMinMax[1] + delta > extent[1]) {\n                delta = extent[1] - handleMinMax[1];\n            }\n            return delta;\n        }\n    };\n\n\n/***/ }),\n/* 329 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(296);\n    var zrUtil = __webpack_require__(285);\n    var axisModelCreator = __webpack_require__(427);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(426));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n/* 330 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(298);\n    var axisHelper = __webpack_require__(316);\n\n    var zrUtil = __webpack_require__(285);\n    var Cartesian2D = __webpack_require__(430);\n    var Axis2D = __webpack_require__(428);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(431);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this._model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this._model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this._model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n        else {\n            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n                if (coordList[i].getAxis('x').index === xAxisIndex\n                    || coordList[i].getAxis('y').index === yAxisIndex\n                ) {\n                    return coordList[i];\n                }\n            }\n        }\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(312).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n/* 331 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(294);\n    var DataDiffer = __webpack_require__(433);\n\n    var zrUtil = __webpack_require__(285);\n    var modelUtil = __webpack_require__(293);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string>} dimensions\n     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {number}\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var nearestIdx = -1;\n        if (dimData) {\n            var minDist = Number.MAX_VALUE;\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var diff = value - this.get(dim, i, stack);\n                var dist = Math.abs(diff);\n                if (\n                    diff <= maxDistance\n                    && (dist < minDist\n                        // For the case of two data are same on xAxis, which has sequence data.\n                        // Show the nearest index\n                        // https://github.com/ecomfe/echarts/issues/2869\n                        || (dist === minDist && diff > 0)\n                    )\n                ) {\n                    minDist = dist;\n                    nearestIdx = i;\n                }\n            }\n        }\n        return nearestIdx;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(64)))\n\n/***/ }),\n/* 332 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(297);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n/* 333 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(287);\n    var BoundingRect = __webpack_require__(295);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n/* 334 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(307);\n    var componentUtil = __webpack_require__(319);\n    var clazzUtil = __webpack_require__(297);\n    var modelUtil = __webpack_require__(293);\n    var zrUtil = __webpack_require__(285);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n/* 335 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(307);\n    var componentUtil = __webpack_require__(319);\n    var clazzUtil = __webpack_require__(297);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n/* 336 */,\n/* 337 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(342);\n    var Eventful = __webpack_require__(300);\n    var Transformable = __webpack_require__(530);\n    var Animatable = __webpack_require__(528);\n    var zrUtil = __webpack_require__(285);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n/* 338 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(500);\n    var color = __webpack_require__(303);\n    var util = __webpack_require__(285);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n/* 339 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n/***/ }),\n/* 340 */\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n/* 341 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n/* 342 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n/* 343 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(306);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n/* 344 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(323);\n    var BoundingRect = __webpack_require__(295);\n    var zrUtil = __webpack_require__(285);\n\n    var LRU = __webpack_require__(341);\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n/* 345 */\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n/* 346 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textPositionRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n/* 347 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(517);\n    var smoothBezier = __webpack_require__(516);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n/* 348 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\nvar echarts = __webpack_require__(286);\n__webpack_require__(386);\n__webpack_require__(393);\n\n__webpack_require__(420);\n__webpack_require__(419);\n__webpack_require__(414);\n__webpack_require__(401);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'barPercent',\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    id: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '200px'\n    },\n    height: {\n      type: String,\n      default: '200px'\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  mounted: function mounted() {\n    this.initChart();\n  },\n\n  methods: {\n    initChart: function initChart() {\n      this.chart = echarts.init(document.getElementById(this.id));\n      var xData = function () {\n        var data = [];\n        for (var i = 1; i < 13; i++) {\n          data.push(i + ' \\u6708\\u4EFD');\n        }\n        return data;\n      }();\n      this.chart.setOption({\n        backgroundColor: '#344b58',\n        title: {\n          text: '统计',\n          subtext: 'from http://gallery.echartsjs.com',\n          x: '4%',\n          textStyle: {\n            color: '#fff',\n            fontSize: '22'\n          },\n          subtextStyle: {\n            color: '#90979c',\n            fontSize: '16'\n          }\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            textStyle: {\n              color: '#fff'\n            }\n          }\n        },\n        grid: {\n          borderWidth: 0,\n          top: 110,\n          bottom: 95,\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        legend: {\n          x: '15%',\n          top: '10%',\n          textStyle: {\n            color: '#90979c'\n          },\n          data: ['女', '男', '平均']\n        },\n        calculable: true,\n        xAxis: [{\n          type: 'category',\n          axisLine: {\n            lineStyle: {\n              color: '#90979c'\n            }\n          },\n          splitLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          splitArea: {\n            show: false\n          },\n          axisLabel: {\n            interval: 0\n\n          },\n          data: xData\n        }],\n        yAxis: [{\n          type: 'value',\n          splitLine: {\n            show: false\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#90979c'\n            }\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            interval: 0\n          },\n          splitArea: {\n            show: false\n          }\n        }],\n        dataZoom: [{\n          show: true,\n          height: 30,\n          xAxisIndex: [0],\n          bottom: 30,\n          start: 10,\n          end: 80,\n          handleIcon: 'path://M306.1,413c0,2.2-1.8,4-4,4h-59.8c-2.2,0-4-1.8-4-4V200.8c0-2.2,1.8-4,4-4h59.8c2.2,0,4,1.8,4,4V413z',\n          handleSize: '110%',\n          handleStyle: {\n            color: '#d3dee5'\n\n          },\n          textStyle: {\n            color: '#fff' },\n          borderColor: '#90979c'\n\n        }, {\n          type: 'inside',\n          show: true,\n          height: 15,\n          start: 1,\n          end: 35\n        }],\n        series: [{\n          name: '女',\n          type: 'bar',\n          stack: '总量',\n          barMaxWidth: 35,\n          barGap: '10%',\n          itemStyle: {\n            normal: {\n              color: 'rgba(255,144,128,1)',\n              label: {\n                show: true,\n                textStyle: {\n                  color: '#fff'\n                },\n                position: 'insideTop',\n                formatter: function formatter(p) {\n                  return p.value > 0 ? p.value : '';\n                }\n              }\n            }\n          },\n          data: [709, 1917, 2455, 2610, 1719, 1433, 1544, 3285, 5208, 3372, 2484, 4078]\n        }, {\n          name: '男',\n          type: 'bar',\n          stack: '总量',\n          itemStyle: {\n            normal: {\n              color: 'rgba(0,191,183,1)',\n              barBorderRadius: 0,\n              label: {\n                show: true,\n                position: 'top',\n                formatter: function formatter(p) {\n                  return p.value > 0 ? p.value : '';\n                }\n              }\n            }\n          },\n          data: [327, 1776, 507, 1200, 800, 482, 204, 1390, 1001, 951, 381, 220]\n        }, {\n          name: '平均',\n          type: 'line',\n          stack: '总量',\n          symbolSize: 10,\n          symbol: 'circle',\n          itemStyle: {\n            normal: {\n              color: 'rgba(252,230,48,1)',\n              barBorderRadius: 0,\n              label: {\n                show: true,\n                position: 'top',\n                formatter: function formatter(p) {\n                  return p.value > 0 ? p.value : '';\n                }\n              }\n            }\n          },\n          data: [1036, 3693, 2962, 3810, 2519, 1915, 1748, 4675, 6209, 4323, 2865, 4298]\n        }]\n      });\n    }\n  }\n});\n\n/***/ }),\n/* 349 */,\n/* 350 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_components_Charts_mixchart__ = __webpack_require__(468);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_components_Charts_mixchart___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_components_Charts_mixchart__);\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  components: { mixchart: __WEBPACK_IMPORTED_MODULE_0_components_Charts_mixchart___default.a }\n});\n\n/***/ }),\n/* 351 */,\n/* 352 */,\n/* 353 */,\n/* 354 */,\n/* 355 */,\n/* 356 */,\n/* 357 */,\n/* 358 */,\n/* 359 */,\n/* 360 */,\n/* 361 */,\n/* 362 */,\n/* 363 */,\n/* 364 */,\n/* 365 */,\n/* 366 */,\n/* 367 */,\n/* 368 */,\n/* 369 */,\n/* 370 */,\n/* 371 */,\n/* 372 */,\n/* 373 */,\n/* 374 */,\n/* 375 */,\n/* 376 */,\n/* 377 */,\n/* 378 */,\n/* 379 */,\n/* 380 */,\n/* 381 */,\n/* 382 */,\n/* 383 */,\n/* 384 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(275)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".chart-container[data-v-cb20660c]{position:relative;width:100%;height:90%;padding-bottom:40px}\", \"\", {\"version\":3,\"sources\":[\"D:/vue/cloud-admin/src/views/charts/mixchart.vue\"],\"names\":[],\"mappings\":\"AACA,kCACI,kBAAmB,AACnB,WAAY,AACZ,WAAY,AACZ,mBAAqB,CACxB\",\"file\":\"mixchart.vue\",\"sourcesContent\":[\"\\n.chart-container[data-v-cb20660c]{\\r\\n    position: relative;\\r\\n    width: 100%;\\r\\n    height: 90%;\\r\\n    padding-bottom: 40px;\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 385 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(285);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\n    ];\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n/* 386 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(285);\n\n    __webpack_require__(330);\n\n    __webpack_require__(387);\n    __webpack_require__(388);\n\n    var barLayoutGrid = __webpack_require__(435);\n    var echarts = __webpack_require__(286);\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    __webpack_require__(327);\n\n\n/***/ }),\n/* 387 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(389).extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n/***/ }),\n/* 388 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(285);\n    var graphic = __webpack_require__(287);\n    var helper = __webpack_require__(391);\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(__webpack_require__(294).prototype, __webpack_require__(390));\n\n    var BarView = __webpack_require__(286).extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d') {\n                this._renderOnCartesian(seriesModel, ecModel, api);\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _renderOnCartesian: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var isHorizontal = baseAxis.isHorizontal();\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getRectItemLayout(data, dataIndex, itemModel);\n                    var el = createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel);\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getRectItemLayout(data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = createRect(data, newIndex, itemModel, layout, isHorizontal, animationModel, true);\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    el && removeRect(dataIndex, animationModel, el);\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        removeRect(el.dataIndex, ecModel, el);\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    function createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n        var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n        // Animation\n        if (animationModel) {\n            var rectShape = rect.shape;\n            var animateProperty = isHorizontal ? 'height' : 'width';\n            var animateTarget = {};\n            rectShape[animateProperty] = 0;\n            animateTarget[animateProperty] = layout[animateProperty];\n            graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                shape: animateTarget\n            }, animationModel, dataIndex);\n        }\n\n        return rect;\n    }\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function getRectItemLayout(data, dataIndex, itemModel) {\n        var layout = data.getItemLayout(dataIndex);\n        var fixedLineWidth = getLineWidth(itemModel, layout);\n\n        // fix layout with lineWidth\n        var signX = layout.width > 0 ? 1 : -1;\n        var signY = layout.height > 0 ? 1 : -1;\n        return {\n            x: layout.x + signX * fixedLineWidth / 2,\n            y: layout.y + signY * fixedLineWidth / 2,\n            width: layout.width - signX * fixedLineWidth,\n            height: layout.height - signY * fixedLineWidth\n        };\n    }\n\n    function updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        helper.setLabel(\n            el.style, hoverStyle, itemModel, color,\n            seriesModel, dataIndex, labelPositionOutside\n        );\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n/***/ }),\n/* 389 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var SeriesModel = __webpack_require__(317);\n    var createListFromArray = __webpack_require__(326);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'cartesian2d') {\n                    throw new Error('Bar only support cartesian2d coordinateSystem');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n/***/ }),\n/* 390 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n\n    var getBarItemStyle = __webpack_require__(304)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n/***/ }),\n/* 391 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(285);\n    var graphic = __webpack_require__(287);\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = '';\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = '';\n        }\n    };\n\n    function setLabel(style, model, color, labelText, labelPositionOutside) {\n        graphic.setText(style, model, color);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 392 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(287);\n    var Symbol = __webpack_require__(325);\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n/* 393 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(285);\n    var echarts = __webpack_require__(286);\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(394);\n    __webpack_require__(395);\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(453), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(436), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(448), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(327);\n\n\n/***/ }),\n/* 394 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(326);\n    var SeriesModel = __webpack_require__(317);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n/* 395 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(285);\n    var SymbolDraw = __webpack_require__(392);\n    var Symbol = __webpack_require__(325);\n    var lineAnimationDiff = __webpack_require__(396);\n    var graphic = __webpack_require__(287);\n    var modelUtil = __webpack_require__(293);\n    var polyHelper = __webpack_require__(397);\n    var ChartView = __webpack_require__(334);\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n/* 396 */\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n/* 397 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(290);\n    var vec2 = __webpack_require__(289);\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n/* 398 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(329);\n\n    __webpack_require__(400);\n\n\n/***/ }),\n/* 399 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(285);\n    var formatUtil = __webpack_require__(291);\n    var graphic = __webpack_require__(287);\n    var Model = __webpack_require__(294);\n    var numberUtil = __webpack_require__(288);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(289);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\n            // To radian.\n            labelRotation = labelRotation * PI / 180;\n\n            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelBeforeFormat = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelBeforeFormat;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            function isTwoLabelOverlapped(current, next) {\n                var firstRect = current && current.getBoundingRect().clone();\n                var nextRect = next && next.getBoundingRect().clone();\n                if (firstRect && nextRect) {\n                    firstRect.applyTransform(current.getLocalTransform());\n                    nextRect.applyTransform(next.getLocalTransform());\n                    return firstRect.intersect(nextRect);\n                }\n            }\n\n            // If min or max are user set, we need to check\n            // If the tick on min(max) are overlap on their neighbour tick\n            // If they are overlapped, we need to hide the min(max) tick label\n            if (axisModel.getMin() != null) {\n                var firstLabel = textEls[0];\n                var nextLabel = textEls[1];\n                if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n                    firstLabel.ignore = true;\n                }\n            }\n            if (axisModel.getMax() != null) {\n                var lastLabel = textEls[textEls.length - 1];\n                var prevLabel = textEls[textEls.length - 2];\n                if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n                    lastLabel.ignore = true;\n                }\n            }\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.verticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @inner\n     */\n    function innerTextLayout(opt, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            verticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            verticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            verticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            verticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n/* 400 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(285);\n    var graphic = __webpack_require__(287);\n    var AxisBuilder = __webpack_require__(399);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var AxisView = __webpack_require__(286).extendComponentView({\n\n        type: 'axis',\n\n        render: function (axisModel, ecModel) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = layoutAxis(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    AxisView.extend({\n        type: 'xAxis'\n    });\n    AxisView.extend({\n        type: 'yAxis'\n    });\n\n    /**\n     * @inner\n     */\n    function layoutAxis(gridModel, axisModel) {\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        if (axis.onZero) {\n            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\n        }\n\n        if (axisModel.getModel('axisTick').get('inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (axisModel.getModel('axisLabel').get('inside')) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\n        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    }\n\n\n/***/ }),\n/* 401 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * DataZoom component entry\n */\n\n\n    __webpack_require__(410);\n\n    __webpack_require__(313);\n    __webpack_require__(314);\n\n    __webpack_require__(405);\n    __webpack_require__(406);\n\n    __webpack_require__(403);\n    __webpack_require__(404);\n\n    __webpack_require__(408);\n    __webpack_require__(407);\n\n\n\n/***/ }),\n/* 402 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Axis operator\n */\n\n\n    var zrUtil = __webpack_require__(285);\n    var numberUtil = __webpack_require__(288);\n    var helper = __webpack_require__(315);\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n\n    /**\n     * Operate single axis.\n     * One axis can only operated by one axis operator.\n     * Different dataZoomModels may be defined to operate the same axis.\n     * (i.e. 'inside' data zoom and 'slider' data zoom components)\n     * So dataZoomModels share one axisProxy in that case.\n     *\n     * @class\n     */\n    var AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._dimName = dimName;\n\n        /**\n         * @private\n         */\n        this._axisIndex = axisIndex;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._valueWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._percentWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._dataExtent;\n\n        /**\n         * @readOnly\n         * @type {module: echarts/model/Global}\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @private\n         * @type {module: echarts/component/dataZoom/DataZoomModel}\n         */\n        this._dataZoomModel = dataZoomModel;\n    };\n\n    AxisProxy.prototype = {\n\n        constructor: AxisProxy,\n\n        /**\n         * Whether the axisProxy is hosted by dataZoomModel.\n         *\n         * @public\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         * @return {boolean}\n         */\n        hostedBy: function (dataZoomModel) {\n            return this._dataZoomModel === dataZoomModel;\n        },\n\n        /**\n         * @return {Array.<number>} Value can only be NaN or finite value.\n         */\n        getDataValueWindow: function () {\n            return this._valueWindow.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getDataPercentWindow: function () {\n            return this._percentWindow.slice();\n        },\n\n        /**\n         * @public\n         * @param {number} axisIndex\n         * @return {Array} seriesModels\n         */\n        getTargetSeriesModels: function () {\n            var seriesModels = [];\n            var ecModel = this.ecModel;\n\n            ecModel.eachSeries(function (seriesModel) {\n                if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n                    var dimName = this._dimName;\n                    var axisModel = ecModel.queryComponents({\n                        mainType: dimName + 'Axis',\n                        index: seriesModel.get(dimName + 'AxisIndex'),\n                        id: seriesModel.get(dimName + 'AxisId')\n                    })[0];\n                    if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n                        seriesModels.push(seriesModel);\n                    }\n                }\n            }, this);\n\n            return seriesModels;\n        },\n\n        getAxisModel: function () {\n            return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n        },\n\n        getOtherAxisModel: function () {\n            var axisDim = this._dimName;\n            var ecModel = this.ecModel;\n            var axisModel = this.getAxisModel();\n            var isCartesian = axisDim === 'x' || axisDim === 'y';\n            var otherAxisDim;\n            var coordSysIndexName;\n            if (isCartesian) {\n                coordSysIndexName = 'gridIndex';\n                otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n            }\n            else {\n                coordSysIndexName = 'polarIndex';\n                otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n            }\n            var foundOtherAxisModel;\n            ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n                if ((otherAxisModel.get(coordSysIndexName) || 0)\n                    === (axisModel.get(coordSysIndexName) || 0)\n                ) {\n                    foundOtherAxisModel = otherAxisModel;\n                }\n            });\n            return foundOtherAxisModel;\n        },\n\n        /**\n         * Only calculate by given range and this._dataExtent, do not change anything.\n         *\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        calculateDataWindow: function (opt) {\n            var dataExtent = this._dataExtent;\n            var axisModel = this.getAxisModel();\n            var scale = axisModel.axis.scale;\n            var percentExtent = [0, 100];\n            var percentWindow = [\n                opt.start,\n                opt.end\n            ];\n            var valueWindow = [];\n\n            // In percent range is used and axis min/max/scale is set,\n            // window should be based on min/max/0, but should not be\n            // based on the extent of filtered data.\n            dataExtent = dataExtent.slice();\n            fixExtentByAxis(dataExtent, axisModel);\n\n            each(['startValue', 'endValue'], function (prop) {\n                valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n            });\n\n            // Normalize bound.\n            each([0, 1], function (idx) {\n                var boundValue = valueWindow[idx];\n                var boundPercent = percentWindow[idx];\n\n                // start/end has higher priority over startValue/endValue,\n                // because start/end can be consistent among different type\n                // of axis but startValue/endValue not.\n\n                if (boundPercent != null || boundValue == null) {\n                    if (boundPercent == null) {\n                        boundPercent = percentExtent[idx];\n                    }\n                    // Use scale.parse to math round for category or time axis.\n                    boundValue = scale.parse(numberUtil.linearMap(\n                        boundPercent, percentExtent, dataExtent, true\n                    ));\n                }\n                else { // boundPercent == null && boundValue != null\n                    boundPercent = numberUtil.linearMap(\n                        boundValue, dataExtent, percentExtent, true\n                    );\n                }\n                // valueWindow[idx] = round(boundValue);\n                // percentWindow[idx] = round(boundPercent);\n                valueWindow[idx] = boundValue;\n                percentWindow[idx] = boundPercent;\n            });\n\n            return {\n                valueWindow: asc(valueWindow),\n                percentWindow: asc(percentWindow)\n            };\n        },\n\n        /**\n         * Notice: reset should not be called before series.restoreData() called,\n         * so it is recommanded to be called in \"process stage\" but not \"model init\n         * stage\".\n         *\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        reset: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            // Culculate data window and data extent, and record them.\n            this._dataExtent = calculateDataExtent(\n                this._dimName, this.getTargetSeriesModels()\n            );\n            var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n            this._valueWindow = dataWindow.valueWindow;\n            this._percentWindow = dataWindow.percentWindow;\n\n            // Update axis setting then.\n            setAxisModel(this);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        restore: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            this._valueWindow = this._percentWindow = null;\n            setAxisModel(this, true);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        filterData: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            var axisDim = this._dimName;\n            var seriesModels = this.getTargetSeriesModels();\n            var filterMode = dataZoomModel.get('filterMode');\n            var valueWindow = this._valueWindow;\n\n            // FIXME\n            // Toolbox may has dataZoom injected. And if there are stacked bar chart\n            // with NaN data, NaN will be filtered and stack will be wrong.\n            // So we need to force the mode to be set empty.\n            // In fect, it is not a big deal that do not support filterMode-'filter'\n            // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n            // selection\" some day, which might need \"adapt to data extent on the\n            // otherAxis\", which is disabled by filterMode-'empty'.\n            var otherAxisModel = this.getOtherAxisModel();\n            if (dataZoomModel.get('$fromToolbox')\n                && otherAxisModel\n                && otherAxisModel.get('type') === 'category'\n            ) {\n                filterMode = 'empty';\n            }\n\n            // Process series data\n            each(seriesModels, function (seriesModel) {\n                var seriesData = seriesModel.getData();\n\n                seriesData && each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    if (filterMode === 'empty') {\n                        seriesModel.setData(\n                            seriesData.map(dim, function (value) {\n                                return !isInWindow(value) ? NaN : value;\n                            })\n                        );\n                    }\n                    else {\n                        seriesData.filterSelf(dim, isInWindow);\n                    }\n                });\n            });\n\n            function isInWindow(value) {\n                return value >= valueWindow[0] && value <= valueWindow[1];\n            }\n        }\n    };\n\n    function calculateDataExtent(axisDim, seriesModels) {\n        var dataExtent = [Infinity, -Infinity];\n\n        each(seriesModels, function (seriesModel) {\n            var seriesData = seriesModel.getData();\n            if (seriesData) {\n                each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    var seriesExtent = seriesData.getDataExtent(dim);\n                    seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n                    seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n                });\n            }\n        }, this);\n\n        if (dataExtent[1] < dataExtent[0]) {\n            dataExtent = [NaN, NaN];\n        }\n\n        return dataExtent;\n    }\n\n    function fixExtentByAxis(dataExtent, axisModel) {\n        var min = axisModel.getMin(true);\n        if (min != null && min !== 'dataMin') {\n            dataExtent[0] = min;\n        }\n        var max = axisModel.getMax(true);\n        if (max != null && max !== 'dataMax') {\n            dataExtent[1] = max;\n        }\n\n        if (!axisModel.get('scale', true)) {\n            dataExtent[0] > 0 && (dataExtent[0] = 0);\n            dataExtent[1] < 0 && (dataExtent[1] = 0);\n        }\n\n        return dataExtent;\n    }\n\n    function setAxisModel(axisProxy, isRestore) {\n        var axisModel = axisProxy.getAxisModel();\n\n        var percentWindow = axisProxy._percentWindow;\n        var valueWindow = axisProxy._valueWindow;\n\n        if (!percentWindow) {\n            return;\n        }\n\n        // [0, 500]: arbitrary value, guess axis extent.\n        var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n        // isRestore or isFull\n        var useOrigin = isRestore || (percentWindow[0] === 0 && percentWindow[1] === 100);\n\n        axisModel.setRange(\n            useOrigin ? null : +valueWindow[0].toFixed(precision),\n            useOrigin ? null : +valueWindow[1].toFixed(precision)\n        );\n    }\n\n    module.exports = AxisProxy;\n\n\n\n/***/ }),\n/* 403 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    module.exports = __webpack_require__(313).extend({\n\n        type: 'dataZoom.inside',\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            disabled: false,   // Whether disable this inside zoom.\n            zoomLock: false  // Whether disable zoom but only pan.\n        }\n    });\n\n\n/***/ }),\n/* 404 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var DataZoomView = __webpack_require__(314);\n    var zrUtil = __webpack_require__(285);\n    var sliderMove = __webpack_require__(328);\n    var roams = __webpack_require__(409);\n    var bind = zrUtil.bind;\n\n    var InsideZoomView = DataZoomView.extend({\n\n        type: 'dataZoom.inside',\n\n        /**\n         * @override\n         */\n        init: function (ecModel, api) {\n            /**\n             * 'throttle' is used in this.dispatchAction, so we save range\n             * to avoid missing some 'pan' info.\n             * @private\n             * @type {Array.<number>}\n             */\n            this._range;\n        },\n\n        /**\n         * @override\n         */\n        render: function (dataZoomModel, ecModel, api, payload) {\n            InsideZoomView.superApply(this, 'render', arguments);\n\n            // Notice: origin this._range should be maintained, and should not be re-fetched\n            // from dataZoomModel when payload.type is 'dataZoom', otherwise 'pan' or 'zoom'\n            // info will be missed because of 'throttle' of this.dispatchAction.\n            if (roams.shouldRecordRange(payload, dataZoomModel.id)) {\n                this._range = dataZoomModel.getPercentRange();\n            }\n\n            // Reset controllers.\n            zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n\n                var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n                    return roams.generateCoordId(coordInfo.model);\n                });\n\n                zrUtil.each(coordInfoList, function (coordInfo) {\n                    var coordModel = coordInfo.model;\n\n                    roams.register(\n                        api,\n                        {\n                            coordId: roams.generateCoordId(coordModel),\n                            allCoordIds: allCoordIds,\n                            containsPoint: function (x, y) {\n                                return coordModel.coordinateSystem.containPoint([x, y]);\n                            },\n                            dataZoomId: dataZoomModel.id,\n                            throttleRate: dataZoomModel.get('throttle', true),\n                            panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n                            zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName)\n                        }\n                    );\n                }, this);\n\n            }, this);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function () {\n            roams.unregister(this.api, this.dataZoomModel.id);\n            InsideZoomView.superApply(this, 'dispose', arguments);\n            this._range = null;\n        },\n\n        /**\n         * @private\n         */\n        _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n            if (this.dataZoomModel.option.disabled) {\n                return this._range;\n            }\n\n            var range = this._range.slice();\n\n            // Calculate transform by the first axis.\n            var axisModel = coordInfo.axisModels[0];\n            if (!axisModel) {\n                return;\n            }\n\n            var directionInfo = getDirectionInfo[coordSysName](\n                [oldX, oldY], [newX, newY], axisModel, controller, coordInfo\n            );\n\n            var percentDelta = directionInfo.signal\n                * (range[1] - range[0])\n                * directionInfo.pixel / directionInfo.pixelLength;\n\n            sliderMove(percentDelta, range, [0, 100], 'rigid');\n\n            return (this._range = range);\n        },\n\n        /**\n         * @private\n         */\n        _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n            var option = this.dataZoomModel.option;\n\n            if (option.disabled || option.zoomLock) {\n                return this._range;\n            }\n\n            var range = this._range.slice();\n\n            // Calculate transform by the first axis.\n            var axisModel = coordInfo.axisModels[0];\n            if (!axisModel) {\n                return;\n            }\n\n            var directionInfo = getDirectionInfo[coordSysName](\n                null, [mouseX, mouseY], axisModel, controller, coordInfo\n            );\n\n            var percentPoint = (directionInfo.pixel - directionInfo.pixelStart) /\n                directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n\n            scale = Math.max(1 / scale, 0);\n            range[0] = (range[0] - percentPoint) * scale + percentPoint;\n            range[1] = (range[1] - percentPoint) * scale + percentPoint;\n            return (this._range = fixRange(range));\n        }\n\n    });\n\n    var getDirectionInfo = {\n\n        grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n            var axis = axisModel.axis;\n            var ret = {};\n            var rect = coordInfo.model.coordinateSystem.getRect();\n            oldPoint = oldPoint || [0, 0];\n\n            if (axis.dim === 'x') {\n                ret.pixel = newPoint[0] - oldPoint[0];\n                ret.pixelLength = rect.width;\n                ret.pixelStart = rect.x;\n                ret.signal = axis.inverse ? 1 : -1;\n            }\n            else { // axis.dim === 'y'\n                ret.pixel = newPoint[1] - oldPoint[1];\n                ret.pixelLength = rect.height;\n                ret.pixelStart = rect.y;\n                ret.signal = axis.inverse ? -1 : 1;\n            }\n\n            return ret;\n        },\n\n        polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n            var axis = axisModel.axis;\n            var ret = {};\n            var polar = coordInfo.model.coordinateSystem;\n            var radiusExtent = polar.getRadiusAxis().getExtent();\n            var angleExtent = polar.getAngleAxis().getExtent();\n\n            oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n            newPoint = polar.pointToCoord(newPoint);\n\n            if (axisModel.mainType === 'radiusAxis') {\n                ret.pixel = newPoint[0] - oldPoint[0];\n                // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n                // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n                ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n                ret.pixelStart = radiusExtent[0];\n                ret.signal = axis.inverse ? 1 : -1;\n            }\n            else { // 'angleAxis'\n                ret.pixel = newPoint[1] - oldPoint[1];\n                // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n                // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n                ret.pixelLength = angleExtent[1] - angleExtent[0];\n                ret.pixelStart = angleExtent[0];\n                ret.signal = axis.inverse ? -1 : 1;\n            }\n\n            return ret;\n        },\n\n        singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n            var axis = axisModel.axis;\n            var rect = coordInfo.model.coordinateSystem.getRect();\n            var ret = {};\n\n            oldPoint = oldPoint || [0, 0];\n\n            if (axis.orient === 'horizontal') {\n                ret.pixel = newPoint[0] - oldPoint[0];\n                ret.pixelLength = rect.width;\n                ret.pixelStart = rect.x;\n                ret.signal = axis.inverse ? 1 : -1;\n            }\n            else { // 'vertical'\n                ret.pixel = newPoint[1] - oldPoint[1];\n                ret.pixelLength = rect.height;\n                ret.pixelStart = rect.y;\n                ret.signal = axis.inverse ? -1 : 1;\n            }\n\n            return ret;\n        }\n    };\n\n    function fixRange(range) {\n        // Clamp, using !(<= or >=) to handle NaN.\n        // jshint ignore:start\n        var bound = [0, 100];\n        !(range[0] <= bound[1]) && (range[0] = bound[1]);\n        !(range[1] <= bound[1]) && (range[1] = bound[1]);\n        !(range[0] >= bound[0]) && (range[0] = bound[0]);\n        !(range[1] >= bound[0]) && (range[1] = bound[0]);\n        // jshint ignore:end\n\n        return range;\n    }\n\n    module.exports = InsideZoomView;\n\n\n/***/ }),\n/* 405 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    var DataZoomModel = __webpack_require__(313);\n\n    var SliderZoomModel = DataZoomModel.extend({\n\n        type: 'dataZoom.slider',\n\n        layoutMode: 'box',\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            show: true,\n\n            // ph => placeholder. Using placehoder here because\n            // deault value can only be drived in view stage.\n            right: 'ph',  // Default align to grid rect.\n            top: 'ph',    // Default align to grid rect.\n            width: 'ph',  // Default align to grid rect.\n            height: 'ph', // Default align to grid rect.\n            left: null,   // Default align to grid rect.\n            bottom: null, // Default align to grid rect.\n\n            backgroundColor: 'rgba(47,69,84,0)',    // Background of slider zoom component.\n            // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n                                                    // highest priority, remain for compatibility of\n                                                    // previous version, but not recommended any more.\n            dataBackground: {\n                lineStyle: {\n                    color: '#2f4554',\n                    width: 0.5,\n                    opacity: 0.3\n                },\n                areaStyle: {\n                    color: 'rgba(47,69,84,0.3)',\n                    opacity: 0.3\n                }\n            },\n            borderColor: '#ddd',                    // border color of the box. For compatibility,\n                                                    // if dataBackgroundColor is set, borderColor\n                                                    // is ignored.\n\n            fillerColor: 'rgba(167,183,204,0.4)',     // Color of selected area.\n            // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n            // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n            handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n            // Percent of the slider height\n            handleSize: '100%',\n\n            handleStyle: {\n                color: '#a7b7cc'\n            },\n\n            labelPrecision: null,\n            labelFormatter: null,\n            showDetail: true,\n            showDataShadow: 'auto',                 // Default auto decision.\n            realtime: true,\n            zoomLock: false,                        // Whether disable zoom.\n            textStyle: {\n                color: '#333'\n            }\n        }\n\n    });\n\n    module.exports = SliderZoomModel;\n\n\n\n/***/ }),\n/* 406 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(285);\n    var graphic = __webpack_require__(287);\n    var throttle = __webpack_require__(320);\n    var DataZoomView = __webpack_require__(314);\n    var Rect = graphic.Rect;\n    var numberUtil = __webpack_require__(288);\n    var linearMap = numberUtil.linearMap;\n    var layout = __webpack_require__(298);\n    var sliderMove = __webpack_require__(328);\n    var asc = numberUtil.asc;\n    var bind = zrUtil.bind;\n    // var mathMax = Math.max;\n    var each = zrUtil.each;\n\n    // Constants\n    var DEFAULT_LOCATION_EDGE_GAP = 7;\n    var DEFAULT_FRAME_BORDER_WIDTH = 1;\n    var DEFAULT_FILLER_SIZE = 30;\n    var HORIZONTAL = 'horizontal';\n    var VERTICAL = 'vertical';\n    var LABEL_GAP = 5;\n    var SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\n\n    var SliderZoomView = DataZoomView.extend({\n\n        type: 'dataZoom.slider',\n\n        init: function (ecModel, api) {\n\n            /**\n             * @private\n             * @type {Object}\n             */\n            this._displayables = {};\n\n            /**\n             * @private\n             * @type {string}\n             */\n            this._orient;\n\n            /**\n             * [0, 100]\n             * @private\n             */\n            this._range;\n\n            /**\n             * [coord of the first handle, coord of the second handle]\n             * @private\n             */\n            this._handleEnds;\n\n            /**\n             * [length, thick]\n             * @private\n             * @type {Array.<number>}\n             */\n            this._size;\n\n            /**\n             * @private\n             * @type {number}\n             */\n            this._handleWidth;\n\n            /**\n             * @private\n             * @type {number}\n             */\n            this._handleHeight;\n\n            /**\n             * @private\n             */\n            this._location;\n\n            /**\n             * @private\n             */\n            this._dragging;\n\n            /**\n             * @private\n             */\n            this._dataShadowInfo;\n\n            this.api = api;\n        },\n\n        /**\n         * @override\n         */\n        render: function (dataZoomModel, ecModel, api, payload) {\n            SliderZoomView.superApply(this, 'render', arguments);\n\n            throttle.createOrUpdate(\n                this,\n                '_dispatchZoomAction',\n                this.dataZoomModel.get('throttle'),\n                'fixRate'\n            );\n\n            this._orient = dataZoomModel.get('orient');\n\n            if (this.dataZoomModel.get('show') === false) {\n                this.group.removeAll();\n                return;\n            }\n\n            // Notice: this._resetInterval() should not be executed when payload.type\n            // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n            // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n            if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n                this._buildView();\n            }\n\n            this._updateView();\n        },\n\n        /**\n         * @override\n         */\n        remove: function () {\n            SliderZoomView.superApply(this, 'remove', arguments);\n            throttle.clear(this, '_dispatchZoomAction');\n        },\n\n        /**\n         * @override\n         */\n        dispose: function () {\n            SliderZoomView.superApply(this, 'dispose', arguments);\n            throttle.clear(this, '_dispatchZoomAction');\n        },\n\n        _buildView: function () {\n            var thisGroup = this.group;\n\n            thisGroup.removeAll();\n\n            this._resetLocation();\n            this._resetInterval();\n\n            var barGroup = this._displayables.barGroup = new graphic.Group();\n\n            this._renderBackground();\n\n            this._renderHandle();\n\n            this._renderDataShadow();\n\n            thisGroup.add(barGroup);\n\n            this._positionGroup();\n        },\n\n        /**\n         * @private\n         */\n        _resetLocation: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var api = this.api;\n\n            // If some of x/y/width/height are not specified,\n            // auto-adapt according to target grid.\n            var coordRect = this._findCoordRect();\n            var ecSize = {width: api.getWidth(), height: api.getHeight()};\n            // Default align by coordinate system rect.\n            var positionInfo = this._orient === HORIZONTAL\n                ? {\n                    // Why using 'right', because right should be used in vertical,\n                    // and it is better to be consistent for dealing with position param merge.\n                    right: ecSize.width - coordRect.x - coordRect.width,\n                    top: (ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP),\n                    width: coordRect.width,\n                    height: DEFAULT_FILLER_SIZE\n                }\n                : { // vertical\n                    right: DEFAULT_LOCATION_EDGE_GAP,\n                    top: coordRect.y,\n                    width: DEFAULT_FILLER_SIZE,\n                    height: coordRect.height\n                };\n\n            // Do not write back to option and replace value 'ph', because\n            // the 'ph' value should be recalculated when resize.\n            var layoutParams = layout.getLayoutParams(dataZoomModel.option);\n\n            // Replace the placeholder value.\n            zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n                if (layoutParams[name] === 'ph') {\n                    layoutParams[name] = positionInfo[name];\n                }\n            });\n\n            var layoutRect = layout.getLayoutRect(\n                layoutParams,\n                ecSize,\n                dataZoomModel.padding\n            );\n\n            this._location = {x: layoutRect.x, y: layoutRect.y};\n            this._size = [layoutRect.width, layoutRect.height];\n            this._orient === VERTICAL && this._size.reverse();\n        },\n\n        /**\n         * @private\n         */\n        _positionGroup: function () {\n            var thisGroup = this.group;\n            var location = this._location;\n            var orient = this._orient;\n\n            // Just use the first axis to determine mapping.\n            var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n            var inverse = targetAxisModel && targetAxisModel.get('inverse');\n\n            var barGroup = this._displayables.barGroup;\n            var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse;\n\n            // Transform barGroup.\n            barGroup.attr(\n                (orient === HORIZONTAL && !inverse)\n                ? {scale: otherAxisInverse ? [1, 1] : [1, -1]}\n                : (orient === HORIZONTAL && inverse)\n                ? {scale: otherAxisInverse ? [-1, 1] : [-1, -1]}\n                : (orient === VERTICAL && !inverse)\n                ? {scale: otherAxisInverse ? [1, -1] : [1, 1], rotation: Math.PI / 2}\n                // Dont use Math.PI, considering shadow direction.\n                : {scale: otherAxisInverse ? [-1, -1] : [-1, 1], rotation: Math.PI / 2}\n            );\n\n            // Position barGroup\n            var rect = thisGroup.getBoundingRect([barGroup]);\n            thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n        },\n\n        /**\n         * @private\n         */\n        _getViewExtent: function () {\n            return [0, this._size[0]];\n        },\n\n        _renderBackground : function () {\n            var dataZoomModel = this.dataZoomModel;\n            var size = this._size;\n\n            this._displayables.barGroup.add(new Rect({\n                silent: true,\n                shape: {\n                    x: 0, y: 0, width: size[0], height: size[1]\n                },\n                style: {\n                    fill: dataZoomModel.get('backgroundColor')\n                },\n                z2: -40\n            }));\n        },\n\n        _renderDataShadow: function () {\n            var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n            if (!info) {\n                return;\n            }\n\n            var size = this._size;\n            var seriesModel = info.series;\n            var data = seriesModel.getRawData();\n            var otherDim = seriesModel.getShadowDim\n                ? seriesModel.getShadowDim() // @see candlestick\n                : info.otherDim;\n\n            if (otherDim == null) {\n                return;\n            }\n\n            var otherDataExtent = data.getDataExtent(otherDim);\n            // Nice extent.\n            var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n            otherDataExtent = [\n                otherDataExtent[0] - otherOffset,\n                otherDataExtent[1] + otherOffset\n            ];\n            var otherShadowExtent = [0, size[1]];\n\n            var thisShadowExtent = [0, size[0]];\n\n            var areaPoints = [[size[0], 0], [0, 0]];\n            var linePoints = [];\n            var step = thisShadowExtent[1] / (data.count() - 1);\n            var thisCoord = 0;\n\n            // Optimize for large data shadow\n            var stride = Math.round(data.count() / size[0]);\n            var lastIsEmpty;\n            data.each([otherDim], function (value, index) {\n                if (stride > 0 && (index % stride)) {\n                    thisCoord += step;\n                    return;\n                }\n\n                // FIXME\n                // Should consider axis.min/axis.max when drawing dataShadow.\n\n                // FIXME\n                // 应该使用统一的空判断？还是在list里进行空判断？\n                var isEmpty = value == null || isNaN(value) || value === '';\n                // See #4235.\n                var otherCoord = isEmpty\n                    ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true);\n\n                // Attempt to draw data shadow precisely when there are empty value.\n                if (isEmpty && !lastIsEmpty && index) {\n                    areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n                    linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n                }\n                else if (!isEmpty && lastIsEmpty) {\n                    areaPoints.push([thisCoord, 0]);\n                    linePoints.push([thisCoord, 0]);\n                }\n\n                areaPoints.push([thisCoord, otherCoord]);\n                linePoints.push([thisCoord, otherCoord]);\n\n                thisCoord += step;\n                lastIsEmpty = isEmpty;\n            });\n\n            var dataZoomModel = this.dataZoomModel;\n            // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n            this._displayables.barGroup.add(new graphic.Polygon({\n                shape: {points: areaPoints},\n                style: zrUtil.defaults(\n                    {fill: dataZoomModel.get('dataBackgroundColor')},\n                    dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()\n                ),\n                silent: true,\n                z2: -20\n            }));\n            this._displayables.barGroup.add(new graphic.Polyline({\n                shape: {points: linePoints},\n                style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n                silent: true,\n                z2: -19\n            }));\n        },\n\n        _prepareDataShadowInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var showDataShadow = dataZoomModel.get('showDataShadow');\n\n            if (showDataShadow === false) {\n                return;\n            }\n\n            // Find a representative series.\n            var result;\n            var ecModel = this.ecModel;\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var seriesModels = dataZoomModel\n                    .getAxisProxy(dimNames.name, axisIndex)\n                    .getTargetSeriesModels();\n\n                zrUtil.each(seriesModels, function (seriesModel) {\n                    if (result) {\n                        return;\n                    }\n\n                    if (showDataShadow !== true && zrUtil.indexOf(\n                            SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')\n                        ) < 0\n                    ) {\n                        return;\n                    }\n\n                    var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n                    var otherDim = getOtherDim(dimNames.name);\n                    var otherAxisInverse;\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (otherDim != null && coordSys.getOtherAxis) {\n                        otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n                    }\n\n                    result = {\n                        thisAxis: thisAxis,\n                        series: seriesModel,\n                        thisDim: dimNames.name,\n                        otherDim: otherDim,\n                        otherAxisInverse: otherAxisInverse\n                    };\n\n                }, this);\n\n            }, this);\n\n            return result;\n        },\n\n        _renderHandle: function () {\n            var displaybles = this._displayables;\n            var handles = displaybles.handles = [];\n            var handleLabels = displaybles.handleLabels = [];\n            var barGroup = this._displayables.barGroup;\n            var size = this._size;\n            var dataZoomModel = this.dataZoomModel;\n\n            barGroup.add(displaybles.filler = new Rect({\n                draggable: true,\n                cursor: 'move',\n                drift: bind(this._onDragMove, this, 'all'),\n                ondragstart: bind(this._showDataInfo, this, true),\n                ondragend: bind(this._onDragEnd, this),\n                onmouseover: bind(this._showDataInfo, this, true),\n                onmouseout: bind(this._showDataInfo, this, false),\n                style: {\n                    fill: dataZoomModel.get('fillerColor'),\n                    textPosition : 'inside'\n                }\n            }));\n\n            // Frame border.\n            barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n                silent: true,\n                shape: {\n                    x: 0,\n                    y: 0,\n                    width: size[0],\n                    height: size[1]\n                },\n                style: {\n                    stroke: dataZoomModel.get('dataBackgroundColor')\n                        || dataZoomModel.get('borderColor'),\n                    lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n                    fill: 'rgba(0,0,0,0)'\n                }\n            })));\n\n            var iconStr = dataZoomModel.get('handleIcon');\n            each([0, 1], function (handleIndex) {\n                var path = graphic.makePath(iconStr, {\n                    style: {\n                        strokeNoScale: true\n                    },\n                    rectHover: true,\n                    cursor: this._orient === 'vertical' ? 'ns-resize' : 'ew-resize',\n                    draggable: true,\n                    drift: bind(this._onDragMove, this, handleIndex),\n                    ondragend: bind(this._onDragEnd, this),\n                    onmouseover: bind(this._showDataInfo, this, true),\n                    onmouseout: bind(this._showDataInfo, this, false)\n                }, {\n                    x: -0.5,\n                    y: 0,\n                    width: 1,\n                    height: 1\n                }, 'center');\n\n                var bRect = path.getBoundingRect();\n                this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n                this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n\n                path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n                var handleColor = dataZoomModel.get('handleColor');\n                // Compatitable with previous version\n                if (handleColor != null) {\n                    path.style.fill = handleColor;\n                }\n\n                barGroup.add(handles[handleIndex] = path);\n\n                var textStyleModel = dataZoomModel.textStyleModel;\n\n                this.group.add(\n                    handleLabels[handleIndex] = new graphic.Text({\n                    silent: true,\n                    invisible: true,\n                    style: {\n                        x: 0, y: 0, text: '',\n                        textVerticalAlign: 'middle',\n                        textAlign: 'center',\n                        fill: textStyleModel.getTextColor(),\n                        textFont: textStyleModel.getFont()\n                    },\n                    z2: 10\n                }));\n\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetInterval: function () {\n            var range = this._range = this.dataZoomModel.getPercentRange();\n            var viewExtent = this._getViewExtent();\n\n            this._handleEnds = [\n                linearMap(range[0], [0, 100], viewExtent, true),\n                linearMap(range[1], [0, 100], viewExtent, true)\n            ];\n        },\n\n        /**\n         * @private\n         * @param {(number|string)} handleIndex 0 or 1 or 'all'\n         * @param {number} dx\n         * @param {number} dy\n         */\n        _updateInterval: function (handleIndex, delta) {\n            var handleEnds = this._handleEnds;\n            var viewExtend = this._getViewExtent();\n\n            sliderMove(\n                delta,\n                handleEnds,\n                viewExtend,\n                (handleIndex === 'all' || this.dataZoomModel.get('zoomLock'))\n                    ? 'rigid' : 'cross',\n                handleIndex\n            );\n\n            this._range = asc([\n                linearMap(handleEnds[0], viewExtend, [0, 100], true),\n                linearMap(handleEnds[1], viewExtend, [0, 100], true)\n            ]);\n        },\n\n        /**\n         * @private\n         */\n        _updateView: function (nonRealtime) {\n            var displaybles = this._displayables;\n            var handleEnds = this._handleEnds;\n            var handleInterval = asc(handleEnds.slice());\n            var size = this._size;\n\n            each([0, 1], function (handleIndex) {\n                // Handles\n                var handle = displaybles.handles[handleIndex];\n                var handleHeight = this._handleHeight;\n                handle.attr({\n                    scale: [handleHeight, handleHeight],\n                    position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n                });\n            }, this);\n\n            // Filler\n            displaybles.filler.setShape({\n                x: handleInterval[0],\n                y: 0,\n                width: handleInterval[1] - handleInterval[0],\n                height: size[1]\n            });\n\n            this._updateDataInfo(nonRealtime);\n        },\n\n        /**\n         * @private\n         */\n        _updateDataInfo: function (nonRealtime) {\n            var dataZoomModel = this.dataZoomModel;\n            var displaybles = this._displayables;\n            var handleLabels = displaybles.handleLabels;\n            var orient = this._orient;\n            var labelTexts = ['', ''];\n\n            // FIXME\n            // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n            if (dataZoomModel.get('showDetail')) {\n                var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n                if (axisProxy) {\n                    var axis = axisProxy.getAxisModel().axis;\n                    var range = this._range;\n\n                    var dataInterval = nonRealtime\n                        // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n                        ? axisProxy.calculateDataWindow({\n                            start: range[0], end: range[1]\n                        }).valueWindow\n                        : axisProxy.getDataValueWindow();\n\n                    labelTexts = [\n                        this._formatLabel(dataInterval[0], axis),\n                        this._formatLabel(dataInterval[1], axis)\n                    ];\n                }\n            }\n\n            var orderedHandleEnds = asc(this._handleEnds.slice());\n\n            setLabel.call(this, 0);\n            setLabel.call(this, 1);\n\n            function setLabel(handleIndex) {\n                // Label\n                // Text should not transform by barGroup.\n                // Ignore handlers transform\n                var barTransform = graphic.getTransform(\n                    displaybles.handles[handleIndex].parent, this.group\n                );\n                var direction = graphic.transformDirection(\n                    handleIndex === 0 ? 'right' : 'left', barTransform\n                );\n                var offset = this._handleWidth / 2 + LABEL_GAP;\n                var textPoint = graphic.applyTransform(\n                    [\n                        orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset),\n                        this._size[1] / 2\n                    ],\n                    barTransform\n                );\n                handleLabels[handleIndex].setStyle({\n                    x: textPoint[0],\n                    y: textPoint[1],\n                    textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n                    textAlign: orient === HORIZONTAL ? direction : 'center',\n                    text: labelTexts[handleIndex]\n                });\n            }\n        },\n\n        /**\n         * @private\n         */\n        _formatLabel: function (value, axis) {\n            var dataZoomModel = this.dataZoomModel;\n            var labelFormatter = dataZoomModel.get('labelFormatter');\n\n            var labelPrecision = dataZoomModel.get('labelPrecision');\n            if (labelPrecision == null || labelPrecision === 'auto') {\n                labelPrecision = axis.getPixelPrecision();\n            }\n\n            var valueStr = (value == null || isNaN(value))\n                ? ''\n                // FIXME Glue code\n                : (axis.type === 'category' || axis.type === 'time')\n                    ? axis.scale.getLabel(Math.round(value))\n                    // param of toFixed should less then 20.\n                    : value.toFixed(Math.min(labelPrecision, 20));\n\n            return zrUtil.isFunction(labelFormatter)\n                ? labelFormatter(value, valueStr)\n                : zrUtil.isString(labelFormatter)\n                ? labelFormatter.replace('{value}', valueStr)\n                : valueStr;\n        },\n\n        /**\n         * @private\n         * @param {boolean} showOrHide true: show, false: hide\n         */\n        _showDataInfo: function (showOrHide) {\n            // Always show when drgging.\n            showOrHide = this._dragging || showOrHide;\n\n            var handleLabels = this._displayables.handleLabels;\n            handleLabels[0].attr('invisible', !showOrHide);\n            handleLabels[1].attr('invisible', !showOrHide);\n        },\n\n        _onDragMove: function (handleIndex, dx, dy) {\n            this._dragging = true;\n\n            // Transform dx, dy to bar coordination.\n            var vertex = this._applyBarTransform([dx, dy], true);\n\n            this._updateInterval(handleIndex, vertex[0]);\n\n            var realtime = this.dataZoomModel.get('realtime');\n\n            this._updateView(!realtime);\n\n            if (realtime) {\n                realtime && this._dispatchZoomAction();\n            }\n        },\n\n        _onDragEnd: function () {\n            this._dragging = false;\n            this._showDataInfo(false);\n            this._dispatchZoomAction();\n        },\n\n        /**\n         * This action will be throttled.\n         * @private\n         */\n        _dispatchZoomAction: function () {\n            var range = this._range;\n\n            this.api.dispatchAction({\n                type: 'dataZoom',\n                from: this.uid,\n                dataZoomId: this.dataZoomModel.id,\n                start: range[0],\n                end: range[1]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _applyBarTransform: function (vertex, inverse) {\n            var barTransform = this._displayables.barGroup.getLocalTransform();\n            return graphic.applyTransform(vertex, barTransform, inverse);\n        },\n\n        /**\n         * @private\n         */\n        _findCoordRect: function () {\n            // Find the grid coresponding to the first axis referred by dataZoom.\n            var rect;\n            each(this.getTargetCoordInfo(), function (coordInfoList) {\n                if (!rect && coordInfoList.length) {\n                    var coordSys = coordInfoList[0].model.coordinateSystem;\n                    rect = coordSys.getRect && coordSys.getRect();\n                }\n            });\n            if (!rect) {\n                var width = this.api.getWidth();\n                var height = this.api.getHeight();\n                rect = {\n                    x: width * 0.2,\n                    y: height * 0.2,\n                    width: width * 0.6,\n                    height: height * 0.6\n                };\n            }\n\n            return rect;\n        }\n\n    });\n\n    function getOtherDim(thisDim) {\n        // FIXME\n        // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n        var map = {x: 'y', y: 'x', radius: 'angle', angle: 'radius'};\n        return map[thisDim];\n    }\n\n    module.exports = SliderZoomView;\n\n\n\n/***/ }),\n/* 407 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom action\n */\n\n\n    var zrUtil = __webpack_require__(285);\n    var helper = __webpack_require__(315);\n    var echarts = __webpack_require__(286);\n\n\n    echarts.registerAction('dataZoom', function (payload, ecModel) {\n\n        var linkedNodesFinder = helper.createLinkedNodesFinder(\n            zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'),\n            helper.eachAxisDim,\n            function (model, dimNames) {\n                return model.get(dimNames.axisIndex);\n            }\n        );\n\n        var effectedModels = [];\n\n        ecModel.eachComponent(\n            {mainType: 'dataZoom', query: payload},\n            function (model, index) {\n                effectedModels.push.apply(\n                    effectedModels, linkedNodesFinder(model).nodes\n                );\n            }\n        );\n\n        zrUtil.each(effectedModels, function (dataZoomModel, index) {\n            dataZoomModel.setRawRange({\n                start: payload.start,\n                end: payload.end,\n                startValue: payload.startValue,\n                endValue: payload.endValue\n            });\n        });\n\n    });\n\n\n\n/***/ }),\n/* 408 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom processor\n */\n\n\n    var echarts = __webpack_require__(286);\n\n    echarts.registerProcessor(function (ecModel, api) {\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // We calculate window and reset axis here but not in model\n            // init stage and not after action dispatch handler, because\n            // reset should be called after seriesData.restoreData.\n            dataZoomModel.eachTargetAxis(resetSingleAxis);\n\n            // Caution: data zoom filtering is order sensitive when using\n            // percent range and no min/max/scale set on axis.\n            // For example, we have dataZoom definition:\n            // [\n            //      {xAxisIndex: 0, start: 30, end: 70},\n            //      {yAxisIndex: 0, start: 20, end: 80}\n            // ]\n            // In this case, [20, 80] of y-dataZoom should be based on data\n            // that have filtered by x-dataZoom using range of [30, 70],\n            // but should not be based on full raw data. Thus sliding\n            // x-dataZoom will change both ranges of xAxis and yAxis,\n            // while sliding y-dataZoom will only change the range of yAxis.\n            // So we should filter x-axis after reset x-axis immediately,\n            // and then reset y-axis and filter y-axis.\n            dataZoomModel.eachTargetAxis(filterSingleAxis);\n        });\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // Fullfill all of the range props so that user\n            // is able to get them from chart.getOption().\n            var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n            var percentRange = axisProxy.getDataPercentWindow();\n            var valueRange = axisProxy.getDataValueWindow();\n\n            dataZoomModel.setRawRange({\n                start: percentRange[0],\n                end: percentRange[1],\n                startValue: valueRange[0],\n                endValue: valueRange[1]\n            });\n        });\n    });\n\n    function resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n    }\n\n    function filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n    }\n\n\n\n\n/***/ }),\n/* 409 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Roam controller manager.\n */\n\n\n    // Only create one roam controller for each coordinate system.\n    // one roam controller might be refered by two inside data zoom\n    // components (for example, one for x and one for y). When user\n    // pan or zoom, only dispatch one action for those data zoom\n    // components.\n\n    var zrUtil = __webpack_require__(285);\n    var RoamController = __webpack_require__(411);\n    var throttle = __webpack_require__(320);\n    var curry = zrUtil.curry;\n\n    var ATTR = '\\0_ec_dataZoom_roams';\n\n    var roams = {\n\n        /**\n         * @public\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} dataZoomInfo\n         * @param {string} dataZoomInfo.coordId\n         * @param {Function} dataZoomInfo.containsPoint\n         * @param {Array.<string>} dataZoomInfo.allCoordIds\n         * @param {string} dataZoomInfo.dataZoomId\n         * @param {number} dataZoomInfo.throttleRate\n         * @param {Function} dataZoomInfo.panGetRange\n         * @param {Function} dataZoomInfo.zoomGetRange\n         */\n        register: function (api, dataZoomInfo) {\n            var store = giveStore(api);\n            var theDataZoomId = dataZoomInfo.dataZoomId;\n            var theCoordId = dataZoomInfo.coordId;\n\n            // Do clean when a dataZoom changes its target coordnate system.\n            // Avoid memory leak, dispose all not-used-registered.\n            zrUtil.each(store, function (record, coordId) {\n                var dataZoomInfos = record.dataZoomInfos;\n                if (dataZoomInfos[theDataZoomId]\n                    && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0\n                ) {\n                    delete dataZoomInfos[theDataZoomId];\n                    record.count--;\n                }\n            });\n\n            cleanStore(store);\n\n            var record = store[theCoordId];\n            // Create if needed.\n            if (!record) {\n                record = store[theCoordId] = {\n                    coordId: theCoordId,\n                    dataZoomInfos: {},\n                    count: 0\n                };\n                record.controller = createController(api, dataZoomInfo, record);\n                record.dispatchAction = zrUtil.curry(dispatchAction, api);\n            }\n\n            // Consider resize, area should be always updated.\n            record.controller.setContainsPoint(dataZoomInfo.containsPoint);\n\n            // Update throttle.\n            throttle.createOrUpdate(\n                record,\n                'dispatchAction',\n                dataZoomInfo.throttleRate,\n                'fixRate'\n            );\n\n            // Update reference of dataZoom.\n            !(record.dataZoomInfos[theDataZoomId]) && record.count++;\n            record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {string} dataZoomId\n         */\n        unregister: function (api, dataZoomId) {\n            var store = giveStore(api);\n\n            zrUtil.each(store, function (record) {\n                record.controller.dispose();\n                var dataZoomInfos = record.dataZoomInfos;\n                if (dataZoomInfos[dataZoomId]) {\n                    delete dataZoomInfos[dataZoomId];\n                    record.count--;\n                }\n            });\n\n            cleanStore(store);\n        },\n\n        /**\n         * @public\n         */\n        shouldRecordRange: function (payload, dataZoomId) {\n            if (payload && payload.type === 'dataZoom' && payload.batch) {\n                for (var i = 0, len = payload.batch.length; i < len; i++) {\n                    if (payload.batch[i].dataZoomId === dataZoomId) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        },\n\n        /**\n         * @public\n         */\n        generateCoordId: function (coordModel) {\n            return coordModel.type + '\\0_' + coordModel.id;\n        }\n    };\n\n    /**\n     * Key: coordId, value: {dataZoomInfos: [], count, controller}\n     * @type {Array.<Object>}\n     */\n    function giveStore(api) {\n        // Mount store on zrender instance, so that we do not\n        // need to worry about dispose.\n        var zr = api.getZr();\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    function createController(api, dataZoomInfo, newRecord) {\n        var controller = new RoamController(api.getZr());\n        controller.enable();\n        controller.on('pan', curry(onPan, newRecord));\n        controller.on('zoom', curry(onZoom, newRecord));\n\n        return controller;\n    }\n\n    function cleanStore(store) {\n        zrUtil.each(store, function (record, coordId) {\n            if (!record.count) {\n                record.controller.dispose();\n                delete store[coordId];\n            }\n        });\n    }\n\n    function onPan(record, dx, dy, oldX, oldY, newX, newY) {\n        wrapAndDispatch(record, function (info) {\n            return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n        });\n    }\n\n    function onZoom(record, scale, mouseX, mouseY) {\n        wrapAndDispatch(record, function (info) {\n            return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n        });\n    }\n\n    function wrapAndDispatch(record, getRange) {\n        var batch = [];\n\n        zrUtil.each(record.dataZoomInfos, function (info) {\n            var range = getRange(info);\n            range && batch.push({\n                dataZoomId: info.dataZoomId,\n                start: range[0],\n                end: range[1]\n            });\n        });\n\n        record.dispatchAction(batch);\n    }\n\n    /**\n     * This action will be throttled.\n     */\n    function dispatchAction(api, batch) {\n        api.dispatchAction({\n            type: 'dataZoom',\n            batch: batch\n        });\n    }\n\n    module.exports = roams;\n\n\n\n/***/ }),\n/* 410 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(296).registerSubTypeDefaulter('dataZoom', function (option) {\n        // Default 'slider' when no type specified.\n        return 'slider';\n    });\n\n\n\n/***/ }),\n/* 411 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/helper/RoamController\n */\n\n\n\n    var Eventful = __webpack_require__(300);\n    var zrUtil = __webpack_require__(285);\n    var eventTool = __webpack_require__(302);\n    var interactionMutex = __webpack_require__(412);\n\n    function mousedown(e) {\n        if (e.target && e.target.draggable) {\n            return;\n        }\n\n        var x = e.offsetX;\n        var y = e.offsetY;\n\n        if (this.containsPoint && this.containsPoint(x, y)) {\n            this._x = x;\n            this._y = y;\n            this._dragging = true;\n        }\n    }\n\n    function mousemove(e) {\n        if (!this._dragging) {\n            return;\n        }\n\n        eventTool.stop(e.event);\n\n        if (e.gestureEvent !== 'pinch') {\n\n            if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n                return;\n            }\n\n            var x = e.offsetX;\n            var y = e.offsetY;\n\n            var oldX = this._x;\n            var oldY = this._y;\n\n            var dx = x - oldX;\n            var dy = y - oldY;\n\n            this._x = x;\n            this._y = y;\n\n            var target = this.target;\n\n            if (target) {\n                var pos = target.position;\n                pos[0] += dx;\n                pos[1] += dy;\n                target.dirty();\n            }\n\n            eventTool.stop(e.event);\n            this.trigger('pan', dx, dy, oldX, oldY, x, y);\n        }\n    }\n\n    function mouseup(e) {\n        this._dragging = false;\n    }\n\n    function mousewheel(e) {\n        // Convenience:\n        // Mac and VM Windows on Mac: scroll up: zoom out.\n        // Windows: scroll up: zoom in.\n        var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n        zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n    }\n\n    function pinch(e) {\n        if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n            return;\n        }\n        var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n        zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n    }\n\n    function zoom(e, zoomDelta, zoomX, zoomY) {\n        if (this.containsPoint && this.containsPoint(zoomX, zoomY)) {\n            // When mouse is out of roamController rect,\n            // default befavoius should be be disabled, otherwise\n            // page sliding is disabled, contrary to expectation.\n            eventTool.stop(e.event);\n\n            var target = this.target;\n            var zoomLimit = this.zoomLimit;\n\n            if (target) {\n                var pos = target.position;\n                var scale = target.scale;\n\n                var newZoom = this.zoom = this.zoom || 1;\n                newZoom *= zoomDelta;\n                if (zoomLimit) {\n                    var zoomMin = zoomLimit.min || 0;\n                    var zoomMax = zoomLimit.max || Infinity;\n                    newZoom = Math.max(\n                        Math.min(zoomMax, newZoom),\n                        zoomMin\n                    );\n                }\n                var zoomScale = newZoom / this.zoom;\n                this.zoom = newZoom;\n                // Keep the mouse center when scaling\n                pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n                pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n                scale[0] *= zoomScale;\n                scale[1] *= zoomScale;\n\n                target.dirty();\n            }\n\n            this.trigger('zoom', zoomDelta, zoomX, zoomY);\n        }\n    }\n\n    /**\n     * @alias module:echarts/component/helper/RoamController\n     * @constructor\n     * @mixin {module:zrender/mixin/Eventful}\n     *\n     * @param {module:zrender/zrender~ZRender} zr\n     * @param {module:zrender/Element} target\n     */\n    function RoamController(zr, target) {\n\n        /**\n         * @type {module:zrender/Element}\n         */\n        this.target = target;\n\n        /**\n         * @type {Function}\n         */\n        this.containsPoint;\n\n        /**\n         * { min: 1, max: 2 }\n         * @type {Object}\n         */\n        this.zoomLimit;\n\n        /**\n         * @type {number}\n         */\n        this.zoom;\n        /**\n         * @type {module:zrender}\n         */\n        this._zr = zr;\n\n        // Avoid two roamController bind the same handler\n        var bind = zrUtil.bind;\n        var mousedownHandler = bind(mousedown, this);\n        var mousemoveHandler = bind(mousemove, this);\n        var mouseupHandler = bind(mouseup, this);\n        var mousewheelHandler = bind(mousewheel, this);\n        var pinchHandler = bind(pinch, this);\n\n        Eventful.call(this);\n\n        /**\n         * @param {Function} containsPoint\n         *                   input: x, y\n         *                   output: boolean\n         */\n        this.setContainsPoint = function (containsPoint) {\n            this.containsPoint = containsPoint;\n        };\n\n        /**\n         * Notice: only enable needed types. For example, if 'zoom'\n         * is not needed, 'zoom' should not be enabled, otherwise\n         * default mousewheel behaviour (scroll page) will be disabled.\n         *\n         * @param  {boolean|string} [controlType=true] Specify the control type,\n         *                          which can be null/undefined or true/false\n         *                          or 'pan/move' or 'zoom'/'scale'\n         */\n        this.enable = function (controlType) {\n            // Disable previous first\n            this.disable();\n\n            if (controlType == null) {\n                controlType = true;\n            }\n\n            if (controlType === true || (controlType === 'move' || controlType === 'pan')) {\n                zr.on('mousedown', mousedownHandler);\n                zr.on('mousemove', mousemoveHandler);\n                zr.on('mouseup', mouseupHandler);\n            }\n            if (controlType === true || (controlType === 'scale' || controlType === 'zoom')) {\n                zr.on('mousewheel', mousewheelHandler);\n                zr.on('pinch', pinchHandler);\n            }\n        };\n\n        this.disable = function () {\n            zr.off('mousedown', mousedownHandler);\n            zr.off('mousemove', mousemoveHandler);\n            zr.off('mouseup', mouseupHandler);\n            zr.off('mousewheel', mousewheelHandler);\n            zr.off('pinch', pinchHandler);\n        };\n\n        this.dispose = this.disable;\n\n        this.isDragging = function () {\n            return this._dragging;\n        };\n\n        this.isPinching = function () {\n            return this._pinching;\n        };\n    }\n\n    zrUtil.mixin(RoamController, Eventful);\n\n    module.exports = RoamController;\n\n\n/***/ }),\n/* 412 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var ATTR = '\\0_ec_interaction_mutex';\n\n    var interactionMutex = {\n\n        take: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            store[resourceKey] = userKey;\n        },\n\n        release: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            var uKey = store[resourceKey];\n\n            if (uKey === userKey) {\n                store[resourceKey] = null;\n            }\n        },\n\n        isTaken: function (zr, resourceKey) {\n            return !!getStore(zr)[resourceKey];\n        }\n    };\n\n    function getStore(zr) {\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    /**\n     * payload: {\n     *     type: 'takeGlobalCursor',\n     *     key: 'dataZoomSelect', or 'brush', or ...,\n     *         If no userKey, release global cursor.\n     * }\n     */\n    __webpack_require__(286).registerAction(\n        {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},\n        function () {}\n    );\n\n    module.exports = interactionMutex;\n\n\n/***/ }),\n/* 413 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    // List layout\n    var layout = __webpack_require__(298);\n    var formatUtil = __webpack_require__(291);\n    var graphic = __webpack_require__(287);\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n/***/ }),\n/* 414 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Legend component entry file8\n */\n\n\n    __webpack_require__(415);\n    __webpack_require__(417);\n    __webpack_require__(416);\n\n    var echarts = __webpack_require__(286);\n    // Series Filter\n    echarts.registerProcessor(__webpack_require__(418));\n\n\n/***/ }),\n/* 415 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(285);\n    var Model = __webpack_require__(294);\n\n    var LegendModel = __webpack_require__(286).extendComponentModel({\n\n        type: 'legend',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 'top',\n            // bottom: 'top',\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n/***/ }),\n/* 416 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(285);\n    var symbolCreator = __webpack_require__(333);\n    var graphic = __webpack_require__(287);\n    var listComponentHelper = __webpack_require__(413);\n\n    var curry = zrUtil.curry;\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    module.exports = __webpack_require__(286).extendComponentView({\n\n        type: 'legend',\n\n        init: function () {\n            this._symbolTypeStore = {};\n        },\n\n        render: function (legendModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!legendModel.get('show')) {\n                return;\n            }\n\n            var selectMode = legendModel.get('selectedMode');\n            var itemAlign = legendModel.get('align');\n\n            if (itemAlign === 'auto') {\n                itemAlign = (legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical')\n                    ? 'right' : 'left';\n            }\n\n            var legendDrawedMap = {};\n\n            zrUtil.each(legendModel.getData(), function (itemModel) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (name === '' || name === '\\n') {\n                    group.add(new graphic.Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawedMap[name]) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawedMap[name] = true;\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawedMap[name]) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawedMap[name] = true;\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawedMap[name]) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n\n            listComponentHelper.layout(group, legendModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, legendModel);\n        },\n\n        _createItem: function (\n            name, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new graphic.Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            // Text\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            var text = new graphic.Text({\n                style: {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textFont: textStyleModel.getFont(),\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                }\n            });\n            itemGroup.add(text);\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n\n\n            this.group.add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            return itemGroup;\n        }\n    });\n\n\n/***/ }),\n/* 417 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Legend action\n */\n\n\n    var echarts = __webpack_require__(286);\n    var zrUtil = __webpack_require__(285);\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (name in selectedMap) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n/***/ }),\n/* 418 */\n/***/ (function(module, exports) {\n\n\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n/***/ }),\n/* 419 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var echarts = __webpack_require__(286);\n    var graphic = __webpack_require__(287);\n    var layout = __webpack_require__(298);\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: {\n                    text: titleModel.get('text'),\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                },\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: {\n                    text: subText,\n                    textFont: subtextStyleModel.getFont(),\n                    fill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textBaseline: 'top'\n                },\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n/***/ }),\n/* 420 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(422);\n\n    __webpack_require__(423);\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(286).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(286).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n/* 421 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(285);\n    var zrColor = __webpack_require__(303);\n    var eventUtil = __webpack_require__(302);\n    var formatUtil = __webpack_require__(291);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(292);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        tooltipModel = tooltipModel;\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self.enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self.enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self.enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            var el = this.el;\n            el.innerHTML = content;\n            el.style.display = content ? 'block' : 'none';\n        },\n\n        moveTo: function (x, y) {\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        // showLater: function ()\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this.enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n/* 422 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(286).extendComponentModel({\n\n        type: 'tooltip',\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\n            trigger: 'item',\n\n            // 触发条件，支持 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove',\n\n            // 是否永远显示 content\n            alwaysShowContent: false,\n\n            // 位置 {Array} | {Function}\n            // position: null\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: true,\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                // 直线指示器样式设置\n                lineStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'solid'\n                },\n\n                crossStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                },\n\n                // 阴影指示器样式设置\n                shadowStyle: {\n                    color: 'rgba(150,150,150,0.3)'\n                }\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n/* 423 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(421);\n    var graphic = __webpack_require__(287);\n    var zrUtil = __webpack_require__(285);\n    var formatUtil = __webpack_require__(291);\n    var numberUtil = __webpack_require__(288);\n    var modelUtil = __webpack_require__(293);\n    var parsePercent = numberUtil.parsePercent;\n    var env = __webpack_require__(292);\n    var Model = __webpack_require__(294);\n\n    function dataEqual(a, b) {\n        if (!a || !b) {\n            return false;\n        }\n        var round = numberUtil.round;\n        return round(a[0]) === round(b[0])\n            && round(a[1]) === round(b[1]);\n    }\n    /**\n     * @inner\n     */\n    function makeLineShape(x1, y1, x2, y2) {\n        return {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeRectShape(x, y, width, height) {\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n        var gap = 20;\n\n        if (x + width + gap > viewWidth) {\n            x -= width + gap;\n        }\n        else {\n            x += gap;\n        }\n        if (y + height + gap > viewHeight) {\n            y -= height + gap;\n        }\n        else {\n            y += gap;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, dom) {\n        var domWidth = dom.clientWidth;\n        var domHeight = dom.clientHeight;\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    /**\n     * @param  {string|Function|Array.<number>} positionExpr\n     * @param  {number} x Mouse x\n     * @param  {number} y Mouse y\n     * @param  {boolean} confine Whether confine tooltip content in view rect.\n     * @param  {module:echarts/component/tooltip/TooltipContent} content\n     * @param  {Object|<Array.<Object>} params\n     * @param  {module:zrender/Element} el target element\n     * @param  {module:echarts/ExtensionAPI} api\n     * @return {Array.<number>}\n     */\n    function updatePosition(positionExpr, x, y, confine, content, params, el, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n\n        var rect = el && el.getBoundingRect().clone();\n        el && rect.applyTransform(el.transform);\n        if (typeof positionExpr === 'function') {\n            // Callback of position can be an array or a string specify the position\n            positionExpr = positionExpr([x, y], params, content.el, rect);\n        }\n\n        if (zrUtil.isArray(positionExpr)) {\n            x = parsePercent(positionExpr[0], viewWidth);\n            y = parsePercent(positionExpr[1], viewHeight);\n        }\n        // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n        else if (typeof positionExpr === 'string' && el) {\n            var pos = calcTooltipPosition(\n                positionExpr, rect, content.el\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n        else {\n            var pos = refixTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        if (confine) {\n            var pos = confineTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        content.moveTo(x, y);\n    }\n\n    function ifSeriesSupportAxisTrigger(seriesModel) {\n        var coordSys = seriesModel.coordinateSystem;\n        var trigger = seriesModel.get('tooltip.trigger', true);\n        // Ignore series use item tooltip trigger and series coordinate system is not cartesian or\n        return !(!coordSys\n            || (coordSys.type !== 'cartesian2d' && coordSys.type !== 'polar' && coordSys.type !== 'singleAxis')\n            || trigger === 'item');\n    }\n\n    __webpack_require__(286).extendComponentView({\n\n        type: 'tooltip',\n\n        _axisPointers: {},\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._axisPointers = {};\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._lastHover = {\n                // data\n                // payloadBatch\n            };\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.enterable = tooltipModel.get('enterable');\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            /**\n             * @type {Object.<string, Array>}\n             */\n            this._seriesGroupByAxis = this._prepareAxisTriggerData(\n                tooltipModel, ecModel\n            );\n\n            var crossText = this._crossText;\n            if (crossText) {\n                this.group.add(crossText);\n            }\n\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && triggerOn !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n\n            var zr = this._api.getZr();\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            if (triggerOn === 'click') {\n                zr.on('click', this._tryShow, this);\n            }\n            else if (triggerOn === 'mousemove') {\n                zr.on('mousemove', this._mousemove, this);\n                zr.on('mouseout', this._hide, this);\n                zr.on('globalout', this._hide, this);\n            }\n            // else triggerOn is 'none', which enable user\n            // to control tooltip totally using API.\n        },\n\n        _mousemove: function (e) {\n            var showDelay = this._tooltipModel.get('showDelay');\n            var self = this;\n            clearTimeout(this._showTimeout);\n            if (showDelay > 0) {\n                this._showTimeout = setTimeout(function () {\n                    self._tryShow(e);\n                }, showDelay);\n            }\n            else {\n                this._tryShow(e);\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            // From self\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            var ecModel = this._ecModel;\n            var seriesIndex = payload.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            var api = this._api;\n\n            var isTriggerAxis = this._tooltipModel.get('trigger') === 'axis';\n            function seriesHaveDataOnIndex(_series) {\n                var data = _series.getData();\n                var dataIndex = modelUtil.queryDataIndex(data, payload);\n                // Have single dataIndex\n                if (dataIndex != null && !zrUtil.isArray(dataIndex)\n                    && data.hasValue(dataIndex)\n                ) {\n                    return true;\n                }\n            }\n\n            if (payload.x == null || payload.y == null) {\n                if (isTriggerAxis) {\n                    // Find another series.\n                    if (seriesModel && !seriesHaveDataOnIndex(seriesModel)) {\n                        seriesModel = null;\n                    }\n                    if (!seriesModel) {\n                        // Find the first series can use axis trigger And data is not null\n                        ecModel.eachSeries(function (_series) {\n                            if (ifSeriesSupportAxisTrigger(_series) && !seriesModel) {\n                                if (seriesHaveDataOnIndex(_series)) {\n                                    seriesModel = _series;\n                                }\n                            }\n                        });\n                    }\n                }\n                else {\n                    // Use the first series by default.\n                    seriesModel = seriesModel || ecModel.getSeriesByIndex(0);\n                }\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n                    if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n                        return;\n                    }\n\n                    var el = data.getItemGraphicEl(dataIndex);\n                    var cx;\n                    var cy;\n                    // Try to get the point in coordinate system\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (seriesModel.getTooltipPosition) {\n                        var point = seriesModel.getTooltipPosition(dataIndex) || [];\n                        cx = point[0];\n                        cy = point[1];\n                    }\n                    else if (coordSys && coordSys.dataToPoint) {\n                        var point = coordSys.dataToPoint(\n                            data.getValues(\n                                zrUtil.map(coordSys.dimensions, function (dim) {\n                                    return seriesModel.coordDimToDataDim(dim)[0];\n                                }), dataIndex, true\n                            )\n                        );\n                        cx = point && point[0];\n                        cy = point && point[1];\n                    }\n                    else if (el) {\n                        // Use graphic bounding rect\n                        var rect = el.getBoundingRect().clone();\n                        rect.applyTransform(el.transform);\n                        cx = rect.x + rect.width / 2;\n                        cy = rect.y + rect.height / 2;\n                    }\n\n                    if (cx != null && cy != null) {\n                        this._tryShow({\n                            offsetX: cx,\n                            offsetY: cy,\n                            position: payload.position,\n                            target: el,\n                            event: {}\n                        });\n                    }\n                }\n            }\n            else {\n                var el = api.getZr().handler.findHover(payload.x, payload.y);\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: el,\n                    event: {}\n                });\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            this._hide();\n        },\n\n        _prepareAxisTriggerData: function (tooltipModel, ecModel) {\n            // Prepare data for axis trigger\n            var seriesGroupByAxis = {};\n            ecModel.eachSeries(function (seriesModel) {\n                if (ifSeriesSupportAxisTrigger(seriesModel)) {\n                    var coordSys = seriesModel.coordinateSystem;\n                    var baseAxis;\n                    var key;\n\n                    // Only cartesian2d, polar and single support axis trigger\n                    if (coordSys.type === 'cartesian2d') {\n                        // FIXME `axisPointer.axis` is not baseAxis\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + baseAxis.index;\n                    }\n                    else if (coordSys.type === 'singleAxis') {\n                        baseAxis = coordSys.getAxis();\n                        key = baseAxis.dim + baseAxis.type;\n                    }\n                    else {\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + coordSys.name;\n                    }\n\n                    seriesGroupByAxis[key] = seriesGroupByAxis[key] || {\n                        coordSys: [],\n                        series: []\n                    };\n                    seriesGroupByAxis[key].coordSys.push(coordSys);\n                    seriesGroupByAxis[key].series.push(seriesModel);\n                }\n            }, this);\n\n            return seriesGroupByAxis;\n        },\n\n        /**\n         * mousemove handler\n         * @param {Object} e\n         * @private\n         */\n        _tryShow: function (e) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n            var globalTrigger = tooltipModel.get('trigger');\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            // Always show item tooltip if mouse is on the element with dataIndex\n            if (el && el.dataIndex != null) {\n                // Use dataModel in element if possible\n                // Used when mouseover on a element like markPoint or edge\n                // In which case, the data is not main data in series.\n                var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                var dataIndex = el.dataIndex;\n                var data = dataModel.getData();\n                var itemModel = data.getItemModel(dataIndex);\n                // Series or single data may use item trigger when global is axis trigger\n                if ((itemModel.get('tooltip.trigger') || globalTrigger) === 'axis') {\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n                else {\n                    // Reset ticket\n                    this._ticket = '';\n                    // If either single data or series use item trigger\n                    this._hideAxisPointer();\n                    // Reset last hover and dispatch downplay action\n                    this._resetLastHover();\n\n                    this._showItemTooltipContent(dataModel, dataIndex, el.dataType, e);\n                }\n\n                api.dispatchAction({\n                    type: 'showTip',\n                    from: this.uid,\n                    dataIndexInside: dataIndex,\n                    dataIndex: data.getRawIndex(dataIndex), // expose to user.\n                    seriesIndex: el.seriesIndex\n                });\n            }\n            // Tooltip provided directly. Like legend\n            else if (el && el.tooltip) {\n                var tooltipOpt = el.tooltip;\n                if (typeof tooltipOpt === 'string') {\n                    var content = tooltipOpt;\n                    tooltipOpt = {\n                        content: content,\n                        // Fixed formatter\n                        formatter: content\n                    };\n                }\n                var subTooltipModel = new Model(tooltipOpt, tooltipModel);\n                var defaultHtml = subTooltipModel.get('content');\n                var asyncTicket = Math.random();\n                this._showTooltipContent(\n                    // TODO params\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el, api\n                );\n            }\n            else {\n                if (globalTrigger === 'item') {\n                    this._hide();\n                }\n                else {\n                    // Try show axis tooltip\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n\n                // Action of cross pointer\n                // other pointer types will trigger action in _dispatchAndShowSeriesTooltipContent method\n                if (tooltipModel.get('axisPointer.type') === 'cross') {\n                    api.dispatchAction({\n                        type: 'showTip',\n                        from: this.uid,\n                        x: e.offsetX,\n                        y: e.offsetY\n                    });\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on axis\n         * @param {module:echarts/component/tooltip/TooltipModel} tooltipModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} e\n         * @private\n         */\n        _showAxisTooltip: function (tooltipModel, ecModel, e) {\n            var axisPointerModel = tooltipModel.getModel('axisPointer');\n            var axisPointerType = axisPointerModel.get('type');\n\n            if (axisPointerType === 'cross') {\n                var el = e.target;\n                if (el && el.dataIndex != null) {\n                    var seriesModel = ecModel.getSeriesByIndex(el.seriesIndex);\n                    var dataIndex = el.dataIndex;\n                    this._showItemTooltipContent(seriesModel, dataIndex, el.dataType, e);\n                }\n            }\n\n            this._showAxisPointer();\n            var allNotShow = true;\n            zrUtil.each(this._seriesGroupByAxis, function (seriesCoordSysSameAxis) {\n                // Try show the axis pointer\n                var allCoordSys = seriesCoordSysSameAxis.coordSys;\n                var coordSys = allCoordSys[0];\n\n                // If mouse position is not in the grid or polar\n                var point = [e.offsetX, e.offsetY];\n\n                if (!coordSys.containPoint(point)) {\n                    // Hide axis pointer\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                allNotShow = false;\n                // Make sure point is discrete on cateogry axis\n                var dimensions = coordSys.dimensions;\n                var value = coordSys.pointToData(point, true);\n                point = coordSys.dataToPoint(value);\n\n                var baseAxis = coordSys.getBaseAxis();\n                var axisType = axisPointerModel.get('axis');\n                if (axisType === 'auto') {\n                    axisType = baseAxis.dim;\n                }\n\n                if (baseAxis.isBlank() || zrUtil.eqNaN(point[0]) || zrUtil.eqNaN(point[1])) {\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                var contentNotChange = false;\n                var lastHover = this._lastHover;\n                if (axisPointerType === 'cross') {\n                    // If hover data not changed\n                    // Possible when two axes are all category\n                    if (dataEqual(lastHover.data, value)) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value;\n                }\n                else {\n                    var valIndex = zrUtil.indexOf(dimensions, axisType);\n\n                    // If hover data not changed on the axis dimension\n                    if (lastHover.data === value[valIndex]) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value[valIndex];\n                }\n\n                var enableAnimation = tooltipModel.get('animation');\n\n                if (coordSys.type === 'cartesian2d' && !contentNotChange) {\n                    this._showCartesianPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'polar' && !contentNotChange) {\n                    this._showPolarPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'singleAxis' && !contentNotChange) {\n                    this._showSinglePointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n\n                if (axisPointerType !== 'cross') {\n                    this._dispatchAndShowSeriesTooltipContent(\n                        coordSys, seriesCoordSysSameAxis.series, point, value, contentNotChange, e.position\n                    );\n                }\n            }, this);\n\n            if (!this._tooltipModel.get('show')) {\n                this._hideAxisPointer();\n            }\n\n            if (allNotShow) {\n                this._hide();\n            }\n        },\n\n        /**\n         * Show tooltip on axis of cartesian coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {module:echarts/coord/cartesian/Cartesian2D} cartesians\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         * @private\n         */\n        _showCartesianPointer: function (axisPointerModel, cartesian, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n            var baseAxis = cartesian.getBaseAxis();\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && baseAxis.type === 'category'\n                && baseAxis.getBandWidth() > 20;\n\n            if (axisPointerType === 'cross') {\n                moveGridLine('x', point, cartesian.getAxis('y').getGlobalExtent());\n                moveGridLine('y', point, cartesian.getAxis('x').getGlobalExtent());\n\n                this._updateCrossText(cartesian, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = cartesian.getAxis(axisType === 'x' ? 'y' : 'x');\n                var otherExtent = otherAxis.getGlobalExtent();\n\n                if (cartesian.type === 'cartesian2d') {\n                    (axisPointerType === 'line' ? moveGridLine : moveGridShadow)(\n                        axisType, point, otherExtent\n                    );\n                }\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridLine(axisType, point, otherExtent) {\n                var targetShape = axisType === 'x'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                graphic.subPixelOptimizeLine({\n                    shape: targetShape,\n                    style: pointerEl.style\n                });\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridShadow(axisType, point, otherExtent) {\n                var axis = cartesian.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n                var span = otherExtent[1] - otherExtent[0];\n                var targetShape = axisType === 'x'\n                    ? makeRectShape(point[0] - bandWidth / 2, otherExtent[0], bandWidth, span)\n                    : makeRectShape(otherExtent[0], point[1] - bandWidth / 2, span, bandWidth);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _showSinglePointer: function (axisPointerModel, single, axisType, point, enableAnimation) {\n            var self = this;\n            var axisPointerType = axisPointerModel.get('type');\n            var moveAnimation =\n                enableAnimation\n                && axisPointerType !== 'cross'\n                && single.getBaseAxis().type === 'category';\n            var rect = single.getRect();\n            var otherExtent = [rect.y, rect.y + rect.height];\n\n            moveSingleLine(axisType, point, otherExtent);\n\n            /**\n             * @inner\n             */\n            function moveSingleLine(axisType, point, otherExtent) {\n                var axis = single.getAxis();\n                var orient = axis.orient;\n\n                var targetShape = orient === 'horizontal'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    single, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n        },\n\n        /**\n         * Show tooltip on axis of polar coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {Array.<module:echarts/coord/polar/Polar>} polar\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         */\n        _showPolarPointer: function (axisPointerModel, polar, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n\n            var angleAxis = polar.getAngleAxis();\n            var radiusAxis = polar.getRadiusAxis();\n\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && polar.getBaseAxis().type === 'category';\n\n            if (axisPointerType === 'cross') {\n                movePolarLine('angle', point, radiusAxis.getExtent());\n                movePolarLine('radius', point, angleAxis.getExtent());\n\n                this._updateCrossText(polar, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = polar.getAxis(axisType === 'radius' ? 'angle' : 'radius');\n                var otherExtent = otherAxis.getExtent();\n\n                (axisPointerType === 'line' ? movePolarLine : movePolarShadow)(\n                    axisType, point, otherExtent\n                );\n            }\n            /**\n             * @inner\n             */\n            function movePolarLine(axisType, point, otherExtent) {\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                if (axisType === 'angle') {\n                    var p1 = polar.coordToPoint([otherExtent[0], mouseCoord[1]]);\n                    var p2 = polar.coordToPoint([otherExtent[1], mouseCoord[1]]);\n                    targetShape = makeLineShape(p1[0], p1[1], p2[0], p2[1]);\n                }\n                else {\n                    targetShape = {\n                        cx: polar.cx,\n                        cy: polar.cy,\n                        r: mouseCoord[0]\n                    };\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function movePolarShadow(axisType, point, otherExtent) {\n                var axis = polar.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                var radian = Math.PI / 180;\n\n                if (axisType === 'angle') {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        otherExtent[0], otherExtent[1],\n                        // In ECharts y is negative if angle is positive\n                        (-mouseCoord[1] - bandWidth / 2) * radian,\n                        (-mouseCoord[1] + bandWidth / 2) * radian\n                    );\n                }\n                else {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        mouseCoord[0] - bandWidth / 2,\n                        mouseCoord[0] + bandWidth / 2,\n                        0, Math.PI * 2\n                    );\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _updateCrossText: function (coordSys, point, axisPointerModel) {\n            var crossStyleModel = axisPointerModel.getModel('crossStyle');\n            var textStyleModel = crossStyleModel.getModel('textStyle');\n\n            var tooltipModel = this._tooltipModel;\n\n            var text = this._crossText;\n            if (!text) {\n                text = this._crossText = new graphic.Text({\n                    style: {\n                        textAlign: 'left',\n                        textVerticalAlign: 'bottom'\n                    }\n                });\n                this.group.add(text);\n            }\n\n            var value = coordSys.pointToData(point);\n\n            var dims = coordSys.dimensions;\n            value = zrUtil.map(value, function (val, idx) {\n                var axis = coordSys.getAxis(dims[idx]);\n                if (axis.type === 'category' || axis.type === 'time') {\n                    val = axis.scale.getLabel(val);\n                }\n                else {\n                    val = formatUtil.addCommas(\n                        val.toFixed(axis.getPixelPrecision())\n                    );\n                }\n                return val;\n            });\n\n            text.setStyle({\n                fill: textStyleModel.getTextColor() || crossStyleModel.get('color'),\n                textFont: textStyleModel.getFont(),\n                text: value.join(', '),\n                x: point[0] + 5,\n                y: point[1] - 5\n            });\n            text.z = tooltipModel.get('z');\n            text.zlevel = tooltipModel.get('zlevel');\n        },\n\n        _getPointerElement: function (coordSys, pointerModel, axisType, initShape) {\n            var tooltipModel = this._tooltipModel;\n            var z = tooltipModel.get('z');\n            var zlevel = tooltipModel.get('zlevel');\n            var axisPointers = this._axisPointers;\n            var coordSysName = coordSys.name;\n            axisPointers[coordSysName] = axisPointers[coordSysName] || {};\n            if (axisPointers[coordSysName][axisType]) {\n                return axisPointers[coordSysName][axisType];\n            }\n\n            // Create if not exists\n            var pointerType = pointerModel.get('type');\n            var styleModel = pointerModel.getModel(pointerType + 'Style');\n            var isShadow = pointerType === 'shadow';\n            var style = styleModel[isShadow ? 'getAreaStyle' : 'getLineStyle']();\n\n            var elementType = coordSys.type === 'polar'\n                ? (isShadow ? 'Sector' : (axisType === 'radius' ? 'Circle' : 'Line'))\n                : (isShadow ? 'Rect' : 'Line');\n\n            isShadow ? (style.stroke = null) : (style.fill = null);\n\n            var el = axisPointers[coordSysName][axisType] = new graphic[elementType]({\n                style: style,\n                z: z,\n                zlevel: zlevel,\n                silent: true,\n                shape: initShape\n            });\n\n            this.group.add(el);\n            return el;\n        },\n\n        /**\n         * Dispatch actions and show tooltip on series\n         * @param {Array.<module:echarts/model/Series>} seriesList\n         * @param {Array.<number>} point\n         * @param {Array.<number>} value\n         * @param {boolean} contentNotChange\n         * @param {Array.<number>|string|Function} [positionExpr]\n         */\n        _dispatchAndShowSeriesTooltipContent: function (\n            coordSys, seriesList, point, value, contentNotChange, positionExpr\n        ) {\n\n            var rootTooltipModel = this._tooltipModel;\n\n            var baseAxis = coordSys.getBaseAxis();\n            var baseDimIndex = ({x: 1, radius: 1, single: 1})[baseAxis.dim] ? 0 : 1;\n\n            if (!seriesList.length) {\n                return;\n            }\n\n            var payloadBatch = zrUtil.map(seriesList, function (series) {\n                return {\n                    seriesIndex: series.seriesIndex,\n                    dataIndexInside: series.getAxisTooltipDataIndex\n                        ? series.getAxisTooltipDataIndex(series.coordDimToDataDim(baseAxis.dim), value, baseAxis)\n                        : series.getData().indexOfNearest(\n                            series.coordDimToDataDim(baseAxis.dim)[0],\n                            value[baseDimIndex],\n                            // Add a threshold to avoid find the wrong dataIndex when data length is not same\n                            false, baseAxis.type === 'category' ? 0.5 : null\n                        )\n                };\n            });\n            var sampleSeriesIndex;\n            zrUtil.each(payloadBatch, function (payload, idx) {\n                if (seriesList[idx].getData().hasValue(payload.dataIndexInside)) {\n                    sampleSeriesIndex = idx;\n                }\n            });\n            // Fallback to 0.\n            sampleSeriesIndex = sampleSeriesIndex || 0;\n\n            var lastHover = this._lastHover;\n            var api = this._api;\n            // Dispatch downplay action\n            if (lastHover.payloadBatch && !contentNotChange) {\n                api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Dispatch highlight action\n            if (!contentNotChange) {\n                api.dispatchAction({\n                    type: 'highlight',\n                    batch: payloadBatch\n                });\n                lastHover.payloadBatch = payloadBatch;\n            }\n            // Dispatch showTip action\n            var dataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n            api.dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                // expose to user.\n                dataIndex: seriesList[sampleSeriesIndex].getData().getRawIndex(dataIndex),\n                seriesIndex: payloadBatch[sampleSeriesIndex].seriesIndex,\n                from: this.uid\n            });\n\n            if (baseAxis && rootTooltipModel.get('showContent') && rootTooltipModel.get('show')) {\n                var paramsList = zrUtil.map(seriesList, function (series, index) {\n                    return series.getDataParams(payloadBatch[index].dataIndexInside);\n                });\n\n                if (!contentNotChange) {\n                    // Update html content\n                    var firstDataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = baseAxis.type === 'time'\n                        ? baseAxis.scale.getLabel(value[baseDimIndex])\n                        : seriesList[sampleSeriesIndex].getData().getName(firstDataIndex);\n                    var defaultHtml = (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + zrUtil.map(seriesList, function (series, index) {\n                            return series.formatTooltip(payloadBatch[index].dataIndexInside, true);\n                        }).join('<br />');\n\n                    var asyncTicket = 'axis_' + coordSys.name + '_' + firstDataIndex;\n\n                    this._showTooltipContent(\n                        rootTooltipModel, defaultHtml, paramsList, asyncTicket,\n                        point[0], point[1], positionExpr, null, api\n                    );\n                }\n                else {\n                    updatePosition(\n                        positionExpr || rootTooltipModel.get('position'),\n                        point[0], point[1],\n                        rootTooltipModel.get('confine'),\n                        this._tooltipContent, paramsList, null, api\n                    );\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on item\n         * @param {module:echarts/model/Series} seriesModel\n         * @param {number} dataIndex\n         * @param {string} dataType\n         * @param {Object} e\n         */\n        _showItemTooltipContent: function (seriesModel, dataIndex, dataType, e) {\n            // FIXME Graph data\n            var api = this._api;\n            var data = seriesModel.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var tooltipOpt = itemModel.get('tooltip', true);\n            if (typeof tooltipOpt === 'string') {\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                var tooltipContent = tooltipOpt;\n                tooltipOpt = {\n                    formatter: tooltipContent\n                };\n            }\n            var rootTooltipModel = this._tooltipModel;\n            var seriesTooltipModel = seriesModel.getModel(\n                'tooltip', rootTooltipModel\n            );\n            var tooltipModel = new Model(tooltipOpt, seriesTooltipModel, seriesTooltipModel.ecModel);\n\n            var params = seriesModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = seriesModel.formatTooltip(dataIndex, false, dataType);\n\n            var asyncTicket = 'item_' + seriesModel.name + '_' + dataIndex;\n\n            this._showTooltipContent(\n                tooltipModel, defaultHtml, params, asyncTicket,\n                e.offsetX, e.offsetY, e.position, e.target, api\n            );\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, target, api\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (tooltipModel.get('showContent') && tooltipModel.get('show')) {\n                var tooltipContent = this._tooltipContent;\n                var confine = tooltipModel.get('confine');\n\n                var formatter = tooltipModel.get('formatter');\n                positionExpr = positionExpr || tooltipModel.get('position');\n                var html = defaultHtml;\n\n                if (formatter) {\n                    if (typeof formatter === 'string') {\n                        html = formatUtil.formatTpl(formatter, params, true);\n                    }\n                    else if (typeof formatter === 'function') {\n                        var self = this;\n                        var ticket = asyncTicket;\n                        var callback = function (cbTicket, html) {\n                            if (cbTicket === self._ticket) {\n                                tooltipContent.setContent(html);\n\n                                updatePosition(\n                                    positionExpr, x, y, confine,\n                                    tooltipContent, params, target, api\n                                );\n                            }\n                        };\n                        self._ticket = ticket;\n                        html = formatter(params, ticket, callback);\n                    }\n                }\n\n                tooltipContent.show(tooltipModel);\n                tooltipContent.setContent(html);\n\n                updatePosition(\n                    positionExpr, x, y, confine,\n                    tooltipContent, params, target, api\n                );\n            }\n        },\n\n        /**\n         * Show axis pointer\n         * @param {string} [coordSysName]\n         */\n        _showAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.show();\n                });\n            }\n            else {\n                this.group.eachChild(function (child) {\n                    child.show();\n                });\n                this.group.show();\n            }\n        },\n\n        _resetLastHover: function () {\n            var lastHover = this._lastHover;\n            if (lastHover.payloadBatch) {\n                this._api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Reset lastHover\n            this._lastHover = {};\n        },\n        /**\n         * Hide axis pointer\n         * @param {string} [coordSysName]\n         */\n        _hideAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.hide();\n                });\n            }\n            else {\n                if (this.group.children().length) {\n                    this.group.hide();\n                }\n            }\n        },\n\n        _hide: function () {\n            clearTimeout(this._showTimeout);\n\n            this._hideAxisPointer();\n            this._resetLastHover();\n            if (!this._alwaysShowContent) {\n                this._tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._api.dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n\n            this._lastX = this._lastY = null;\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var zr = api.getZr();\n            this._tooltipContent.hide();\n\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n        }\n    });\n\n\n/***/ }),\n/* 424 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(288);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(285);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        isBlank: function () {\n            return this._isBlank;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        setBlank: function (isBlank) {\n            this._isBlank = isBlank;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n/* 425 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(285);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            // Default with axisTick\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n/* 426 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(285);\n    var axisHelper = __webpack_require__(316);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n/* 427 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(425);\n    var zrUtil = __webpack_require__(285);\n    var ComponentModel = __webpack_require__(296);\n    var layout = __webpack_require__(298);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n/* 428 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(285);\n    var Axis = __webpack_require__(424);\n    var axisLabelInterval = __webpack_require__(432);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        getGlobalExtent: function () {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            return ret;\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n/* 429 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(285);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n/* 430 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(285);\n    var Cartesian = __webpack_require__(429);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n/* 431 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(329);\n    var ComponentModel = __webpack_require__(296);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n/* 432 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = __webpack_require__(285);\n    var axisHelper = __webpack_require__(316);\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n/***/ }),\n/* 433 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n/* 434 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(285);\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Array.<string>} [defaultNames]    Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [extraPrefix]             Prefix of name when filling the left dimensions.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\n        if (!data) {\n            return dimensions;\n        }\n\n        var value0 = retrieveValue(data[0]);\n        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\n\n        defaultNames = defaultNames || [];\n        extraPrefix = extraPrefix || 'extra';\n        for (var i = 0; i < dimSize; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n/* 435 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(285);\n    var numberUtil = __webpack_require__(288);\n    var parsePercent = numberUtil.parsePercent;\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(barSeries, function (seriesModel, idx) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n\n            var stackId = getSeriesStackId(seriesModel);\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            if (barWidth && !stacks[stackId].width) {\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                stacks[stackId].width = barWidth;\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (!column.width && maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coords = cartesian.dataToPoints(data, true);\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(valueAxis.dim, function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    module.exports = barLayoutGrid;\n\n\n/***/ }),\n/* 436 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (coordSys.type === 'singleAxis') {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n/***/ }),\n/* 437 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(287);\n    var zrUtil = __webpack_require__(285);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n/* 438 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(285);\n    var modelUtil = __webpack_require__(293);\n    var Model = __webpack_require__(294);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(296);\n\n    var globalDefault = __webpack_require__(440);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption();\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts;\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(332));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n/* 439 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(285);\n    var modelUtil = __webpack_require__(293);\n    var ComponentModel = __webpack_require__(296);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n/* 440 */\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: true,\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000\n    };\n\n\n/***/ }),\n/* 441 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(304)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n/* 442 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n/* 443 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(304)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes) {\n            var style = getItemStyle.call(this, excludes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n/* 444 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(304)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n/* 445 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(301);\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n/***/ }),\n/* 446 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(285);\n    var compatStyle = __webpack_require__(447);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 447 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(285);\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n/***/ }),\n/* 448 */\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n/* 449 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(285);\n    var Scale = __webpack_require__(305);\n    var numberUtil = __webpack_require__(288);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(318);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n/* 450 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(285);\n    var Scale = __webpack_require__(305);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n/* 451 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    var zrUtil = __webpack_require__(285);\n    var numberUtil = __webpack_require__(288);\n    var formatUtil = __webpack_require__(291);\n\n    var IntervalScale = __webpack_require__(318);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date);\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                mathCeil(extent[0] / interval) * interval,\n                mathFloor(extent[1] / interval) * interval\n            ];\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function () {\n        return new TimeScale();\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n/* 452 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(324);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n/* 453 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 454 */,\n/* 455 */,\n/* 456 */,\n/* 457 */,\n/* 458 */,\n/* 459 */,\n/* 460 */,\n/* 461 */,\n/* 462 */,\n/* 463 */,\n/* 464 */,\n/* 465 */,\n/* 466 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(384);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(276)(\"434cd1bf\", content, true);\n\n/***/ }),\n/* 467 */,\n/* 468 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(38)(\n  /* script */\n  __webpack_require__(348),\n  /* template */\n  __webpack_require__(482),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 469 */,\n/* 470 */,\n/* 471 */,\n/* 472 */,\n/* 473 */,\n/* 474 */,\n/* 475 */,\n/* 476 */,\n/* 477 */,\n/* 478 */,\n/* 479 */,\n/* 480 */,\n/* 481 */,\n/* 482 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: _vm.className,\n    style: ({\n      height: _vm.height,\n      width: _vm.width\n    }),\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 483 */,\n/* 484 */,\n/* 485 */,\n/* 486 */,\n/* 487 */,\n/* 488 */,\n/* 489 */,\n/* 490 */,\n/* 491 */,\n/* 492 */,\n/* 493 */,\n/* 494 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"components-container\",\n    staticStyle: {\n      \"height\": \"100vh\"\n    }\n  }, [_c('div', {\n    staticClass: \"chart-container\"\n  }, [_c('mixchart', {\n    attrs: {\n      \"id\": \"apple\",\n      \"height\": \"100%\",\n      \"width\": \"100%\"\n    }\n  })], 1)])\n},staticRenderFns: []}\n\n/***/ }),\n/* 495 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(285);\n    var Draggable = __webpack_require__(529);\n\n    var Eventful = __webpack_require__(300);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n/***/ }),\n/* 496 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(285);\n    var config = __webpack_require__(306);\n    var Style = __webpack_require__(346);\n    var Pattern = __webpack_require__(345);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n/* 497 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(306);\n    var util = __webpack_require__(285);\n    var log = __webpack_require__(343);\n    var BoundingRect = __webpack_require__(295);\n    var timsort = __webpack_require__(322);\n\n    var Layer = __webpack_require__(496);\n\n    var requestAnimationFrame = __webpack_require__(339);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(344);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n/* 498 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(285);\n    var env = __webpack_require__(292);\n\n    var Group = __webpack_require__(307);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(322);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n/* 499 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(285);\n    var Dispatcher = __webpack_require__(302).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(339);\n\n    var Animator = __webpack_require__(338);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n/* 500 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(501);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n/* 501 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n/* 502 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(340).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n/* 503 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(299);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 504 */\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 505 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(308).CMD;\n    var line = __webpack_require__(504);\n    var cubic = __webpack_require__(503);\n    var quadratic = __webpack_require__(506);\n    var arc = __webpack_require__(502);\n    var normalizeRadian = __webpack_require__(340).normalizeRadian;\n    var curve = __webpack_require__(299);\n\n    var windingLine = __webpack_require__(507);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n/* 506 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(299);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 507 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n/* 508 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(302);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n/* 509 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(289);\n    var curve = __webpack_require__(299);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n/* 510 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(302);\n    var zrUtil = __webpack_require__(285);\n    var Eventful = __webpack_require__(300);\n    var env = __webpack_require__(292);\n    var GestureMgr = __webpack_require__(508);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n/* 511 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(290);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n/* 512 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(285);\n\n    var Gradient = __webpack_require__(324);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n/* 513 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(285);\n\n    var Gradient = __webpack_require__(324);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n/* 514 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(323);\n    var zrUtil = __webpack_require__(285);\n    var textContain = __webpack_require__(301);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n/* 515 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n/* 516 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(289);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n/* 517 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(289);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n/* 518 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = __webpack_require__(301);\n    var BoundingRect = __webpack_require__(295);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n            rect = style.textPositionRect || rect;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n/* 519 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(290).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n/* 520 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(299);\n    var vec2 = __webpack_require__(289);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(290).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n/* 521 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(290).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 522 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(290).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n/* 523 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(347);\n\n    module.exports = __webpack_require__(290).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n/* 524 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(347);\n\n    module.exports = __webpack_require__(290).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n/* 525 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(515);\n\n    module.exports = __webpack_require__(290).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n/* 526 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(290).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 527 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = __webpack_require__(292);\n    var Path = __webpack_require__(290);\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n/* 528 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(338);\n    var util = __webpack_require__(285);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(343);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n/* 529 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n/* 530 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(309);\n    var vector = __webpack_require__(289);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n/* 531 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(290);\n    var PathProxy = __webpack_require__(308);\n    var transformPath = __webpack_require__(532);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n/* 532 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(308).CMD;\n    var vec2 = __webpack_require__(289);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n/* 533 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(342);\n    var env = __webpack_require__(292);\n    var zrUtil = __webpack_require__(285);\n\n    var Handler = __webpack_require__(495);\n    var Storage = __webpack_require__(498);\n    var Animation = __webpack_require__(499);\n    var HandlerProxy = __webpack_require__(510);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(497)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.5.2';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// js/0.e7c8cdc7b2908f9946cd.js","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@2.0.0@extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@12.0.4@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-cb20660c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/_vue-loader@12.0.4@vue-loader/lib/selector?type=styles&index=0!./mixchart.vue\")\n}\nvar Component = require(\"!../../../node_modules/_vue-loader@12.0.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/_vue-loader@12.0.4@vue-loader/lib/selector?type=script&index=0!./mixchart.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/_vue-loader@12.0.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-cb20660c\\\"}!../../../node_modules/_vue-loader@12.0.4@vue-loader/lib/selector?type=template&index=0!./mixchart.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-cb20660c\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/charts/mixchart.vue\n// module id = 277\n// module chunks = 0","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/util.js\n// module id = 285\n// module chunks = 0","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts (dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this);\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.time && console.time('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            // console.time && console.timeEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            var view = ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId];\n            if (view && view.__alive) {\n                view[method](model, ecModel, ecIns._api, payload);\n            }\n        }, ecIns);\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // if (__DEV__) {\n        //     zrUtil.assert(\n        //         !this[IN_MAIN_PROCESS],\n        //         '`dispatchAction` should not be called during main process.'\n        //         + 'unless updateMathod is \"none\".'\n        //     );\n        // }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        for (var i = 0; i < payloads.length; i++) {\n            var batchItem = payloads[i];\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var actions = [];\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.4.0',\n        dependencies: {\n            zrender: '3.3.0'\n        }\n    };\n\n    function enableConnect(chart) {\n\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n\n    }\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    //\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/echarts.js\n// module id = 286\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var round = Math.round;\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/util/graphic.js\n// module id = 287\n// module chunks = 0","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * Fix rounding error of float numbers\n     * @param {number} x\n     * @return {number}\n     */\n    number.round = function (x, precision) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        return +(+x).toFixed(precision);\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n        var dotIndex = str.indexOf('.');\n        if (dotIndex < 0) {\n            return 0;\n        }\n        return str.length - 1 - dotIndex;\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    /**\n     * @param {string|Date|number} value\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Treat as ISO format. See issue #3623\n            var ret = new Date(value);\n            if (isNaN(+ret)) {\n                // FIXME new Date('1970-01-01') is UTC, new Date('1970/01/01') is local\n                ret = new Date(new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'));\n            }\n            return ret;\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\n    };\n\n    // \"Nice Numbers for Graph Labels\" of Graphic Gems\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\n     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     * @param  {number} val\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exp10 = number.quantity(val);\n        var f = val / exp10; // between 1 and 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        return nf * exp10;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/util/number.js\n// module id = 288\n// module chunks = 0","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/vector.js\n// module id = 289\n// module chunks = 0","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Path.js\n// module id = 290\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n    /**\n     * 每三位默认加,格式化\n     * @type {string|number} x\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var y = date.getFullYear();\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var h = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/util/format.js\n// module id = 291\n// module chunks = 0","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/env.js\n// module id = 292\n// module chunks = 0","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n\n            var seriesIndex = this.seriesIndex;\n            var seriesName = this.name;\n\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: seriesIndex,\n                seriesName: seriesName,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-';\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, goeName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = parsedKey[2];\n\n            if (!mainType || !queryType) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            queryParam[queryType.toLowerCase()] = value;\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/util/model.js\n// module id = 293\n// module chunks = 0","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/model/Model.js\n// module id = 294\n// module chunks = 0","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/BoundingRect.js\n// module id = 295\n// module chunks = 0","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/model/Component.js\n// module id = 296\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/util/clazz.js\n// module id = 297\n// module chunks = 0","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n        var hNames = ['width', 'left', 'right']; // Order by priority.\n        var vNames = ['height', 'top', 'bottom']; // Order by priority.\n        var hResult = merge(hNames);\n        var vResult = merge(vNames);\n\n        copy(hNames, targetOption, hResult);\n        copy(vNames, targetOption, vResult);\n\n        function merge(names) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/util/layout.js\n// module id = 298\n// module chunks = 0","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/curve.js\n// module id = 299\n// module chunks = 0","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/mixin/Eventful.js\n// module id = 300\n// module chunks = 0","\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/text.js\n// module id = 301\n// module chunks = 0","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/event.js\n// module id = 302\n// module chunks = 0","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/tool/color.js\n// module id = 303\n// module chunks = 0","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 304\n// module chunks = 0","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    function Scale() {\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/scale/Scale.js\n// module id = 305\n// module chunks = 0","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/config.js\n// module id = 306\n// module chunks = 0","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/container/Group.js\n// module id = 307\n// module chunks = 0","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/PathProxy.js\n// module id = 308\n// module chunks = 0","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/matrix.js\n// module id = 309\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Interface of Coordinate System Class\n     *\n     * create:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *     @return {Object} coordinate system instance\n     *\n     * update:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *\n     * convertToPixel:\n     * convertFromPixel:\n     *     These two methods is also responsible for determine whether this\n     *     coodinate system is applicable to the given `finder`.\n     *     Each coordinate system will be tried, util one returns none\n     *     null/undefined value.\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {Object} finder\n     *     @param {Array|number} value\n     *     @return {Array|number} convert result.\n     *\n     * containPoint:\n     *     @param {Array.<number>} point In pixel coordinate system.\n     *     @return {boolean}\n     */\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/CoordinateSystem.js\n// module id = 312\n// module chunks = 0","/**\n * @file Data zoom model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var env = require('zrender/lib/core/env');\n    var echarts = require('../../echarts');\n    var modelUtil = require('../../util/model');\n    var helper = require('./helper');\n    var AxisProxy = require('./AxisProxy');\n    var each = zrUtil.each;\n    var eachAxisDim = helper.eachAxisDim;\n\n    var DataZoomModel = echarts.extendComponentModel({\n\n        type: 'dataZoom',\n\n        dependencies: [\n            'xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'\n        ],\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            zlevel: 0,\n            z: 4,                   // Higher than normal component (z: 2).\n            orient: null,           // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n            xAxisIndex: null,       // Default the first horizontal category axis.\n            yAxisIndex: null,       // Default the first vertical category axis.\n\n            filterMode: 'filter',   // Possible values: 'filter' or 'empty'.\n                                    // 'filter': data items which are out of window will be removed.\n                                    //           This option is applicable when filtering outliers.\n                                    // 'empty': data items which are out of window will be set to empty.\n                                    //          This option is applicable when user should not neglect\n                                    //          that there are some data items out of window.\n                                    // Taking line chart as an example, line will be broken in\n                                    // the filtered points when filterModel is set to 'empty', but\n                                    // be connected when set to 'filter'.\n\n            throttle: null,         // Dispatch action by the fixed rate, avoid frequency.\n                                    // default 100. Do not throttle when use null/undefined.\n                                    // If animation === true and animationDurationUpdate > 0,\n                                    // default value is 100, otherwise 20.\n            start: 0,               // Start percent. 0 ~ 100\n            end: 100,               // End percent. 0 ~ 100\n            startValue: null,       // Start value. If startValue specified, start is ignored.\n            endValue: null          // End value. If endValue specified, end is ignored.\n        },\n\n        /**\n         * @override\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * key like x_0, y_1\n             * @private\n             * @type {Object}\n             */\n            this._dataIntervalByAxis = {};\n\n            /**\n             * @private\n             */\n            this._dataInfo = {};\n\n            /**\n             * key like x_0, y_1\n             * @private\n             */\n            this._axisProxies = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * @private\n             */\n            this._autoThrottle = true;\n\n            var rawOption = retrieveRaw(option);\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function (newOption) {\n            var rawOption = retrieveRaw(newOption);\n\n            //FIX #2591\n            zrUtil.merge(this.option, newOption, true);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @protected\n         */\n        doInit: function (rawOption) {\n            var thisOption = this.option;\n\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            this._setDefaultThrottle(rawOption);\n\n            processRangeProp('start', 'startValue', rawOption, thisOption);\n            processRangeProp('end', 'endValue', rawOption, thisOption);\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this._resetTarget();\n\n            this._giveAxisProxies();\n        },\n\n        /**\n         * @private\n         */\n        _giveAxisProxies: function () {\n            var axisProxies = this._axisProxies;\n\n            this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n                var axisModel = this.dependentModels[dimNames.axis][axisIndex];\n\n                // If exists, share axisProxy with other dataZoomModels.\n                var axisProxy = axisModel.__dzAxisProxy || (\n                    // Use the first dataZoomModel as the main model of axisProxy.\n                    axisModel.__dzAxisProxy = new AxisProxy(\n                        dimNames.name, axisIndex, this, ecModel\n                    )\n                );\n                // FIXME\n                // dispose __dzAxisProxy\n\n                axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetTarget: function () {\n            var thisOption = this.option;\n\n            var autoMode = this._judgeAutoMode();\n\n            eachAxisDim(function (dimNames) {\n                var axisIndexName = dimNames.axisIndex;\n                thisOption[axisIndexName] = modelUtil.normalizeToArray(\n                    thisOption[axisIndexName]\n                );\n            }, this);\n\n            if (autoMode === 'axisIndex') {\n                this._autoSetAxisIndex();\n            }\n            else if (autoMode === 'orient') {\n                this._autoSetOrient();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _judgeAutoMode: function () {\n            // Auto set only works for setOption at the first time.\n            // The following is user's reponsibility. So using merged\n            // option is OK.\n            var thisOption = this.option;\n\n            var hasIndexSpecified = false;\n            eachAxisDim(function (dimNames) {\n                // When user set axisIndex as a empty array, we think that user specify axisIndex\n                // but do not want use auto mode. Because empty array may be encountered when\n                // some error occured.\n                if (thisOption[dimNames.axisIndex] != null) {\n                    hasIndexSpecified = true;\n                }\n            }, this);\n\n            var orient = thisOption.orient;\n\n            if (orient == null && hasIndexSpecified) {\n                return 'orient';\n            }\n            else if (!hasIndexSpecified) {\n                if (orient == null) {\n                    thisOption.orient = 'horizontal';\n                }\n                return 'axisIndex';\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetAxisIndex: function () {\n            var autoAxisIndex = true;\n            var orient = this.get('orient', true);\n            var thisOption = this.option;\n            var dependentModels = this.dependentModels;\n\n            if (autoAxisIndex) {\n                // Find axis that parallel to dataZoom as default.\n                var dimName = orient === 'vertical' ? 'y' : 'x';\n\n                if (dependentModels[dimName + 'Axis'].length) {\n                    thisOption[dimName + 'AxisIndex'] = [0];\n                    autoAxisIndex = false;\n                }\n                else {\n                    each(dependentModels.singleAxis, function (singleAxisModel) {\n                        if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n                            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n                            autoAxisIndex = false;\n                        }\n                    });\n                }\n            }\n\n            if (autoAxisIndex) {\n                // Find the first category axis as default. (consider polar)\n                eachAxisDim(function (dimNames) {\n                    if (!autoAxisIndex) {\n                        return;\n                    }\n                    var axisIndices = [];\n                    var axisModels = this.dependentModels[dimNames.axis];\n                    if (axisModels.length && !axisIndices.length) {\n                        for (var i = 0, len = axisModels.length; i < len; i++) {\n                            if (axisModels[i].get('type') === 'category') {\n                                axisIndices.push(i);\n                            }\n                        }\n                    }\n                    thisOption[dimNames.axisIndex] = axisIndices;\n                    if (axisIndices.length) {\n                        autoAxisIndex = false;\n                    }\n                }, this);\n            }\n\n            if (autoAxisIndex) {\n                // FIXME\n                // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n                // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n\n                // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n                // dataZoom component auto adopts series that reference to\n                // both xAxis and yAxis which type is 'value'.\n                this.ecModel.eachSeries(function (seriesModel) {\n                    if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n                        eachAxisDim(function (dimNames) {\n                            var axisIndices = thisOption[dimNames.axisIndex];\n\n                            var axisIndex = seriesModel.get(dimNames.axisIndex);\n                            var axisId = seriesModel.get(dimNames.axisId);\n\n                            var axisModel = seriesModel.ecModel.queryComponents({\n                                mainType: dimNames.axis,\n                                index: axisIndex,\n                                id: axisId\n                            })[0];\n\n                            if (__DEV__) {\n                                if (!axisModel) {\n                                    throw new Error(\n                                        dimNames.axis + ' \"' + zrUtil.retrieve(\n                                            axisIndex,\n                                            axisId,\n                                            0\n                                        ) + '\" not found'\n                                    );\n                                }\n                            }\n                            axisIndex = axisModel.componentIndex;\n\n                            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n                                axisIndices.push(axisIndex);\n                            }\n                        });\n                    }\n                }, this);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetOrient: function () {\n            var dim;\n\n            // Find the first axis\n            this.eachTargetAxis(function (dimNames) {\n                !dim && (dim = dimNames.name);\n            }, this);\n\n            this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n        },\n\n        /**\n         * @private\n         */\n        _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n            // FIXME\n            // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n            // 例如series.type === scatter时。\n\n            var is = true;\n            eachAxisDim(function (dimNames) {\n                var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n                var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n                if (!axisModel || axisModel.get('type') !== axisType) {\n                    is = false;\n                }\n            }, this);\n            return is;\n        },\n\n        /**\n         * @private\n         */\n        _setDefaultThrottle: function (rawOption) {\n            // When first time user set throttle, auto throttle ends.\n            if (rawOption.hasOwnProperty('throttle')) {\n                this._autoThrottle = false;\n            }\n            if (this._autoThrottle) {\n                var globalOption = this.ecModel.option;\n                this.option.throttle =\n                    (globalOption.animation && globalOption.animationDurationUpdate > 0)\n                    ? 100 : 20;\n            }\n        },\n\n        /**\n         * @public\n         */\n        getFirstTargetAxisModel: function () {\n            var firstAxisModel;\n            eachAxisDim(function (dimNames) {\n                if (firstAxisModel == null) {\n                    var indices = this.get(dimNames.axisIndex);\n                    if (indices.length) {\n                        firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n                    }\n                }\n            }, this);\n\n            return firstAxisModel;\n        },\n\n        /**\n         * @public\n         * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n         */\n        eachTargetAxis: function (callback, context) {\n            var ecModel = this.ecModel;\n            eachAxisDim(function (dimNames) {\n                each(\n                    this.get(dimNames.axisIndex),\n                    function (axisIndex) {\n                        callback.call(context, dimNames, axisIndex, this, ecModel);\n                    },\n                    this\n                );\n            }, this);\n        },\n\n        getAxisProxy: function (dimName, axisIndex) {\n            return this._axisProxies[dimName + '_' + axisIndex];\n        },\n\n        /**\n         * If not specified, set to undefined.\n         *\n         * @public\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        setRawRange: function (opt) {\n            each(['start', 'end', 'startValue', 'endValue'], function (name) {\n                // If any of those prop is null/undefined, we should alos set\n                // them, because only one pair between start/end and\n                // startValue/endValue can work.\n                this.option[name] = opt[name];\n            }, this);\n        },\n\n        /**\n         * @public\n         * @return {Array.<number>} [startPercent, endPercent]\n         */\n        getPercentRange: function () {\n            var axisProxy = this.findRepresentativeAxisProxy();\n            if (axisProxy) {\n                return axisProxy.getDataPercentWindow();\n            }\n        },\n\n        /**\n         * @public\n         * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n         *\n         * @param {string} [axisDimName]\n         * @param {number} [axisIndex]\n         * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n         */\n        getValueRange: function (axisDimName, axisIndex) {\n            if (axisDimName == null && axisIndex == null) {\n                var axisProxy = this.findRepresentativeAxisProxy();\n                if (axisProxy) {\n                    return axisProxy.getDataValueWindow();\n                }\n            }\n            else {\n                return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n            }\n        },\n\n        /**\n         * @public\n         * @return {module:echarts/component/dataZoom/AxisProxy}\n         */\n        findRepresentativeAxisProxy: function () {\n            // Find the first hosted axisProxy\n            var axisProxies = this._axisProxies;\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n\n            // If no hosted axis find not hosted axisProxy.\n            // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n            // and the option.start or option.end settings are different. The percentRange\n            // should follow axisProxy.\n            // (We encounter this problem in toolbox data zoom.)\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n        }\n\n    });\n\n    function retrieveRaw(option) {\n        var ret = {};\n        each(\n            ['start', 'end', 'startValue', 'endValue', 'throttle'],\n            function (name) {\n                option.hasOwnProperty(name) && (ret[name] = option[name]);\n            }\n        );\n        return ret;\n    }\n\n    function processRangeProp(percentProp, valueProp, rawOption, thisOption) {\n        // start/end has higher priority over startValue/endValue,\n        // but we should make chart.setOption({endValue: 1000}) effective,\n        // rather than chart.setOption({endValue: 1000, end: null}).\n        if (rawOption[valueProp] != null && rawOption[percentProp] == null) {\n            thisOption[percentProp] = null;\n        }\n        // Otherwise do nothing and use the merge result.\n    }\n\n    module.exports = DataZoomModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/dataZoom/DataZoomModel.js\n// module id = 313\n// module chunks = 0","\n\n    var ComponentView = require('../../view/Component');\n\n    module.exports = ComponentView.extend({\n\n        type: 'dataZoom',\n\n        render: function (dataZoomModel, ecModel, api, payload) {\n            this.dataZoomModel = dataZoomModel;\n            this.ecModel = ecModel;\n            this.api = api;\n        },\n\n        /**\n         * Find the first target coordinate system.\n         *\n         * @protected\n         * @return {Object} {\n         *                   grid: [\n         *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n         *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n         *                       ...\n         *                   ],  // cartesians must not be null/undefined.\n         *                   polar: [\n         *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n         *                       ...\n         *                   ],  // polars must not be null/undefined.\n         *                   singleAxis: [\n         *                       {model: coord0, axisModels: [], coordIndex: 0}\n         *                   ]\n         */\n        getTargetCoordInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var ecModel = this.ecModel;\n            var coordSysLists = {};\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n                if (axisModel) {\n                    var coordModel = axisModel.getCoordSysModel();\n                    coordModel && save(\n                        coordModel,\n                        axisModel,\n                        coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []),\n                        coordModel.componentIndex\n                    );\n                }\n            }, this);\n\n            function save(coordModel, axisModel, store, coordIndex) {\n                var item;\n                for (var i = 0; i < store.length; i++) {\n                    if (store[i].model === coordModel) {\n                        item = store[i];\n                        break;\n                    }\n                }\n                if (!item) {\n                    store.push(item = {\n                        model: coordModel, axisModels: [], coordIndex: coordIndex\n                    });\n                }\n                item.axisModels.push(axisModel);\n            }\n\n            return coordSysLists;\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/dataZoom/DataZoomView.js\n// module id = 314\n// module chunks = 0","\n    var formatUtil = require('../../util/format');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single'];\n    // Supported coords.\n    var COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n\n    /**\n     * @param {string} coordType\n     * @return {boolean}\n     */\n    helper.isCoordSupported = function (coordType) {\n        return zrUtil.indexOf(COORDS, coordType) >= 0;\n    };\n\n    /**\n     * Create \"each\" method to iterate names.\n     *\n     * @pubilc\n     * @param  {Array.<string>} names\n     * @param  {Array.<string>=} attrs\n     * @return {Function}\n     */\n    helper.createNameEach = function (names, attrs) {\n        names = names.slice();\n        var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n        attrs = (attrs || []).slice();\n        var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n\n        return function (callback, context) {\n            zrUtil.each(names, function (name, index) {\n                var nameObj = {name: name, capital: capitalNames[index]};\n\n                for (var j = 0; j < attrs.length; j++) {\n                    nameObj[attrs[j]] = name + capitalAttrs[j];\n                }\n\n                callback.call(context, nameObj);\n            });\n        };\n    };\n\n    /**\n     * Iterate each dimension name.\n     *\n     * @public\n     * @param {Function} callback The parameter is like:\n     *                            {\n     *                                name: 'angle',\n     *                                capital: 'Angle',\n     *                                axis: 'angleAxis',\n     *                                axisIndex: 'angleAixs',\n     *                                index: 'angleIndex'\n     *                            }\n     * @param {Object} context\n     */\n    helper.eachAxisDim = helper.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n\n    /**\n     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n     * dataZoomModels and 'links' make up one or more graphics.\n     * This function finds the graphic where the source dataZoomModel is in.\n     *\n     * @public\n     * @param {Function} forEachNode Node iterator.\n     * @param {Function} forEachEdgeType edgeType iterator\n     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n     */\n    helper.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\n\n        return function (sourceNode) {\n            var result = {\n                nodes: [],\n                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n            };\n\n            forEachEdgeType(function (edgeType) {\n                result.records[edgeType.name] = {};\n            });\n\n            if (!sourceNode) {\n                return result;\n            }\n\n            absorb(sourceNode, result);\n\n            var existsLink;\n            do {\n                existsLink = false;\n                forEachNode(processSingleNode);\n            }\n            while (existsLink);\n\n            function processSingleNode(node) {\n                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n                    absorb(node, result);\n                    existsLink = true;\n                }\n            }\n\n            return result;\n        };\n\n        function isNodeAbsorded(node, result) {\n            return zrUtil.indexOf(result.nodes, node) >= 0;\n        }\n\n        function isLinked(node, result) {\n            var hasLink = false;\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] && (hasLink = true);\n                });\n            });\n            return hasLink;\n        }\n\n        function absorb(node, result) {\n            result.nodes.push(node);\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] = true;\n                });\n            });\n        }\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/dataZoom/helper.js\n// module id = 315\n// module chunks = 0","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        axis.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var extent = axisHelper.getScaleExtent(axis, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axis.type === 'category' ? scale.getLabel(tick) : tick,\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/coord/axisHelper.js\n// module id = 316\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', this.getInitialData(option, ecModel));\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Array.<number>} data indices.\n         */\n        getAxisTooltipDataIndex: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/model/Series.js\n// module id = 317\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            var interval = this._interval;\n            var extent = this._extent;\n            var ticks = [];\n\n            // Consider this case: using dataZoom toolbox, zoom and zoom.\n            var safeLimit = 10000;\n\n            if (interval) {\n                var niceExtent = this._niceExtent;\n                var precision = getPrecisionSafe(interval) + 2;\n\n                if (extent[0] < niceExtent[0]) {\n                    ticks.push(extent[0]);\n                }\n                var tick = niceExtent[0];\n\n                while (tick <= niceExtent[1]) {\n                    ticks.push(tick);\n                    // Avoid rounding error\n                    tick = roundingErrorFix(tick + interval, precision);\n                    if (ticks.length > safeLimit) {\n                        return [];\n                    }\n                }\n                // Consider this case: the last item of ticks is smaller\n                // than niceExtent[1] and niceExtent[1] === extent[1].\n                if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceExtent[1])) {\n                    ticks.push(extent[1]);\n                }\n            }\n\n            return ticks;\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} n\n         * @return {number}\n         */\n        getLabel: function (data) {\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n            // var niceSpan = numberUtil.nice(span, false);\n            var step = roundingErrorFix(\n                numberUtil.nice(span / splitNumber, true),\n                Math.max(\n                    getPrecisionSafe(extent[0]),\n                    getPrecisionSafe(extent[1])\n                // extent may be [0, 1], and step should have 1 more digits.\n                // To make it safe we add 2 more digits\n                ) + 2\n            );\n\n            var precision = getPrecisionSafe(step) + 2;\n            // Niced extent inside original extent\n            var niceExtent = [\n                roundingErrorFix(mathCeil(extent[0] / step) * step, precision),\n                roundingErrorFix(mathFloor(extent[1] / step) * step, precision)\n            ];\n\n            this._interval = step;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundingErrorFix(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundingErrorFix(mathCeil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/scale/Interval.js\n// module id = 318\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/util/component.js\n// module id = 319\n// module chunks = 0","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/util/throttle.js\n// module id = 320\n// module chunks = 0","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/timsort.js\n// module id = 322\n// module chunks = 0","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Displayable.js\n// module id = 323\n// module chunks = 0","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Gradient.js\n// module id = 324\n// module chunks = 0","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/chart/helper/Symbol.js\n// module id = 325\n// module chunks = 0","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\n        }\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['x', 'y', 'z']);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, ['lng', 'lat', 'value'])\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/chart/helper/createListFromArray.js\n// module id = 326\n// module chunks = 0","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/grid.js\n// module id = 327\n// module chunks = 0","\n\n    /**\n     * Calculate slider move result.\n     *\n     * @param {number} delta Move length.\n     * @param {Array.<number>} handleEnds handleEnds[0] and be bigger then handleEnds[1].\n     *                                    handleEnds will be modified in this method.\n     * @param {Array.<number>} extent handleEnds is restricted by extent.\n     *                                extent[0] should less or equals than extent[1].\n     * @param {string} mode 'rigid': Math.abs(handleEnds[0] - handleEnds[1]) remain unchanged,\n     *                      'cross' handleEnds[0] can be bigger then handleEnds[1],\n     *                      'push' handleEnds[0] can not be bigger then handleEnds[1],\n     *                              when they touch, one push other.\n     * @param {number} handleIndex If mode is 'rigid', handleIndex is not required.\n     * @param {Array.<number>} The input handleEnds.\n     */\n    module.exports = function (delta, handleEnds, extent, mode, handleIndex) {\n        if (!delta) {\n            return handleEnds;\n        }\n\n        if (mode === 'rigid') {\n            delta = getRealDelta(delta, handleEnds, extent);\n            handleEnds[0] += delta;\n            handleEnds[1] += delta;\n        }\n        else {\n            delta = getRealDelta(delta, handleEnds[handleIndex], extent);\n            handleEnds[handleIndex] += delta;\n\n            if (mode === 'push' && handleEnds[0] > handleEnds[1]) {\n                handleEnds[1 - handleIndex] = handleEnds[handleIndex];\n            }\n        }\n\n        return handleEnds;\n\n        function getRealDelta(delta, handleEnds, extent) {\n            var handleMinMax = !handleEnds.length\n                ? [handleEnds, handleEnds]\n                : handleEnds.slice();\n            handleEnds[0] > handleEnds[1] && handleMinMax.reverse();\n\n            if (delta < 0 && handleMinMax[0] + delta < extent[0]) {\n                delta = extent[0] - handleMinMax[0];\n            }\n            if (delta > 0 && handleMinMax[1] + delta > extent[1]) {\n                delta = extent[1] - handleMinMax[1];\n            }\n            return delta;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/helper/sliderMove.js\n// module id = 328\n// module chunks = 0","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/coord/cartesian/AxisModel.js\n// module id = 329\n// module chunks = 0","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this._model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this._model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this._model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n        else {\n            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n                if (coordList[i].getAxis('x').index === xAxisIndex\n                    || coordList[i].getAxis('y').index === yAxisIndex\n                ) {\n                    return coordList[i];\n                }\n            }\n        }\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/coord/cartesian/Grid.js\n// module id = 330\n// module chunks = 0","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string>} dimensions\n     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {number}\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var nearestIdx = -1;\n        if (dimData) {\n            var minDist = Number.MAX_VALUE;\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var diff = value - this.get(dim, i, stack);\n                var dist = Math.abs(diff);\n                if (\n                    diff <= maxDistance\n                    && (dist < minDist\n                        // For the case of two data are same on xAxis, which has sequence data.\n                        // Show the nearest index\n                        // https://github.com/ecomfe/echarts/issues/2869\n                        || (dist === minDist && diff > 0)\n                    )\n                ) {\n                    minDist = dist;\n                    nearestIdx = i;\n                }\n            }\n        }\n        return nearestIdx;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/data/List.js\n// module id = 331\n// module chunks = 0","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/model/mixin/colorPalette.js\n// module id = 332\n// module chunks = 0","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/util/symbol.js\n// module id = 333\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/view/Chart.js\n// module id = 334\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/view/Component.js\n// module id = 335\n// module chunks = 0","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Element.js\n// module id = 337\n// module chunks = 0","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/Animator.js\n// module id = 338\n// module chunks = 0","\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/requestAnimationFrame.js\n// module id = 339\n// module chunks = 0","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/util.js\n// module id = 340\n// module chunks = 0","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/LRU.js\n// module id = 341\n// module chunks = 0","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/guid.js\n// module id = 342\n// module chunks = 0","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/log.js\n// module id = 343\n// module chunks = 0","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n\n    var LRU = require('../core/LRU');\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Image.js\n// module id = 344\n// module chunks = 0","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Pattern.js\n// module id = 345\n// module chunks = 0","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textPositionRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Style.js\n// module id = 346\n// module chunks = 0","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/helper/poly.js\n// module id = 347\n// module chunks = 0","<template>\r\n    <div :class=\"className\" :id=\"id\" :style=\"{height:height,width:width}\"></div>\r\n</template>\r\n<script>\r\n    // 引入 ECharts 主模块\r\n    const echarts = require('echarts/lib/echarts');\r\n    require('echarts/lib/chart/bar');\r\n    require('echarts/lib/chart/line');\r\n    // 引入提示框和标题组件\r\n    require('echarts/lib/component/tooltip');\r\n    require('echarts/lib/component/title');\r\n    require('echarts/lib/component/legend');\r\n    require('echarts/lib/component/dataZoom');\r\n    export default {\r\n      name: 'barPercent',\r\n      props: {\r\n        className: {\r\n          type: String,\r\n          default: 'chart'\r\n        },\r\n        id: {\r\n          type: String,\r\n          default: 'chart'\r\n        },\r\n        width: {\r\n          type: String,\r\n          default: '200px'\r\n        },\r\n        height: {\r\n          type: String,\r\n          default: '200px'\r\n        }\r\n      },\r\n      data() {\r\n        return {};\r\n      },\r\n      mounted() {\r\n        this.initChart();\r\n      },\r\n      methods: {\r\n        initChart() {\r\n          this.chart = echarts.init(document.getElementById(this.id));\r\n          const xData = (function() {\r\n            const data = [];\r\n            for (let i = 1; i < 13; i++) {\r\n              data.push(`${i} 月份`);\r\n            }\r\n            return data;\r\n          }());\r\n          this.chart.setOption({\r\n            backgroundColor: '#344b58',\r\n            title: {\r\n              text: '统计',\r\n              subtext: 'from http://gallery.echartsjs.com',\r\n              x: '4%',\r\n              textStyle: {\r\n                color: '#fff',\r\n                fontSize: '22'\r\n              },\r\n              subtextStyle: {\r\n                color: '#90979c',\r\n                fontSize: '16'\r\n              }\r\n            },\r\n            tooltip: {\r\n              trigger: 'axis',\r\n              axisPointer: {\r\n                textStyle: {\r\n                  color: '#fff'\r\n                }\r\n              }\r\n            },\r\n            grid: {\r\n              borderWidth: 0,\r\n              top: 110,\r\n              bottom: 95,\r\n              textStyle: {\r\n                color: '#fff'\r\n              }\r\n            },\r\n            legend: {\r\n              x: '15%',\r\n              top: '10%',\r\n              textStyle: {\r\n                color: '#90979c'\r\n              },\r\n              data: ['女', '男', '平均']\r\n            },\r\n            calculable: true,\r\n            xAxis: [{\r\n              type: 'category',\r\n              axisLine: {\r\n                lineStyle: {\r\n                  color: '#90979c'\r\n                }\r\n              },\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              splitArea: {\r\n                show: false\r\n              },\r\n              axisLabel: {\r\n                interval: 0\r\n\r\n              },\r\n              data: xData\r\n            }],\r\n            yAxis: [{\r\n              type: 'value',\r\n              splitLine: {\r\n                show: false\r\n              },\r\n              axisLine: {\r\n                lineStyle: {\r\n                  color: '#90979c'\r\n                }\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              },\r\n              axisLabel: {\r\n                interval: 0\r\n              },\r\n              splitArea: {\r\n                show: false\r\n              }\r\n            }],\r\n            dataZoom: [{\r\n              show: true,\r\n              height: 30,\r\n              xAxisIndex: [\r\n                0\r\n              ],\r\n              bottom: 30,\r\n              start: 10,\r\n              end: 80,\r\n              handleIcon: 'path://M306.1,413c0,2.2-1.8,4-4,4h-59.8c-2.2,0-4-1.8-4-4V200.8c0-2.2,1.8-4,4-4h59.8c2.2,0,4,1.8,4,4V413z',\r\n              handleSize: '110%',\r\n              handleStyle: {\r\n                color: '#d3dee5'\r\n\r\n              },\r\n              textStyle: {\r\n                color: '#fff' },\r\n              borderColor: '#90979c'\r\n\r\n\r\n            }, {\r\n              type: 'inside',\r\n              show: true,\r\n              height: 15,\r\n              start: 1,\r\n              end: 35\r\n            }],\r\n            series: [{\r\n              name: '女',\r\n              type: 'bar',\r\n              stack: '总量',\r\n              barMaxWidth: 35,\r\n              barGap: '10%',\r\n              itemStyle: {\r\n                normal: {\r\n                  color: 'rgba(255,144,128,1)',\r\n                  label: {\r\n                    show: true,\r\n                    textStyle: {\r\n                      color: '#fff'\r\n                    },\r\n                    position: 'insideTop',\r\n                    formatter(p) {\r\n                      return p.value > 0 ? p.value : '';\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              data: [\r\n                709,\r\n                1917,\r\n                2455,\r\n                2610,\r\n                1719,\r\n                1433,\r\n                1544,\r\n                3285,\r\n                5208,\r\n                3372,\r\n                2484,\r\n                4078\r\n              ]\r\n            },\r\n\r\n            {\r\n              name: '男',\r\n              type: 'bar',\r\n              stack: '总量',\r\n              itemStyle: {\r\n                normal: {\r\n                  color: 'rgba(0,191,183,1)',\r\n                  barBorderRadius: 0,\r\n                  label: {\r\n                    show: true,\r\n                    position: 'top',\r\n                    formatter(p) {\r\n                      return p.value > 0 ? p.value : '';\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              data: [\r\n                327,\r\n                1776,\r\n                507,\r\n                1200,\r\n                800,\r\n                482,\r\n                204,\r\n                1390,\r\n                1001,\r\n                951,\r\n                381,\r\n                220\r\n              ]\r\n            }, {\r\n              name: '平均',\r\n              type: 'line',\r\n              stack: '总量',\r\n              symbolSize: 10,\r\n              symbol: 'circle',\r\n              itemStyle: {\r\n                normal: {\r\n                  color: 'rgba(252,230,48,1)',\r\n                  barBorderRadius: 0,\r\n                  label: {\r\n                    show: true,\r\n                    position: 'top',\r\n                    formatter(p) {\r\n                      return p.value > 0 ? p.value : '';\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              data: [\r\n                1036,\r\n                3693,\r\n                2962,\r\n                3810,\r\n                2519,\r\n                1915,\r\n                1748,\r\n                4675,\r\n                6209,\r\n                4323,\r\n                2865,\r\n                4298\r\n              ]\r\n            }\r\n            ]\r\n          })\r\n        }\r\n      }\r\n    }\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// mixchart.vue?34de10c9","<template>\r\n  <div class=\"components-container\" style='height:100vh'>\r\n    <div class='chart-container'>\r\n       <mixchart id='apple' height='100%' width='100%' />\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\n    import mixchart from 'components/Charts/mixchart';\r\n\r\n    export default {\r\n      components: { mixchart }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n.chart-container{\r\n    position: relative;\r\n    width: 100%;\r\n    height: 90%;\r\n    padding-bottom: 40px;\r\n}\r\n</style>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// mixchart.vue?2698570a","exports = module.exports = require(\"../../../node_modules/_css-loader@0.28.0@css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".chart-container[data-v-cb20660c]{position:relative;width:100%;height:90%;padding-bottom:40px}\", \"\", {\"version\":3,\"sources\":[\"D:/vue/cloud-admin/src/views/charts/mixchart.vue\"],\"names\":[],\"mappings\":\"AACA,kCACI,kBAAmB,AACnB,WAAY,AACZ,WAAY,AACZ,mBAAqB,CACxB\",\"file\":\"mixchart.vue\",\"sourcesContent\":[\"\\n.chart-container[data-v-cb20660c]{\\r\\n    position: relative;\\r\\n    width: 100%;\\r\\n    height: 90%;\\r\\n    padding-bottom: 40px;\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_css-loader@0.28.0@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/_vue-loader@12.0.4@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-cb20660c\",\"scoped\":true,\"hasInlineConfig\":false}!./~/_vue-loader@12.0.4@vue-loader/lib/selector.js?type=styles&index=0!./src/views/charts/mixchart.vue\n// module id = 384\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\n    ];\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/ExtensionAPI.js\n// module id = 385\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('../coord/cartesian/Grid');\n\n    require('./bar/BarSeries');\n    require('./bar/BarView');\n\n    var barLayoutGrid = require('../layout/barGrid');\n    var echarts = require('../echarts');\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    require('../component/grid');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/chart/bar.js\n// module id = 386\n// module chunks = 0","\n\n    module.exports = require('./BaseBarSeries').extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/chart/bar/BarSeries.js\n// module id = 387\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var helper = require('./helper');\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(require('../../model/Model').prototype, require('./barItemStyle'));\n\n    var BarView = require('../../echarts').extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d') {\n                this._renderOnCartesian(seriesModel, ecModel, api);\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _renderOnCartesian: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var isHorizontal = baseAxis.isHorizontal();\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getRectItemLayout(data, dataIndex, itemModel);\n                    var el = createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel);\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getRectItemLayout(data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = createRect(data, newIndex, itemModel, layout, isHorizontal, animationModel, true);\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontal);\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    el && removeRect(dataIndex, animationModel, el);\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        removeRect(el.dataIndex, ecModel, el);\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    function createRect(data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n        var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n        // Animation\n        if (animationModel) {\n            var rectShape = rect.shape;\n            var animateProperty = isHorizontal ? 'height' : 'width';\n            var animateTarget = {};\n            rectShape[animateProperty] = 0;\n            animateTarget[animateProperty] = layout[animateProperty];\n            graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                shape: animateTarget\n            }, animationModel, dataIndex);\n        }\n\n        return rect;\n    }\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = '';\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function getRectItemLayout(data, dataIndex, itemModel) {\n        var layout = data.getItemLayout(dataIndex);\n        var fixedLineWidth = getLineWidth(itemModel, layout);\n\n        // fix layout with lineWidth\n        var signX = layout.width > 0 ? 1 : -1;\n        var signY = layout.height > 0 ? 1 : -1;\n        return {\n            x: layout.x + signX * fixedLineWidth / 2,\n            y: layout.y + signY * fixedLineWidth / 2,\n            width: layout.width - signX * fixedLineWidth,\n            height: layout.height - signY * fixedLineWidth\n        };\n    }\n\n    function updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        helper.setLabel(\n            el.style, hoverStyle, itemModel, color,\n            seriesModel, dataIndex, labelPositionOutside\n        );\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/chart/bar/BarView.js\n// module id = 388\n// module chunks = 0","'use strict';\n\n\n    var SeriesModel = require('../../model/Series');\n    var createListFromArray = require('../helper/createListFromArray');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'cartesian2d') {\n                    throw new Error('Bar only support cartesian2d coordinateSystem');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 389\n// module chunks = 0","\n\n\n    var getBarItemStyle = require('../../model/mixin/makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/chart/bar/barItemStyle.js\n// module id = 390\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = '';\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, color,\n                zrUtil.retrieve(\n                    seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = '';\n        }\n    };\n\n    function setLabel(style, model, color, labelText, labelPositionOutside) {\n        graphic.setText(style, model, color);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/chart/bar/helper.js\n// module id = 391\n// module chunks = 0","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/chart/helper/SymbolDraw.js\n// module id = 392\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/grid');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/chart/line.js\n// module id = 393\n// module chunks = 0","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/chart/line/LineSeries.js\n// module id = 394\n// module chunks = 0","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/chart/line/LineView.js\n// module id = 395\n// module chunks = 0","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 396\n// module chunks = 0","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/chart/line/poly.js\n// module id = 397\n// module chunks = 0","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/AxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/axis.js\n// module id = 398\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\n            // To radian.\n            labelRotation = labelRotation * PI / 180;\n\n            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelBeforeFormat = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelBeforeFormat;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            function isTwoLabelOverlapped(current, next) {\n                var firstRect = current && current.getBoundingRect().clone();\n                var nextRect = next && next.getBoundingRect().clone();\n                if (firstRect && nextRect) {\n                    firstRect.applyTransform(current.getLocalTransform());\n                    nextRect.applyTransform(next.getLocalTransform());\n                    return firstRect.intersect(nextRect);\n                }\n            }\n\n            // If min or max are user set, we need to check\n            // If the tick on min(max) are overlap on their neighbour tick\n            // If they are overlapped, we need to hide the min(max) tick label\n            if (axisModel.getMin() != null) {\n                var firstLabel = textEls[0];\n                var nextLabel = textEls[1];\n                if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n                    firstLabel.ignore = true;\n                }\n            }\n            if (axisModel.getMax() != null) {\n                var lastLabel = textEls[textEls.length - 1];\n                var prevLabel = textEls[textEls.length - 2];\n                if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n                    lastLabel.ignore = true;\n                }\n            }\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.verticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @inner\n     */\n    function innerTextLayout(opt, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            verticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            verticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            verticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            verticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/axis/AxisBuilder.js\n// module id = 399\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        render: function (axisModel, ecModel) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = layoutAxis(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    AxisView.extend({\n        type: 'xAxis'\n    });\n    AxisView.extend({\n        type: 'yAxis'\n    });\n\n    /**\n     * @inner\n     */\n    function layoutAxis(gridModel, axisModel) {\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        if (axis.onZero) {\n            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\n        }\n\n        if (axisModel.getModel('axisTick').get('inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (axisModel.getModel('axisLabel').get('inside')) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\n        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/axis/AxisView.js\n// module id = 400\n// module chunks = 0","/**\n * DataZoom component entry\n */\n\n\n    require('./dataZoom/typeDefaulter');\n\n    require('./dataZoom/DataZoomModel');\n    require('./dataZoom/DataZoomView');\n\n    require('./dataZoom/SliderZoomModel');\n    require('./dataZoom/SliderZoomView');\n\n    require('./dataZoom/InsideZoomModel');\n    require('./dataZoom/InsideZoomView');\n\n    require('./dataZoom/dataZoomProcessor');\n    require('./dataZoom/dataZoomAction');\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/dataZoom.js\n// module id = 401\n// module chunks = 0","/**\n * @file Axis operator\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../../util/number');\n    var helper = require('./helper');\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n\n    /**\n     * Operate single axis.\n     * One axis can only operated by one axis operator.\n     * Different dataZoomModels may be defined to operate the same axis.\n     * (i.e. 'inside' data zoom and 'slider' data zoom components)\n     * So dataZoomModels share one axisProxy in that case.\n     *\n     * @class\n     */\n    var AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._dimName = dimName;\n\n        /**\n         * @private\n         */\n        this._axisIndex = axisIndex;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._valueWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._percentWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._dataExtent;\n\n        /**\n         * @readOnly\n         * @type {module: echarts/model/Global}\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @private\n         * @type {module: echarts/component/dataZoom/DataZoomModel}\n         */\n        this._dataZoomModel = dataZoomModel;\n    };\n\n    AxisProxy.prototype = {\n\n        constructor: AxisProxy,\n\n        /**\n         * Whether the axisProxy is hosted by dataZoomModel.\n         *\n         * @public\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         * @return {boolean}\n         */\n        hostedBy: function (dataZoomModel) {\n            return this._dataZoomModel === dataZoomModel;\n        },\n\n        /**\n         * @return {Array.<number>} Value can only be NaN or finite value.\n         */\n        getDataValueWindow: function () {\n            return this._valueWindow.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getDataPercentWindow: function () {\n            return this._percentWindow.slice();\n        },\n\n        /**\n         * @public\n         * @param {number} axisIndex\n         * @return {Array} seriesModels\n         */\n        getTargetSeriesModels: function () {\n            var seriesModels = [];\n            var ecModel = this.ecModel;\n\n            ecModel.eachSeries(function (seriesModel) {\n                if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n                    var dimName = this._dimName;\n                    var axisModel = ecModel.queryComponents({\n                        mainType: dimName + 'Axis',\n                        index: seriesModel.get(dimName + 'AxisIndex'),\n                        id: seriesModel.get(dimName + 'AxisId')\n                    })[0];\n                    if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n                        seriesModels.push(seriesModel);\n                    }\n                }\n            }, this);\n\n            return seriesModels;\n        },\n\n        getAxisModel: function () {\n            return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n        },\n\n        getOtherAxisModel: function () {\n            var axisDim = this._dimName;\n            var ecModel = this.ecModel;\n            var axisModel = this.getAxisModel();\n            var isCartesian = axisDim === 'x' || axisDim === 'y';\n            var otherAxisDim;\n            var coordSysIndexName;\n            if (isCartesian) {\n                coordSysIndexName = 'gridIndex';\n                otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n            }\n            else {\n                coordSysIndexName = 'polarIndex';\n                otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n            }\n            var foundOtherAxisModel;\n            ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n                if ((otherAxisModel.get(coordSysIndexName) || 0)\n                    === (axisModel.get(coordSysIndexName) || 0)\n                ) {\n                    foundOtherAxisModel = otherAxisModel;\n                }\n            });\n            return foundOtherAxisModel;\n        },\n\n        /**\n         * Only calculate by given range and this._dataExtent, do not change anything.\n         *\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        calculateDataWindow: function (opt) {\n            var dataExtent = this._dataExtent;\n            var axisModel = this.getAxisModel();\n            var scale = axisModel.axis.scale;\n            var percentExtent = [0, 100];\n            var percentWindow = [\n                opt.start,\n                opt.end\n            ];\n            var valueWindow = [];\n\n            // In percent range is used and axis min/max/scale is set,\n            // window should be based on min/max/0, but should not be\n            // based on the extent of filtered data.\n            dataExtent = dataExtent.slice();\n            fixExtentByAxis(dataExtent, axisModel);\n\n            each(['startValue', 'endValue'], function (prop) {\n                valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n            });\n\n            // Normalize bound.\n            each([0, 1], function (idx) {\n                var boundValue = valueWindow[idx];\n                var boundPercent = percentWindow[idx];\n\n                // start/end has higher priority over startValue/endValue,\n                // because start/end can be consistent among different type\n                // of axis but startValue/endValue not.\n\n                if (boundPercent != null || boundValue == null) {\n                    if (boundPercent == null) {\n                        boundPercent = percentExtent[idx];\n                    }\n                    // Use scale.parse to math round for category or time axis.\n                    boundValue = scale.parse(numberUtil.linearMap(\n                        boundPercent, percentExtent, dataExtent, true\n                    ));\n                }\n                else { // boundPercent == null && boundValue != null\n                    boundPercent = numberUtil.linearMap(\n                        boundValue, dataExtent, percentExtent, true\n                    );\n                }\n                // valueWindow[idx] = round(boundValue);\n                // percentWindow[idx] = round(boundPercent);\n                valueWindow[idx] = boundValue;\n                percentWindow[idx] = boundPercent;\n            });\n\n            return {\n                valueWindow: asc(valueWindow),\n                percentWindow: asc(percentWindow)\n            };\n        },\n\n        /**\n         * Notice: reset should not be called before series.restoreData() called,\n         * so it is recommanded to be called in \"process stage\" but not \"model init\n         * stage\".\n         *\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        reset: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            // Culculate data window and data extent, and record them.\n            this._dataExtent = calculateDataExtent(\n                this._dimName, this.getTargetSeriesModels()\n            );\n            var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n            this._valueWindow = dataWindow.valueWindow;\n            this._percentWindow = dataWindow.percentWindow;\n\n            // Update axis setting then.\n            setAxisModel(this);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        restore: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            this._valueWindow = this._percentWindow = null;\n            setAxisModel(this, true);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        filterData: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            var axisDim = this._dimName;\n            var seriesModels = this.getTargetSeriesModels();\n            var filterMode = dataZoomModel.get('filterMode');\n            var valueWindow = this._valueWindow;\n\n            // FIXME\n            // Toolbox may has dataZoom injected. And if there are stacked bar chart\n            // with NaN data, NaN will be filtered and stack will be wrong.\n            // So we need to force the mode to be set empty.\n            // In fect, it is not a big deal that do not support filterMode-'filter'\n            // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n            // selection\" some day, which might need \"adapt to data extent on the\n            // otherAxis\", which is disabled by filterMode-'empty'.\n            var otherAxisModel = this.getOtherAxisModel();\n            if (dataZoomModel.get('$fromToolbox')\n                && otherAxisModel\n                && otherAxisModel.get('type') === 'category'\n            ) {\n                filterMode = 'empty';\n            }\n\n            // Process series data\n            each(seriesModels, function (seriesModel) {\n                var seriesData = seriesModel.getData();\n\n                seriesData && each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    if (filterMode === 'empty') {\n                        seriesModel.setData(\n                            seriesData.map(dim, function (value) {\n                                return !isInWindow(value) ? NaN : value;\n                            })\n                        );\n                    }\n                    else {\n                        seriesData.filterSelf(dim, isInWindow);\n                    }\n                });\n            });\n\n            function isInWindow(value) {\n                return value >= valueWindow[0] && value <= valueWindow[1];\n            }\n        }\n    };\n\n    function calculateDataExtent(axisDim, seriesModels) {\n        var dataExtent = [Infinity, -Infinity];\n\n        each(seriesModels, function (seriesModel) {\n            var seriesData = seriesModel.getData();\n            if (seriesData) {\n                each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    var seriesExtent = seriesData.getDataExtent(dim);\n                    seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n                    seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n                });\n            }\n        }, this);\n\n        if (dataExtent[1] < dataExtent[0]) {\n            dataExtent = [NaN, NaN];\n        }\n\n        return dataExtent;\n    }\n\n    function fixExtentByAxis(dataExtent, axisModel) {\n        var min = axisModel.getMin(true);\n        if (min != null && min !== 'dataMin') {\n            dataExtent[0] = min;\n        }\n        var max = axisModel.getMax(true);\n        if (max != null && max !== 'dataMax') {\n            dataExtent[1] = max;\n        }\n\n        if (!axisModel.get('scale', true)) {\n            dataExtent[0] > 0 && (dataExtent[0] = 0);\n            dataExtent[1] < 0 && (dataExtent[1] = 0);\n        }\n\n        return dataExtent;\n    }\n\n    function setAxisModel(axisProxy, isRestore) {\n        var axisModel = axisProxy.getAxisModel();\n\n        var percentWindow = axisProxy._percentWindow;\n        var valueWindow = axisProxy._valueWindow;\n\n        if (!percentWindow) {\n            return;\n        }\n\n        // [0, 500]: arbitrary value, guess axis extent.\n        var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n        // isRestore or isFull\n        var useOrigin = isRestore || (percentWindow[0] === 0 && percentWindow[1] === 100);\n\n        axisModel.setRange(\n            useOrigin ? null : +valueWindow[0].toFixed(precision),\n            useOrigin ? null : +valueWindow[1].toFixed(precision)\n        );\n    }\n\n    module.exports = AxisProxy;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/dataZoom/AxisProxy.js\n// module id = 402\n// module chunks = 0","/**\n * @file Data zoom model\n */\n\n\n    module.exports = require('./DataZoomModel').extend({\n\n        type: 'dataZoom.inside',\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            disabled: false,   // Whether disable this inside zoom.\n            zoomLock: false  // Whether disable zoom but only pan.\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/dataZoom/InsideZoomModel.js\n// module id = 403\n// module chunks = 0","\n\n    var DataZoomView = require('./DataZoomView');\n    var zrUtil = require('zrender/lib/core/util');\n    var sliderMove = require('../helper/sliderMove');\n    var roams = require('./roams');\n    var bind = zrUtil.bind;\n\n    var InsideZoomView = DataZoomView.extend({\n\n        type: 'dataZoom.inside',\n\n        /**\n         * @override\n         */\n        init: function (ecModel, api) {\n            /**\n             * 'throttle' is used in this.dispatchAction, so we save range\n             * to avoid missing some 'pan' info.\n             * @private\n             * @type {Array.<number>}\n             */\n            this._range;\n        },\n\n        /**\n         * @override\n         */\n        render: function (dataZoomModel, ecModel, api, payload) {\n            InsideZoomView.superApply(this, 'render', arguments);\n\n            // Notice: origin this._range should be maintained, and should not be re-fetched\n            // from dataZoomModel when payload.type is 'dataZoom', otherwise 'pan' or 'zoom'\n            // info will be missed because of 'throttle' of this.dispatchAction.\n            if (roams.shouldRecordRange(payload, dataZoomModel.id)) {\n                this._range = dataZoomModel.getPercentRange();\n            }\n\n            // Reset controllers.\n            zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n\n                var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n                    return roams.generateCoordId(coordInfo.model);\n                });\n\n                zrUtil.each(coordInfoList, function (coordInfo) {\n                    var coordModel = coordInfo.model;\n\n                    roams.register(\n                        api,\n                        {\n                            coordId: roams.generateCoordId(coordModel),\n                            allCoordIds: allCoordIds,\n                            containsPoint: function (x, y) {\n                                return coordModel.coordinateSystem.containPoint([x, y]);\n                            },\n                            dataZoomId: dataZoomModel.id,\n                            throttleRate: dataZoomModel.get('throttle', true),\n                            panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n                            zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName)\n                        }\n                    );\n                }, this);\n\n            }, this);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function () {\n            roams.unregister(this.api, this.dataZoomModel.id);\n            InsideZoomView.superApply(this, 'dispose', arguments);\n            this._range = null;\n        },\n\n        /**\n         * @private\n         */\n        _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n            if (this.dataZoomModel.option.disabled) {\n                return this._range;\n            }\n\n            var range = this._range.slice();\n\n            // Calculate transform by the first axis.\n            var axisModel = coordInfo.axisModels[0];\n            if (!axisModel) {\n                return;\n            }\n\n            var directionInfo = getDirectionInfo[coordSysName](\n                [oldX, oldY], [newX, newY], axisModel, controller, coordInfo\n            );\n\n            var percentDelta = directionInfo.signal\n                * (range[1] - range[0])\n                * directionInfo.pixel / directionInfo.pixelLength;\n\n            sliderMove(percentDelta, range, [0, 100], 'rigid');\n\n            return (this._range = range);\n        },\n\n        /**\n         * @private\n         */\n        _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n            var option = this.dataZoomModel.option;\n\n            if (option.disabled || option.zoomLock) {\n                return this._range;\n            }\n\n            var range = this._range.slice();\n\n            // Calculate transform by the first axis.\n            var axisModel = coordInfo.axisModels[0];\n            if (!axisModel) {\n                return;\n            }\n\n            var directionInfo = getDirectionInfo[coordSysName](\n                null, [mouseX, mouseY], axisModel, controller, coordInfo\n            );\n\n            var percentPoint = (directionInfo.pixel - directionInfo.pixelStart) /\n                directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n\n            scale = Math.max(1 / scale, 0);\n            range[0] = (range[0] - percentPoint) * scale + percentPoint;\n            range[1] = (range[1] - percentPoint) * scale + percentPoint;\n            return (this._range = fixRange(range));\n        }\n\n    });\n\n    var getDirectionInfo = {\n\n        grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n            var axis = axisModel.axis;\n            var ret = {};\n            var rect = coordInfo.model.coordinateSystem.getRect();\n            oldPoint = oldPoint || [0, 0];\n\n            if (axis.dim === 'x') {\n                ret.pixel = newPoint[0] - oldPoint[0];\n                ret.pixelLength = rect.width;\n                ret.pixelStart = rect.x;\n                ret.signal = axis.inverse ? 1 : -1;\n            }\n            else { // axis.dim === 'y'\n                ret.pixel = newPoint[1] - oldPoint[1];\n                ret.pixelLength = rect.height;\n                ret.pixelStart = rect.y;\n                ret.signal = axis.inverse ? -1 : 1;\n            }\n\n            return ret;\n        },\n\n        polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n            var axis = axisModel.axis;\n            var ret = {};\n            var polar = coordInfo.model.coordinateSystem;\n            var radiusExtent = polar.getRadiusAxis().getExtent();\n            var angleExtent = polar.getAngleAxis().getExtent();\n\n            oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n            newPoint = polar.pointToCoord(newPoint);\n\n            if (axisModel.mainType === 'radiusAxis') {\n                ret.pixel = newPoint[0] - oldPoint[0];\n                // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n                // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n                ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n                ret.pixelStart = radiusExtent[0];\n                ret.signal = axis.inverse ? 1 : -1;\n            }\n            else { // 'angleAxis'\n                ret.pixel = newPoint[1] - oldPoint[1];\n                // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n                // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n                ret.pixelLength = angleExtent[1] - angleExtent[0];\n                ret.pixelStart = angleExtent[0];\n                ret.signal = axis.inverse ? -1 : 1;\n            }\n\n            return ret;\n        },\n\n        singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n            var axis = axisModel.axis;\n            var rect = coordInfo.model.coordinateSystem.getRect();\n            var ret = {};\n\n            oldPoint = oldPoint || [0, 0];\n\n            if (axis.orient === 'horizontal') {\n                ret.pixel = newPoint[0] - oldPoint[0];\n                ret.pixelLength = rect.width;\n                ret.pixelStart = rect.x;\n                ret.signal = axis.inverse ? 1 : -1;\n            }\n            else { // 'vertical'\n                ret.pixel = newPoint[1] - oldPoint[1];\n                ret.pixelLength = rect.height;\n                ret.pixelStart = rect.y;\n                ret.signal = axis.inverse ? -1 : 1;\n            }\n\n            return ret;\n        }\n    };\n\n    function fixRange(range) {\n        // Clamp, using !(<= or >=) to handle NaN.\n        // jshint ignore:start\n        var bound = [0, 100];\n        !(range[0] <= bound[1]) && (range[0] = bound[1]);\n        !(range[1] <= bound[1]) && (range[1] = bound[1]);\n        !(range[0] >= bound[0]) && (range[0] = bound[0]);\n        !(range[1] >= bound[0]) && (range[1] = bound[0]);\n        // jshint ignore:end\n\n        return range;\n    }\n\n    module.exports = InsideZoomView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/dataZoom/InsideZoomView.js\n// module id = 404\n// module chunks = 0","/**\n * @file Data zoom model\n */\n\n\n    var DataZoomModel = require('./DataZoomModel');\n\n    var SliderZoomModel = DataZoomModel.extend({\n\n        type: 'dataZoom.slider',\n\n        layoutMode: 'box',\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            show: true,\n\n            // ph => placeholder. Using placehoder here because\n            // deault value can only be drived in view stage.\n            right: 'ph',  // Default align to grid rect.\n            top: 'ph',    // Default align to grid rect.\n            width: 'ph',  // Default align to grid rect.\n            height: 'ph', // Default align to grid rect.\n            left: null,   // Default align to grid rect.\n            bottom: null, // Default align to grid rect.\n\n            backgroundColor: 'rgba(47,69,84,0)',    // Background of slider zoom component.\n            // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n                                                    // highest priority, remain for compatibility of\n                                                    // previous version, but not recommended any more.\n            dataBackground: {\n                lineStyle: {\n                    color: '#2f4554',\n                    width: 0.5,\n                    opacity: 0.3\n                },\n                areaStyle: {\n                    color: 'rgba(47,69,84,0.3)',\n                    opacity: 0.3\n                }\n            },\n            borderColor: '#ddd',                    // border color of the box. For compatibility,\n                                                    // if dataBackgroundColor is set, borderColor\n                                                    // is ignored.\n\n            fillerColor: 'rgba(167,183,204,0.4)',     // Color of selected area.\n            // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n            // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n            handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n            // Percent of the slider height\n            handleSize: '100%',\n\n            handleStyle: {\n                color: '#a7b7cc'\n            },\n\n            labelPrecision: null,\n            labelFormatter: null,\n            showDetail: true,\n            showDataShadow: 'auto',                 // Default auto decision.\n            realtime: true,\n            zoomLock: false,                        // Whether disable zoom.\n            textStyle: {\n                color: '#333'\n            }\n        }\n\n    });\n\n    module.exports = SliderZoomModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/dataZoom/SliderZoomModel.js\n// module id = 405\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var throttle = require('../../util/throttle');\n    var DataZoomView = require('./DataZoomView');\n    var Rect = graphic.Rect;\n    var numberUtil = require('../../util/number');\n    var linearMap = numberUtil.linearMap;\n    var layout = require('../../util/layout');\n    var sliderMove = require('../helper/sliderMove');\n    var asc = numberUtil.asc;\n    var bind = zrUtil.bind;\n    // var mathMax = Math.max;\n    var each = zrUtil.each;\n\n    // Constants\n    var DEFAULT_LOCATION_EDGE_GAP = 7;\n    var DEFAULT_FRAME_BORDER_WIDTH = 1;\n    var DEFAULT_FILLER_SIZE = 30;\n    var HORIZONTAL = 'horizontal';\n    var VERTICAL = 'vertical';\n    var LABEL_GAP = 5;\n    var SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\n\n    var SliderZoomView = DataZoomView.extend({\n\n        type: 'dataZoom.slider',\n\n        init: function (ecModel, api) {\n\n            /**\n             * @private\n             * @type {Object}\n             */\n            this._displayables = {};\n\n            /**\n             * @private\n             * @type {string}\n             */\n            this._orient;\n\n            /**\n             * [0, 100]\n             * @private\n             */\n            this._range;\n\n            /**\n             * [coord of the first handle, coord of the second handle]\n             * @private\n             */\n            this._handleEnds;\n\n            /**\n             * [length, thick]\n             * @private\n             * @type {Array.<number>}\n             */\n            this._size;\n\n            /**\n             * @private\n             * @type {number}\n             */\n            this._handleWidth;\n\n            /**\n             * @private\n             * @type {number}\n             */\n            this._handleHeight;\n\n            /**\n             * @private\n             */\n            this._location;\n\n            /**\n             * @private\n             */\n            this._dragging;\n\n            /**\n             * @private\n             */\n            this._dataShadowInfo;\n\n            this.api = api;\n        },\n\n        /**\n         * @override\n         */\n        render: function (dataZoomModel, ecModel, api, payload) {\n            SliderZoomView.superApply(this, 'render', arguments);\n\n            throttle.createOrUpdate(\n                this,\n                '_dispatchZoomAction',\n                this.dataZoomModel.get('throttle'),\n                'fixRate'\n            );\n\n            this._orient = dataZoomModel.get('orient');\n\n            if (this.dataZoomModel.get('show') === false) {\n                this.group.removeAll();\n                return;\n            }\n\n            // Notice: this._resetInterval() should not be executed when payload.type\n            // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n            // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n            if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n                this._buildView();\n            }\n\n            this._updateView();\n        },\n\n        /**\n         * @override\n         */\n        remove: function () {\n            SliderZoomView.superApply(this, 'remove', arguments);\n            throttle.clear(this, '_dispatchZoomAction');\n        },\n\n        /**\n         * @override\n         */\n        dispose: function () {\n            SliderZoomView.superApply(this, 'dispose', arguments);\n            throttle.clear(this, '_dispatchZoomAction');\n        },\n\n        _buildView: function () {\n            var thisGroup = this.group;\n\n            thisGroup.removeAll();\n\n            this._resetLocation();\n            this._resetInterval();\n\n            var barGroup = this._displayables.barGroup = new graphic.Group();\n\n            this._renderBackground();\n\n            this._renderHandle();\n\n            this._renderDataShadow();\n\n            thisGroup.add(barGroup);\n\n            this._positionGroup();\n        },\n\n        /**\n         * @private\n         */\n        _resetLocation: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var api = this.api;\n\n            // If some of x/y/width/height are not specified,\n            // auto-adapt according to target grid.\n            var coordRect = this._findCoordRect();\n            var ecSize = {width: api.getWidth(), height: api.getHeight()};\n            // Default align by coordinate system rect.\n            var positionInfo = this._orient === HORIZONTAL\n                ? {\n                    // Why using 'right', because right should be used in vertical,\n                    // and it is better to be consistent for dealing with position param merge.\n                    right: ecSize.width - coordRect.x - coordRect.width,\n                    top: (ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP),\n                    width: coordRect.width,\n                    height: DEFAULT_FILLER_SIZE\n                }\n                : { // vertical\n                    right: DEFAULT_LOCATION_EDGE_GAP,\n                    top: coordRect.y,\n                    width: DEFAULT_FILLER_SIZE,\n                    height: coordRect.height\n                };\n\n            // Do not write back to option and replace value 'ph', because\n            // the 'ph' value should be recalculated when resize.\n            var layoutParams = layout.getLayoutParams(dataZoomModel.option);\n\n            // Replace the placeholder value.\n            zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n                if (layoutParams[name] === 'ph') {\n                    layoutParams[name] = positionInfo[name];\n                }\n            });\n\n            var layoutRect = layout.getLayoutRect(\n                layoutParams,\n                ecSize,\n                dataZoomModel.padding\n            );\n\n            this._location = {x: layoutRect.x, y: layoutRect.y};\n            this._size = [layoutRect.width, layoutRect.height];\n            this._orient === VERTICAL && this._size.reverse();\n        },\n\n        /**\n         * @private\n         */\n        _positionGroup: function () {\n            var thisGroup = this.group;\n            var location = this._location;\n            var orient = this._orient;\n\n            // Just use the first axis to determine mapping.\n            var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n            var inverse = targetAxisModel && targetAxisModel.get('inverse');\n\n            var barGroup = this._displayables.barGroup;\n            var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse;\n\n            // Transform barGroup.\n            barGroup.attr(\n                (orient === HORIZONTAL && !inverse)\n                ? {scale: otherAxisInverse ? [1, 1] : [1, -1]}\n                : (orient === HORIZONTAL && inverse)\n                ? {scale: otherAxisInverse ? [-1, 1] : [-1, -1]}\n                : (orient === VERTICAL && !inverse)\n                ? {scale: otherAxisInverse ? [1, -1] : [1, 1], rotation: Math.PI / 2}\n                // Dont use Math.PI, considering shadow direction.\n                : {scale: otherAxisInverse ? [-1, -1] : [-1, 1], rotation: Math.PI / 2}\n            );\n\n            // Position barGroup\n            var rect = thisGroup.getBoundingRect([barGroup]);\n            thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n        },\n\n        /**\n         * @private\n         */\n        _getViewExtent: function () {\n            return [0, this._size[0]];\n        },\n\n        _renderBackground : function () {\n            var dataZoomModel = this.dataZoomModel;\n            var size = this._size;\n\n            this._displayables.barGroup.add(new Rect({\n                silent: true,\n                shape: {\n                    x: 0, y: 0, width: size[0], height: size[1]\n                },\n                style: {\n                    fill: dataZoomModel.get('backgroundColor')\n                },\n                z2: -40\n            }));\n        },\n\n        _renderDataShadow: function () {\n            var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n            if (!info) {\n                return;\n            }\n\n            var size = this._size;\n            var seriesModel = info.series;\n            var data = seriesModel.getRawData();\n            var otherDim = seriesModel.getShadowDim\n                ? seriesModel.getShadowDim() // @see candlestick\n                : info.otherDim;\n\n            if (otherDim == null) {\n                return;\n            }\n\n            var otherDataExtent = data.getDataExtent(otherDim);\n            // Nice extent.\n            var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n            otherDataExtent = [\n                otherDataExtent[0] - otherOffset,\n                otherDataExtent[1] + otherOffset\n            ];\n            var otherShadowExtent = [0, size[1]];\n\n            var thisShadowExtent = [0, size[0]];\n\n            var areaPoints = [[size[0], 0], [0, 0]];\n            var linePoints = [];\n            var step = thisShadowExtent[1] / (data.count() - 1);\n            var thisCoord = 0;\n\n            // Optimize for large data shadow\n            var stride = Math.round(data.count() / size[0]);\n            var lastIsEmpty;\n            data.each([otherDim], function (value, index) {\n                if (stride > 0 && (index % stride)) {\n                    thisCoord += step;\n                    return;\n                }\n\n                // FIXME\n                // Should consider axis.min/axis.max when drawing dataShadow.\n\n                // FIXME\n                // 应该使用统一的空判断？还是在list里进行空判断？\n                var isEmpty = value == null || isNaN(value) || value === '';\n                // See #4235.\n                var otherCoord = isEmpty\n                    ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true);\n\n                // Attempt to draw data shadow precisely when there are empty value.\n                if (isEmpty && !lastIsEmpty && index) {\n                    areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n                    linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n                }\n                else if (!isEmpty && lastIsEmpty) {\n                    areaPoints.push([thisCoord, 0]);\n                    linePoints.push([thisCoord, 0]);\n                }\n\n                areaPoints.push([thisCoord, otherCoord]);\n                linePoints.push([thisCoord, otherCoord]);\n\n                thisCoord += step;\n                lastIsEmpty = isEmpty;\n            });\n\n            var dataZoomModel = this.dataZoomModel;\n            // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n            this._displayables.barGroup.add(new graphic.Polygon({\n                shape: {points: areaPoints},\n                style: zrUtil.defaults(\n                    {fill: dataZoomModel.get('dataBackgroundColor')},\n                    dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()\n                ),\n                silent: true,\n                z2: -20\n            }));\n            this._displayables.barGroup.add(new graphic.Polyline({\n                shape: {points: linePoints},\n                style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n                silent: true,\n                z2: -19\n            }));\n        },\n\n        _prepareDataShadowInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var showDataShadow = dataZoomModel.get('showDataShadow');\n\n            if (showDataShadow === false) {\n                return;\n            }\n\n            // Find a representative series.\n            var result;\n            var ecModel = this.ecModel;\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var seriesModels = dataZoomModel\n                    .getAxisProxy(dimNames.name, axisIndex)\n                    .getTargetSeriesModels();\n\n                zrUtil.each(seriesModels, function (seriesModel) {\n                    if (result) {\n                        return;\n                    }\n\n                    if (showDataShadow !== true && zrUtil.indexOf(\n                            SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')\n                        ) < 0\n                    ) {\n                        return;\n                    }\n\n                    var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n                    var otherDim = getOtherDim(dimNames.name);\n                    var otherAxisInverse;\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (otherDim != null && coordSys.getOtherAxis) {\n                        otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n                    }\n\n                    result = {\n                        thisAxis: thisAxis,\n                        series: seriesModel,\n                        thisDim: dimNames.name,\n                        otherDim: otherDim,\n                        otherAxisInverse: otherAxisInverse\n                    };\n\n                }, this);\n\n            }, this);\n\n            return result;\n        },\n\n        _renderHandle: function () {\n            var displaybles = this._displayables;\n            var handles = displaybles.handles = [];\n            var handleLabels = displaybles.handleLabels = [];\n            var barGroup = this._displayables.barGroup;\n            var size = this._size;\n            var dataZoomModel = this.dataZoomModel;\n\n            barGroup.add(displaybles.filler = new Rect({\n                draggable: true,\n                cursor: 'move',\n                drift: bind(this._onDragMove, this, 'all'),\n                ondragstart: bind(this._showDataInfo, this, true),\n                ondragend: bind(this._onDragEnd, this),\n                onmouseover: bind(this._showDataInfo, this, true),\n                onmouseout: bind(this._showDataInfo, this, false),\n                style: {\n                    fill: dataZoomModel.get('fillerColor'),\n                    textPosition : 'inside'\n                }\n            }));\n\n            // Frame border.\n            barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n                silent: true,\n                shape: {\n                    x: 0,\n                    y: 0,\n                    width: size[0],\n                    height: size[1]\n                },\n                style: {\n                    stroke: dataZoomModel.get('dataBackgroundColor')\n                        || dataZoomModel.get('borderColor'),\n                    lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n                    fill: 'rgba(0,0,0,0)'\n                }\n            })));\n\n            var iconStr = dataZoomModel.get('handleIcon');\n            each([0, 1], function (handleIndex) {\n                var path = graphic.makePath(iconStr, {\n                    style: {\n                        strokeNoScale: true\n                    },\n                    rectHover: true,\n                    cursor: this._orient === 'vertical' ? 'ns-resize' : 'ew-resize',\n                    draggable: true,\n                    drift: bind(this._onDragMove, this, handleIndex),\n                    ondragend: bind(this._onDragEnd, this),\n                    onmouseover: bind(this._showDataInfo, this, true),\n                    onmouseout: bind(this._showDataInfo, this, false)\n                }, {\n                    x: -0.5,\n                    y: 0,\n                    width: 1,\n                    height: 1\n                }, 'center');\n\n                var bRect = path.getBoundingRect();\n                this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n                this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n\n                path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n                var handleColor = dataZoomModel.get('handleColor');\n                // Compatitable with previous version\n                if (handleColor != null) {\n                    path.style.fill = handleColor;\n                }\n\n                barGroup.add(handles[handleIndex] = path);\n\n                var textStyleModel = dataZoomModel.textStyleModel;\n\n                this.group.add(\n                    handleLabels[handleIndex] = new graphic.Text({\n                    silent: true,\n                    invisible: true,\n                    style: {\n                        x: 0, y: 0, text: '',\n                        textVerticalAlign: 'middle',\n                        textAlign: 'center',\n                        fill: textStyleModel.getTextColor(),\n                        textFont: textStyleModel.getFont()\n                    },\n                    z2: 10\n                }));\n\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetInterval: function () {\n            var range = this._range = this.dataZoomModel.getPercentRange();\n            var viewExtent = this._getViewExtent();\n\n            this._handleEnds = [\n                linearMap(range[0], [0, 100], viewExtent, true),\n                linearMap(range[1], [0, 100], viewExtent, true)\n            ];\n        },\n\n        /**\n         * @private\n         * @param {(number|string)} handleIndex 0 or 1 or 'all'\n         * @param {number} dx\n         * @param {number} dy\n         */\n        _updateInterval: function (handleIndex, delta) {\n            var handleEnds = this._handleEnds;\n            var viewExtend = this._getViewExtent();\n\n            sliderMove(\n                delta,\n                handleEnds,\n                viewExtend,\n                (handleIndex === 'all' || this.dataZoomModel.get('zoomLock'))\n                    ? 'rigid' : 'cross',\n                handleIndex\n            );\n\n            this._range = asc([\n                linearMap(handleEnds[0], viewExtend, [0, 100], true),\n                linearMap(handleEnds[1], viewExtend, [0, 100], true)\n            ]);\n        },\n\n        /**\n         * @private\n         */\n        _updateView: function (nonRealtime) {\n            var displaybles = this._displayables;\n            var handleEnds = this._handleEnds;\n            var handleInterval = asc(handleEnds.slice());\n            var size = this._size;\n\n            each([0, 1], function (handleIndex) {\n                // Handles\n                var handle = displaybles.handles[handleIndex];\n                var handleHeight = this._handleHeight;\n                handle.attr({\n                    scale: [handleHeight, handleHeight],\n                    position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n                });\n            }, this);\n\n            // Filler\n            displaybles.filler.setShape({\n                x: handleInterval[0],\n                y: 0,\n                width: handleInterval[1] - handleInterval[0],\n                height: size[1]\n            });\n\n            this._updateDataInfo(nonRealtime);\n        },\n\n        /**\n         * @private\n         */\n        _updateDataInfo: function (nonRealtime) {\n            var dataZoomModel = this.dataZoomModel;\n            var displaybles = this._displayables;\n            var handleLabels = displaybles.handleLabels;\n            var orient = this._orient;\n            var labelTexts = ['', ''];\n\n            // FIXME\n            // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n            if (dataZoomModel.get('showDetail')) {\n                var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n                if (axisProxy) {\n                    var axis = axisProxy.getAxisModel().axis;\n                    var range = this._range;\n\n                    var dataInterval = nonRealtime\n                        // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n                        ? axisProxy.calculateDataWindow({\n                            start: range[0], end: range[1]\n                        }).valueWindow\n                        : axisProxy.getDataValueWindow();\n\n                    labelTexts = [\n                        this._formatLabel(dataInterval[0], axis),\n                        this._formatLabel(dataInterval[1], axis)\n                    ];\n                }\n            }\n\n            var orderedHandleEnds = asc(this._handleEnds.slice());\n\n            setLabel.call(this, 0);\n            setLabel.call(this, 1);\n\n            function setLabel(handleIndex) {\n                // Label\n                // Text should not transform by barGroup.\n                // Ignore handlers transform\n                var barTransform = graphic.getTransform(\n                    displaybles.handles[handleIndex].parent, this.group\n                );\n                var direction = graphic.transformDirection(\n                    handleIndex === 0 ? 'right' : 'left', barTransform\n                );\n                var offset = this._handleWidth / 2 + LABEL_GAP;\n                var textPoint = graphic.applyTransform(\n                    [\n                        orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset),\n                        this._size[1] / 2\n                    ],\n                    barTransform\n                );\n                handleLabels[handleIndex].setStyle({\n                    x: textPoint[0],\n                    y: textPoint[1],\n                    textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n                    textAlign: orient === HORIZONTAL ? direction : 'center',\n                    text: labelTexts[handleIndex]\n                });\n            }\n        },\n\n        /**\n         * @private\n         */\n        _formatLabel: function (value, axis) {\n            var dataZoomModel = this.dataZoomModel;\n            var labelFormatter = dataZoomModel.get('labelFormatter');\n\n            var labelPrecision = dataZoomModel.get('labelPrecision');\n            if (labelPrecision == null || labelPrecision === 'auto') {\n                labelPrecision = axis.getPixelPrecision();\n            }\n\n            var valueStr = (value == null || isNaN(value))\n                ? ''\n                // FIXME Glue code\n                : (axis.type === 'category' || axis.type === 'time')\n                    ? axis.scale.getLabel(Math.round(value))\n                    // param of toFixed should less then 20.\n                    : value.toFixed(Math.min(labelPrecision, 20));\n\n            return zrUtil.isFunction(labelFormatter)\n                ? labelFormatter(value, valueStr)\n                : zrUtil.isString(labelFormatter)\n                ? labelFormatter.replace('{value}', valueStr)\n                : valueStr;\n        },\n\n        /**\n         * @private\n         * @param {boolean} showOrHide true: show, false: hide\n         */\n        _showDataInfo: function (showOrHide) {\n            // Always show when drgging.\n            showOrHide = this._dragging || showOrHide;\n\n            var handleLabels = this._displayables.handleLabels;\n            handleLabels[0].attr('invisible', !showOrHide);\n            handleLabels[1].attr('invisible', !showOrHide);\n        },\n\n        _onDragMove: function (handleIndex, dx, dy) {\n            this._dragging = true;\n\n            // Transform dx, dy to bar coordination.\n            var vertex = this._applyBarTransform([dx, dy], true);\n\n            this._updateInterval(handleIndex, vertex[0]);\n\n            var realtime = this.dataZoomModel.get('realtime');\n\n            this._updateView(!realtime);\n\n            if (realtime) {\n                realtime && this._dispatchZoomAction();\n            }\n        },\n\n        _onDragEnd: function () {\n            this._dragging = false;\n            this._showDataInfo(false);\n            this._dispatchZoomAction();\n        },\n\n        /**\n         * This action will be throttled.\n         * @private\n         */\n        _dispatchZoomAction: function () {\n            var range = this._range;\n\n            this.api.dispatchAction({\n                type: 'dataZoom',\n                from: this.uid,\n                dataZoomId: this.dataZoomModel.id,\n                start: range[0],\n                end: range[1]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _applyBarTransform: function (vertex, inverse) {\n            var barTransform = this._displayables.barGroup.getLocalTransform();\n            return graphic.applyTransform(vertex, barTransform, inverse);\n        },\n\n        /**\n         * @private\n         */\n        _findCoordRect: function () {\n            // Find the grid coresponding to the first axis referred by dataZoom.\n            var rect;\n            each(this.getTargetCoordInfo(), function (coordInfoList) {\n                if (!rect && coordInfoList.length) {\n                    var coordSys = coordInfoList[0].model.coordinateSystem;\n                    rect = coordSys.getRect && coordSys.getRect();\n                }\n            });\n            if (!rect) {\n                var width = this.api.getWidth();\n                var height = this.api.getHeight();\n                rect = {\n                    x: width * 0.2,\n                    y: height * 0.2,\n                    width: width * 0.6,\n                    height: height * 0.6\n                };\n            }\n\n            return rect;\n        }\n\n    });\n\n    function getOtherDim(thisDim) {\n        // FIXME\n        // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n        var map = {x: 'y', y: 'x', radius: 'angle', angle: 'radius'};\n        return map[thisDim];\n    }\n\n    module.exports = SliderZoomView;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/dataZoom/SliderZoomView.js\n// module id = 406\n// module chunks = 0","/**\n * @file Data zoom action\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var helper = require('./helper');\n    var echarts = require('../../echarts');\n\n\n    echarts.registerAction('dataZoom', function (payload, ecModel) {\n\n        var linkedNodesFinder = helper.createLinkedNodesFinder(\n            zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'),\n            helper.eachAxisDim,\n            function (model, dimNames) {\n                return model.get(dimNames.axisIndex);\n            }\n        );\n\n        var effectedModels = [];\n\n        ecModel.eachComponent(\n            {mainType: 'dataZoom', query: payload},\n            function (model, index) {\n                effectedModels.push.apply(\n                    effectedModels, linkedNodesFinder(model).nodes\n                );\n            }\n        );\n\n        zrUtil.each(effectedModels, function (dataZoomModel, index) {\n            dataZoomModel.setRawRange({\n                start: payload.start,\n                end: payload.end,\n                startValue: payload.startValue,\n                endValue: payload.endValue\n            });\n        });\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/dataZoom/dataZoomAction.js\n// module id = 407\n// module chunks = 0","/**\n * @file Data zoom processor\n */\n\n\n    var echarts = require('../../echarts');\n\n    echarts.registerProcessor(function (ecModel, api) {\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // We calculate window and reset axis here but not in model\n            // init stage and not after action dispatch handler, because\n            // reset should be called after seriesData.restoreData.\n            dataZoomModel.eachTargetAxis(resetSingleAxis);\n\n            // Caution: data zoom filtering is order sensitive when using\n            // percent range and no min/max/scale set on axis.\n            // For example, we have dataZoom definition:\n            // [\n            //      {xAxisIndex: 0, start: 30, end: 70},\n            //      {yAxisIndex: 0, start: 20, end: 80}\n            // ]\n            // In this case, [20, 80] of y-dataZoom should be based on data\n            // that have filtered by x-dataZoom using range of [30, 70],\n            // but should not be based on full raw data. Thus sliding\n            // x-dataZoom will change both ranges of xAxis and yAxis,\n            // while sliding y-dataZoom will only change the range of yAxis.\n            // So we should filter x-axis after reset x-axis immediately,\n            // and then reset y-axis and filter y-axis.\n            dataZoomModel.eachTargetAxis(filterSingleAxis);\n        });\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // Fullfill all of the range props so that user\n            // is able to get them from chart.getOption().\n            var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n            var percentRange = axisProxy.getDataPercentWindow();\n            var valueRange = axisProxy.getDataValueWindow();\n\n            dataZoomModel.setRawRange({\n                start: percentRange[0],\n                end: percentRange[1],\n                startValue: valueRange[0],\n                endValue: valueRange[1]\n            });\n        });\n    });\n\n    function resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n    }\n\n    function filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n    }\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/dataZoom/dataZoomProcessor.js\n// module id = 408\n// module chunks = 0","/**\n * @file Roam controller manager.\n */\n\n\n    // Only create one roam controller for each coordinate system.\n    // one roam controller might be refered by two inside data zoom\n    // components (for example, one for x and one for y). When user\n    // pan or zoom, only dispatch one action for those data zoom\n    // components.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var RoamController = require('../../component/helper/RoamController');\n    var throttle = require('../../util/throttle');\n    var curry = zrUtil.curry;\n\n    var ATTR = '\\0_ec_dataZoom_roams';\n\n    var roams = {\n\n        /**\n         * @public\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} dataZoomInfo\n         * @param {string} dataZoomInfo.coordId\n         * @param {Function} dataZoomInfo.containsPoint\n         * @param {Array.<string>} dataZoomInfo.allCoordIds\n         * @param {string} dataZoomInfo.dataZoomId\n         * @param {number} dataZoomInfo.throttleRate\n         * @param {Function} dataZoomInfo.panGetRange\n         * @param {Function} dataZoomInfo.zoomGetRange\n         */\n        register: function (api, dataZoomInfo) {\n            var store = giveStore(api);\n            var theDataZoomId = dataZoomInfo.dataZoomId;\n            var theCoordId = dataZoomInfo.coordId;\n\n            // Do clean when a dataZoom changes its target coordnate system.\n            // Avoid memory leak, dispose all not-used-registered.\n            zrUtil.each(store, function (record, coordId) {\n                var dataZoomInfos = record.dataZoomInfos;\n                if (dataZoomInfos[theDataZoomId]\n                    && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0\n                ) {\n                    delete dataZoomInfos[theDataZoomId];\n                    record.count--;\n                }\n            });\n\n            cleanStore(store);\n\n            var record = store[theCoordId];\n            // Create if needed.\n            if (!record) {\n                record = store[theCoordId] = {\n                    coordId: theCoordId,\n                    dataZoomInfos: {},\n                    count: 0\n                };\n                record.controller = createController(api, dataZoomInfo, record);\n                record.dispatchAction = zrUtil.curry(dispatchAction, api);\n            }\n\n            // Consider resize, area should be always updated.\n            record.controller.setContainsPoint(dataZoomInfo.containsPoint);\n\n            // Update throttle.\n            throttle.createOrUpdate(\n                record,\n                'dispatchAction',\n                dataZoomInfo.throttleRate,\n                'fixRate'\n            );\n\n            // Update reference of dataZoom.\n            !(record.dataZoomInfos[theDataZoomId]) && record.count++;\n            record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {string} dataZoomId\n         */\n        unregister: function (api, dataZoomId) {\n            var store = giveStore(api);\n\n            zrUtil.each(store, function (record) {\n                record.controller.dispose();\n                var dataZoomInfos = record.dataZoomInfos;\n                if (dataZoomInfos[dataZoomId]) {\n                    delete dataZoomInfos[dataZoomId];\n                    record.count--;\n                }\n            });\n\n            cleanStore(store);\n        },\n\n        /**\n         * @public\n         */\n        shouldRecordRange: function (payload, dataZoomId) {\n            if (payload && payload.type === 'dataZoom' && payload.batch) {\n                for (var i = 0, len = payload.batch.length; i < len; i++) {\n                    if (payload.batch[i].dataZoomId === dataZoomId) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        },\n\n        /**\n         * @public\n         */\n        generateCoordId: function (coordModel) {\n            return coordModel.type + '\\0_' + coordModel.id;\n        }\n    };\n\n    /**\n     * Key: coordId, value: {dataZoomInfos: [], count, controller}\n     * @type {Array.<Object>}\n     */\n    function giveStore(api) {\n        // Mount store on zrender instance, so that we do not\n        // need to worry about dispose.\n        var zr = api.getZr();\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    function createController(api, dataZoomInfo, newRecord) {\n        var controller = new RoamController(api.getZr());\n        controller.enable();\n        controller.on('pan', curry(onPan, newRecord));\n        controller.on('zoom', curry(onZoom, newRecord));\n\n        return controller;\n    }\n\n    function cleanStore(store) {\n        zrUtil.each(store, function (record, coordId) {\n            if (!record.count) {\n                record.controller.dispose();\n                delete store[coordId];\n            }\n        });\n    }\n\n    function onPan(record, dx, dy, oldX, oldY, newX, newY) {\n        wrapAndDispatch(record, function (info) {\n            return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n        });\n    }\n\n    function onZoom(record, scale, mouseX, mouseY) {\n        wrapAndDispatch(record, function (info) {\n            return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n        });\n    }\n\n    function wrapAndDispatch(record, getRange) {\n        var batch = [];\n\n        zrUtil.each(record.dataZoomInfos, function (info) {\n            var range = getRange(info);\n            range && batch.push({\n                dataZoomId: info.dataZoomId,\n                start: range[0],\n                end: range[1]\n            });\n        });\n\n        record.dispatchAction(batch);\n    }\n\n    /**\n     * This action will be throttled.\n     */\n    function dispatchAction(api, batch) {\n        api.dispatchAction({\n            type: 'dataZoom',\n            batch: batch\n        });\n    }\n\n    module.exports = roams;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/dataZoom/roams.js\n// module id = 409\n// module chunks = 0","\n\n    require('../../model/Component').registerSubTypeDefaulter('dataZoom', function (option) {\n        // Default 'slider' when no type specified.\n        return 'slider';\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/dataZoom/typeDefaulter.js\n// module id = 410\n// module chunks = 0","/**\n * @module echarts/component/helper/RoamController\n */\n\n\n\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var zrUtil = require('zrender/lib/core/util');\n    var eventTool = require('zrender/lib/core/event');\n    var interactionMutex = require('./interactionMutex');\n\n    function mousedown(e) {\n        if (e.target && e.target.draggable) {\n            return;\n        }\n\n        var x = e.offsetX;\n        var y = e.offsetY;\n\n        if (this.containsPoint && this.containsPoint(x, y)) {\n            this._x = x;\n            this._y = y;\n            this._dragging = true;\n        }\n    }\n\n    function mousemove(e) {\n        if (!this._dragging) {\n            return;\n        }\n\n        eventTool.stop(e.event);\n\n        if (e.gestureEvent !== 'pinch') {\n\n            if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n                return;\n            }\n\n            var x = e.offsetX;\n            var y = e.offsetY;\n\n            var oldX = this._x;\n            var oldY = this._y;\n\n            var dx = x - oldX;\n            var dy = y - oldY;\n\n            this._x = x;\n            this._y = y;\n\n            var target = this.target;\n\n            if (target) {\n                var pos = target.position;\n                pos[0] += dx;\n                pos[1] += dy;\n                target.dirty();\n            }\n\n            eventTool.stop(e.event);\n            this.trigger('pan', dx, dy, oldX, oldY, x, y);\n        }\n    }\n\n    function mouseup(e) {\n        this._dragging = false;\n    }\n\n    function mousewheel(e) {\n        // Convenience:\n        // Mac and VM Windows on Mac: scroll up: zoom out.\n        // Windows: scroll up: zoom in.\n        var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n        zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n    }\n\n    function pinch(e) {\n        if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n            return;\n        }\n        var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n        zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n    }\n\n    function zoom(e, zoomDelta, zoomX, zoomY) {\n        if (this.containsPoint && this.containsPoint(zoomX, zoomY)) {\n            // When mouse is out of roamController rect,\n            // default befavoius should be be disabled, otherwise\n            // page sliding is disabled, contrary to expectation.\n            eventTool.stop(e.event);\n\n            var target = this.target;\n            var zoomLimit = this.zoomLimit;\n\n            if (target) {\n                var pos = target.position;\n                var scale = target.scale;\n\n                var newZoom = this.zoom = this.zoom || 1;\n                newZoom *= zoomDelta;\n                if (zoomLimit) {\n                    var zoomMin = zoomLimit.min || 0;\n                    var zoomMax = zoomLimit.max || Infinity;\n                    newZoom = Math.max(\n                        Math.min(zoomMax, newZoom),\n                        zoomMin\n                    );\n                }\n                var zoomScale = newZoom / this.zoom;\n                this.zoom = newZoom;\n                // Keep the mouse center when scaling\n                pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n                pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n                scale[0] *= zoomScale;\n                scale[1] *= zoomScale;\n\n                target.dirty();\n            }\n\n            this.trigger('zoom', zoomDelta, zoomX, zoomY);\n        }\n    }\n\n    /**\n     * @alias module:echarts/component/helper/RoamController\n     * @constructor\n     * @mixin {module:zrender/mixin/Eventful}\n     *\n     * @param {module:zrender/zrender~ZRender} zr\n     * @param {module:zrender/Element} target\n     */\n    function RoamController(zr, target) {\n\n        /**\n         * @type {module:zrender/Element}\n         */\n        this.target = target;\n\n        /**\n         * @type {Function}\n         */\n        this.containsPoint;\n\n        /**\n         * { min: 1, max: 2 }\n         * @type {Object}\n         */\n        this.zoomLimit;\n\n        /**\n         * @type {number}\n         */\n        this.zoom;\n        /**\n         * @type {module:zrender}\n         */\n        this._zr = zr;\n\n        // Avoid two roamController bind the same handler\n        var bind = zrUtil.bind;\n        var mousedownHandler = bind(mousedown, this);\n        var mousemoveHandler = bind(mousemove, this);\n        var mouseupHandler = bind(mouseup, this);\n        var mousewheelHandler = bind(mousewheel, this);\n        var pinchHandler = bind(pinch, this);\n\n        Eventful.call(this);\n\n        /**\n         * @param {Function} containsPoint\n         *                   input: x, y\n         *                   output: boolean\n         */\n        this.setContainsPoint = function (containsPoint) {\n            this.containsPoint = containsPoint;\n        };\n\n        /**\n         * Notice: only enable needed types. For example, if 'zoom'\n         * is not needed, 'zoom' should not be enabled, otherwise\n         * default mousewheel behaviour (scroll page) will be disabled.\n         *\n         * @param  {boolean|string} [controlType=true] Specify the control type,\n         *                          which can be null/undefined or true/false\n         *                          or 'pan/move' or 'zoom'/'scale'\n         */\n        this.enable = function (controlType) {\n            // Disable previous first\n            this.disable();\n\n            if (controlType == null) {\n                controlType = true;\n            }\n\n            if (controlType === true || (controlType === 'move' || controlType === 'pan')) {\n                zr.on('mousedown', mousedownHandler);\n                zr.on('mousemove', mousemoveHandler);\n                zr.on('mouseup', mouseupHandler);\n            }\n            if (controlType === true || (controlType === 'scale' || controlType === 'zoom')) {\n                zr.on('mousewheel', mousewheelHandler);\n                zr.on('pinch', pinchHandler);\n            }\n        };\n\n        this.disable = function () {\n            zr.off('mousedown', mousedownHandler);\n            zr.off('mousemove', mousemoveHandler);\n            zr.off('mouseup', mouseupHandler);\n            zr.off('mousewheel', mousewheelHandler);\n            zr.off('pinch', pinchHandler);\n        };\n\n        this.dispose = this.disable;\n\n        this.isDragging = function () {\n            return this._dragging;\n        };\n\n        this.isPinching = function () {\n            return this._pinching;\n        };\n    }\n\n    zrUtil.mixin(RoamController, Eventful);\n\n    module.exports = RoamController;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/helper/RoamController.js\n// module id = 411\n// module chunks = 0","\n\n    var ATTR = '\\0_ec_interaction_mutex';\n\n    var interactionMutex = {\n\n        take: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            store[resourceKey] = userKey;\n        },\n\n        release: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            var uKey = store[resourceKey];\n\n            if (uKey === userKey) {\n                store[resourceKey] = null;\n            }\n        },\n\n        isTaken: function (zr, resourceKey) {\n            return !!getStore(zr)[resourceKey];\n        }\n    };\n\n    function getStore(zr) {\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    /**\n     * payload: {\n     *     type: 'takeGlobalCursor',\n     *     key: 'dataZoomSelect', or 'brush', or ...,\n     *         If no userKey, release global cursor.\n     * }\n     */\n    require('../../echarts').registerAction(\n        {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},\n        function () {}\n    );\n\n    module.exports = interactionMutex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/helper/interactionMutex.js\n// module id = 412\n// module chunks = 0","\n    // List layout\n    var layout = require('../../util/layout');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/helper/listComponent.js\n// module id = 413\n// module chunks = 0","/**\n * Legend component entry file8\n */\n\n\n    require('./legend/LegendModel');\n    require('./legend/legendAction');\n    require('./legend/LegendView');\n\n    var echarts = require('../echarts');\n    // Series Filter\n    echarts.registerProcessor(require('./legend/legendFilter'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/legend.js\n// module id = 414\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n\n    var LegendModel = require('../../echarts').extendComponentModel({\n\n        type: 'legend',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 'top',\n            // bottom: 'top',\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/legend/LegendModel.js\n// module id = 415\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolCreator = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var listComponentHelper = require('../helper/listComponent');\n\n    var curry = zrUtil.curry;\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'legend',\n\n        init: function () {\n            this._symbolTypeStore = {};\n        },\n\n        render: function (legendModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!legendModel.get('show')) {\n                return;\n            }\n\n            var selectMode = legendModel.get('selectedMode');\n            var itemAlign = legendModel.get('align');\n\n            if (itemAlign === 'auto') {\n                itemAlign = (legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical')\n                    ? 'right' : 'left';\n            }\n\n            var legendDrawedMap = {};\n\n            zrUtil.each(legendModel.getData(), function (itemModel) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (name === '' || name === '\\n') {\n                    group.add(new graphic.Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawedMap[name]) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawedMap[name] = true;\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawedMap[name]) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawedMap[name] = true;\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawedMap[name]) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n\n            listComponentHelper.layout(group, legendModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, legendModel);\n        },\n\n        _createItem: function (\n            name, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new graphic.Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            // Text\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            var text = new graphic.Text({\n                style: {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textFont: textStyleModel.getFont(),\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                }\n            });\n            itemGroup.add(text);\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n\n\n            this.group.add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            return itemGroup;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/legend/LegendView.js\n// module id = 416\n// module chunks = 0","/**\n * @file Legend action\n */\n\n\n    var echarts = require('../../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (name in selectedMap) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/legend/legendAction.js\n// module id = 417\n// module chunks = 0","\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/legend/legendFilter.js\n// module id = 418\n// module chunks = 0","'use strict';\n\n\n    var echarts = require('../echarts');\n    var graphic = require('../util/graphic');\n    var layout = require('../util/layout');\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: {\n                    text: titleModel.get('text'),\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                },\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: {\n                    text: subText,\n                    textFont: subtextStyleModel.getFont(),\n                    fill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textBaseline: 'top'\n                },\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/title.js\n// module id = 419\n// module chunks = 0","// FIXME Better way to pack data in graphic element\n\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/tooltip.js\n// module id = 420\n// module chunks = 0","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        tooltipModel = tooltipModel;\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self.enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self.enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self.enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            var el = this.el;\n            el.innerHTML = content;\n            el.style.display = content ? 'block' : 'none';\n        },\n\n        moveTo: function (x, y) {\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        // showLater: function ()\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this.enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/tooltip/TooltipContent.js\n// module id = 421\n// module chunks = 0","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\n            trigger: 'item',\n\n            // 触发条件，支持 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove',\n\n            // 是否永远显示 content\n            alwaysShowContent: false,\n\n            // 位置 {Array} | {Function}\n            // position: null\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: true,\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                // 直线指示器样式设置\n                lineStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'solid'\n                },\n\n                crossStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                },\n\n                // 阴影指示器样式设置\n                shadowStyle: {\n                    color: 'rgba(150,150,150,0.3)'\n                }\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/tooltip/TooltipModel.js\n// module id = 422\n// module chunks = 0","\n\n    var TooltipContent = require('./TooltipContent');\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var modelUtil = require('../../util/model');\n    var parsePercent = numberUtil.parsePercent;\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n\n    function dataEqual(a, b) {\n        if (!a || !b) {\n            return false;\n        }\n        var round = numberUtil.round;\n        return round(a[0]) === round(b[0])\n            && round(a[1]) === round(b[1]);\n    }\n    /**\n     * @inner\n     */\n    function makeLineShape(x1, y1, x2, y2) {\n        return {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeRectShape(x, y, width, height) {\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n        var gap = 20;\n\n        if (x + width + gap > viewWidth) {\n            x -= width + gap;\n        }\n        else {\n            x += gap;\n        }\n        if (y + height + gap > viewHeight) {\n            y -= height + gap;\n        }\n        else {\n            y += gap;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, dom) {\n        var domWidth = dom.clientWidth;\n        var domHeight = dom.clientHeight;\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    /**\n     * @param  {string|Function|Array.<number>} positionExpr\n     * @param  {number} x Mouse x\n     * @param  {number} y Mouse y\n     * @param  {boolean} confine Whether confine tooltip content in view rect.\n     * @param  {module:echarts/component/tooltip/TooltipContent} content\n     * @param  {Object|<Array.<Object>} params\n     * @param  {module:zrender/Element} el target element\n     * @param  {module:echarts/ExtensionAPI} api\n     * @return {Array.<number>}\n     */\n    function updatePosition(positionExpr, x, y, confine, content, params, el, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n\n        var rect = el && el.getBoundingRect().clone();\n        el && rect.applyTransform(el.transform);\n        if (typeof positionExpr === 'function') {\n            // Callback of position can be an array or a string specify the position\n            positionExpr = positionExpr([x, y], params, content.el, rect);\n        }\n\n        if (zrUtil.isArray(positionExpr)) {\n            x = parsePercent(positionExpr[0], viewWidth);\n            y = parsePercent(positionExpr[1], viewHeight);\n        }\n        // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n        else if (typeof positionExpr === 'string' && el) {\n            var pos = calcTooltipPosition(\n                positionExpr, rect, content.el\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n        else {\n            var pos = refixTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        if (confine) {\n            var pos = confineTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        content.moveTo(x, y);\n    }\n\n    function ifSeriesSupportAxisTrigger(seriesModel) {\n        var coordSys = seriesModel.coordinateSystem;\n        var trigger = seriesModel.get('tooltip.trigger', true);\n        // Ignore series use item tooltip trigger and series coordinate system is not cartesian or\n        return !(!coordSys\n            || (coordSys.type !== 'cartesian2d' && coordSys.type !== 'polar' && coordSys.type !== 'singleAxis')\n            || trigger === 'item');\n    }\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        _axisPointers: {},\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._axisPointers = {};\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._lastHover = {\n                // data\n                // payloadBatch\n            };\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.enterable = tooltipModel.get('enterable');\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            /**\n             * @type {Object.<string, Array>}\n             */\n            this._seriesGroupByAxis = this._prepareAxisTriggerData(\n                tooltipModel, ecModel\n            );\n\n            var crossText = this._crossText;\n            if (crossText) {\n                this.group.add(crossText);\n            }\n\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && triggerOn !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n\n            var zr = this._api.getZr();\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            if (triggerOn === 'click') {\n                zr.on('click', this._tryShow, this);\n            }\n            else if (triggerOn === 'mousemove') {\n                zr.on('mousemove', this._mousemove, this);\n                zr.on('mouseout', this._hide, this);\n                zr.on('globalout', this._hide, this);\n            }\n            // else triggerOn is 'none', which enable user\n            // to control tooltip totally using API.\n        },\n\n        _mousemove: function (e) {\n            var showDelay = this._tooltipModel.get('showDelay');\n            var self = this;\n            clearTimeout(this._showTimeout);\n            if (showDelay > 0) {\n                this._showTimeout = setTimeout(function () {\n                    self._tryShow(e);\n                }, showDelay);\n            }\n            else {\n                this._tryShow(e);\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            // From self\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            var ecModel = this._ecModel;\n            var seriesIndex = payload.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            var api = this._api;\n\n            var isTriggerAxis = this._tooltipModel.get('trigger') === 'axis';\n            function seriesHaveDataOnIndex(_series) {\n                var data = _series.getData();\n                var dataIndex = modelUtil.queryDataIndex(data, payload);\n                // Have single dataIndex\n                if (dataIndex != null && !zrUtil.isArray(dataIndex)\n                    && data.hasValue(dataIndex)\n                ) {\n                    return true;\n                }\n            }\n\n            if (payload.x == null || payload.y == null) {\n                if (isTriggerAxis) {\n                    // Find another series.\n                    if (seriesModel && !seriesHaveDataOnIndex(seriesModel)) {\n                        seriesModel = null;\n                    }\n                    if (!seriesModel) {\n                        // Find the first series can use axis trigger And data is not null\n                        ecModel.eachSeries(function (_series) {\n                            if (ifSeriesSupportAxisTrigger(_series) && !seriesModel) {\n                                if (seriesHaveDataOnIndex(_series)) {\n                                    seriesModel = _series;\n                                }\n                            }\n                        });\n                    }\n                }\n                else {\n                    // Use the first series by default.\n                    seriesModel = seriesModel || ecModel.getSeriesByIndex(0);\n                }\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n                    if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n                        return;\n                    }\n\n                    var el = data.getItemGraphicEl(dataIndex);\n                    var cx;\n                    var cy;\n                    // Try to get the point in coordinate system\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (seriesModel.getTooltipPosition) {\n                        var point = seriesModel.getTooltipPosition(dataIndex) || [];\n                        cx = point[0];\n                        cy = point[1];\n                    }\n                    else if (coordSys && coordSys.dataToPoint) {\n                        var point = coordSys.dataToPoint(\n                            data.getValues(\n                                zrUtil.map(coordSys.dimensions, function (dim) {\n                                    return seriesModel.coordDimToDataDim(dim)[0];\n                                }), dataIndex, true\n                            )\n                        );\n                        cx = point && point[0];\n                        cy = point && point[1];\n                    }\n                    else if (el) {\n                        // Use graphic bounding rect\n                        var rect = el.getBoundingRect().clone();\n                        rect.applyTransform(el.transform);\n                        cx = rect.x + rect.width / 2;\n                        cy = rect.y + rect.height / 2;\n                    }\n\n                    if (cx != null && cy != null) {\n                        this._tryShow({\n                            offsetX: cx,\n                            offsetY: cy,\n                            position: payload.position,\n                            target: el,\n                            event: {}\n                        });\n                    }\n                }\n            }\n            else {\n                var el = api.getZr().handler.findHover(payload.x, payload.y);\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: el,\n                    event: {}\n                });\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            this._hide();\n        },\n\n        _prepareAxisTriggerData: function (tooltipModel, ecModel) {\n            // Prepare data for axis trigger\n            var seriesGroupByAxis = {};\n            ecModel.eachSeries(function (seriesModel) {\n                if (ifSeriesSupportAxisTrigger(seriesModel)) {\n                    var coordSys = seriesModel.coordinateSystem;\n                    var baseAxis;\n                    var key;\n\n                    // Only cartesian2d, polar and single support axis trigger\n                    if (coordSys.type === 'cartesian2d') {\n                        // FIXME `axisPointer.axis` is not baseAxis\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + baseAxis.index;\n                    }\n                    else if (coordSys.type === 'singleAxis') {\n                        baseAxis = coordSys.getAxis();\n                        key = baseAxis.dim + baseAxis.type;\n                    }\n                    else {\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + coordSys.name;\n                    }\n\n                    seriesGroupByAxis[key] = seriesGroupByAxis[key] || {\n                        coordSys: [],\n                        series: []\n                    };\n                    seriesGroupByAxis[key].coordSys.push(coordSys);\n                    seriesGroupByAxis[key].series.push(seriesModel);\n                }\n            }, this);\n\n            return seriesGroupByAxis;\n        },\n\n        /**\n         * mousemove handler\n         * @param {Object} e\n         * @private\n         */\n        _tryShow: function (e) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n            var globalTrigger = tooltipModel.get('trigger');\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            // Always show item tooltip if mouse is on the element with dataIndex\n            if (el && el.dataIndex != null) {\n                // Use dataModel in element if possible\n                // Used when mouseover on a element like markPoint or edge\n                // In which case, the data is not main data in series.\n                var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                var dataIndex = el.dataIndex;\n                var data = dataModel.getData();\n                var itemModel = data.getItemModel(dataIndex);\n                // Series or single data may use item trigger when global is axis trigger\n                if ((itemModel.get('tooltip.trigger') || globalTrigger) === 'axis') {\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n                else {\n                    // Reset ticket\n                    this._ticket = '';\n                    // If either single data or series use item trigger\n                    this._hideAxisPointer();\n                    // Reset last hover and dispatch downplay action\n                    this._resetLastHover();\n\n                    this._showItemTooltipContent(dataModel, dataIndex, el.dataType, e);\n                }\n\n                api.dispatchAction({\n                    type: 'showTip',\n                    from: this.uid,\n                    dataIndexInside: dataIndex,\n                    dataIndex: data.getRawIndex(dataIndex), // expose to user.\n                    seriesIndex: el.seriesIndex\n                });\n            }\n            // Tooltip provided directly. Like legend\n            else if (el && el.tooltip) {\n                var tooltipOpt = el.tooltip;\n                if (typeof tooltipOpt === 'string') {\n                    var content = tooltipOpt;\n                    tooltipOpt = {\n                        content: content,\n                        // Fixed formatter\n                        formatter: content\n                    };\n                }\n                var subTooltipModel = new Model(tooltipOpt, tooltipModel);\n                var defaultHtml = subTooltipModel.get('content');\n                var asyncTicket = Math.random();\n                this._showTooltipContent(\n                    // TODO params\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el, api\n                );\n            }\n            else {\n                if (globalTrigger === 'item') {\n                    this._hide();\n                }\n                else {\n                    // Try show axis tooltip\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n\n                // Action of cross pointer\n                // other pointer types will trigger action in _dispatchAndShowSeriesTooltipContent method\n                if (tooltipModel.get('axisPointer.type') === 'cross') {\n                    api.dispatchAction({\n                        type: 'showTip',\n                        from: this.uid,\n                        x: e.offsetX,\n                        y: e.offsetY\n                    });\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on axis\n         * @param {module:echarts/component/tooltip/TooltipModel} tooltipModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} e\n         * @private\n         */\n        _showAxisTooltip: function (tooltipModel, ecModel, e) {\n            var axisPointerModel = tooltipModel.getModel('axisPointer');\n            var axisPointerType = axisPointerModel.get('type');\n\n            if (axisPointerType === 'cross') {\n                var el = e.target;\n                if (el && el.dataIndex != null) {\n                    var seriesModel = ecModel.getSeriesByIndex(el.seriesIndex);\n                    var dataIndex = el.dataIndex;\n                    this._showItemTooltipContent(seriesModel, dataIndex, el.dataType, e);\n                }\n            }\n\n            this._showAxisPointer();\n            var allNotShow = true;\n            zrUtil.each(this._seriesGroupByAxis, function (seriesCoordSysSameAxis) {\n                // Try show the axis pointer\n                var allCoordSys = seriesCoordSysSameAxis.coordSys;\n                var coordSys = allCoordSys[0];\n\n                // If mouse position is not in the grid or polar\n                var point = [e.offsetX, e.offsetY];\n\n                if (!coordSys.containPoint(point)) {\n                    // Hide axis pointer\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                allNotShow = false;\n                // Make sure point is discrete on cateogry axis\n                var dimensions = coordSys.dimensions;\n                var value = coordSys.pointToData(point, true);\n                point = coordSys.dataToPoint(value);\n\n                var baseAxis = coordSys.getBaseAxis();\n                var axisType = axisPointerModel.get('axis');\n                if (axisType === 'auto') {\n                    axisType = baseAxis.dim;\n                }\n\n                if (baseAxis.isBlank() || zrUtil.eqNaN(point[0]) || zrUtil.eqNaN(point[1])) {\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                var contentNotChange = false;\n                var lastHover = this._lastHover;\n                if (axisPointerType === 'cross') {\n                    // If hover data not changed\n                    // Possible when two axes are all category\n                    if (dataEqual(lastHover.data, value)) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value;\n                }\n                else {\n                    var valIndex = zrUtil.indexOf(dimensions, axisType);\n\n                    // If hover data not changed on the axis dimension\n                    if (lastHover.data === value[valIndex]) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value[valIndex];\n                }\n\n                var enableAnimation = tooltipModel.get('animation');\n\n                if (coordSys.type === 'cartesian2d' && !contentNotChange) {\n                    this._showCartesianPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'polar' && !contentNotChange) {\n                    this._showPolarPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'singleAxis' && !contentNotChange) {\n                    this._showSinglePointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n\n                if (axisPointerType !== 'cross') {\n                    this._dispatchAndShowSeriesTooltipContent(\n                        coordSys, seriesCoordSysSameAxis.series, point, value, contentNotChange, e.position\n                    );\n                }\n            }, this);\n\n            if (!this._tooltipModel.get('show')) {\n                this._hideAxisPointer();\n            }\n\n            if (allNotShow) {\n                this._hide();\n            }\n        },\n\n        /**\n         * Show tooltip on axis of cartesian coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {module:echarts/coord/cartesian/Cartesian2D} cartesians\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         * @private\n         */\n        _showCartesianPointer: function (axisPointerModel, cartesian, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n            var baseAxis = cartesian.getBaseAxis();\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && baseAxis.type === 'category'\n                && baseAxis.getBandWidth() > 20;\n\n            if (axisPointerType === 'cross') {\n                moveGridLine('x', point, cartesian.getAxis('y').getGlobalExtent());\n                moveGridLine('y', point, cartesian.getAxis('x').getGlobalExtent());\n\n                this._updateCrossText(cartesian, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = cartesian.getAxis(axisType === 'x' ? 'y' : 'x');\n                var otherExtent = otherAxis.getGlobalExtent();\n\n                if (cartesian.type === 'cartesian2d') {\n                    (axisPointerType === 'line' ? moveGridLine : moveGridShadow)(\n                        axisType, point, otherExtent\n                    );\n                }\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridLine(axisType, point, otherExtent) {\n                var targetShape = axisType === 'x'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                graphic.subPixelOptimizeLine({\n                    shape: targetShape,\n                    style: pointerEl.style\n                });\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridShadow(axisType, point, otherExtent) {\n                var axis = cartesian.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n                var span = otherExtent[1] - otherExtent[0];\n                var targetShape = axisType === 'x'\n                    ? makeRectShape(point[0] - bandWidth / 2, otherExtent[0], bandWidth, span)\n                    : makeRectShape(otherExtent[0], point[1] - bandWidth / 2, span, bandWidth);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _showSinglePointer: function (axisPointerModel, single, axisType, point, enableAnimation) {\n            var self = this;\n            var axisPointerType = axisPointerModel.get('type');\n            var moveAnimation =\n                enableAnimation\n                && axisPointerType !== 'cross'\n                && single.getBaseAxis().type === 'category';\n            var rect = single.getRect();\n            var otherExtent = [rect.y, rect.y + rect.height];\n\n            moveSingleLine(axisType, point, otherExtent);\n\n            /**\n             * @inner\n             */\n            function moveSingleLine(axisType, point, otherExtent) {\n                var axis = single.getAxis();\n                var orient = axis.orient;\n\n                var targetShape = orient === 'horizontal'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    single, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n        },\n\n        /**\n         * Show tooltip on axis of polar coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {Array.<module:echarts/coord/polar/Polar>} polar\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         */\n        _showPolarPointer: function (axisPointerModel, polar, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n\n            var angleAxis = polar.getAngleAxis();\n            var radiusAxis = polar.getRadiusAxis();\n\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && polar.getBaseAxis().type === 'category';\n\n            if (axisPointerType === 'cross') {\n                movePolarLine('angle', point, radiusAxis.getExtent());\n                movePolarLine('radius', point, angleAxis.getExtent());\n\n                this._updateCrossText(polar, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = polar.getAxis(axisType === 'radius' ? 'angle' : 'radius');\n                var otherExtent = otherAxis.getExtent();\n\n                (axisPointerType === 'line' ? movePolarLine : movePolarShadow)(\n                    axisType, point, otherExtent\n                );\n            }\n            /**\n             * @inner\n             */\n            function movePolarLine(axisType, point, otherExtent) {\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                if (axisType === 'angle') {\n                    var p1 = polar.coordToPoint([otherExtent[0], mouseCoord[1]]);\n                    var p2 = polar.coordToPoint([otherExtent[1], mouseCoord[1]]);\n                    targetShape = makeLineShape(p1[0], p1[1], p2[0], p2[1]);\n                }\n                else {\n                    targetShape = {\n                        cx: polar.cx,\n                        cy: polar.cy,\n                        r: mouseCoord[0]\n                    };\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function movePolarShadow(axisType, point, otherExtent) {\n                var axis = polar.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                var radian = Math.PI / 180;\n\n                if (axisType === 'angle') {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        otherExtent[0], otherExtent[1],\n                        // In ECharts y is negative if angle is positive\n                        (-mouseCoord[1] - bandWidth / 2) * radian,\n                        (-mouseCoord[1] + bandWidth / 2) * radian\n                    );\n                }\n                else {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        mouseCoord[0] - bandWidth / 2,\n                        mouseCoord[0] + bandWidth / 2,\n                        0, Math.PI * 2\n                    );\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _updateCrossText: function (coordSys, point, axisPointerModel) {\n            var crossStyleModel = axisPointerModel.getModel('crossStyle');\n            var textStyleModel = crossStyleModel.getModel('textStyle');\n\n            var tooltipModel = this._tooltipModel;\n\n            var text = this._crossText;\n            if (!text) {\n                text = this._crossText = new graphic.Text({\n                    style: {\n                        textAlign: 'left',\n                        textVerticalAlign: 'bottom'\n                    }\n                });\n                this.group.add(text);\n            }\n\n            var value = coordSys.pointToData(point);\n\n            var dims = coordSys.dimensions;\n            value = zrUtil.map(value, function (val, idx) {\n                var axis = coordSys.getAxis(dims[idx]);\n                if (axis.type === 'category' || axis.type === 'time') {\n                    val = axis.scale.getLabel(val);\n                }\n                else {\n                    val = formatUtil.addCommas(\n                        val.toFixed(axis.getPixelPrecision())\n                    );\n                }\n                return val;\n            });\n\n            text.setStyle({\n                fill: textStyleModel.getTextColor() || crossStyleModel.get('color'),\n                textFont: textStyleModel.getFont(),\n                text: value.join(', '),\n                x: point[0] + 5,\n                y: point[1] - 5\n            });\n            text.z = tooltipModel.get('z');\n            text.zlevel = tooltipModel.get('zlevel');\n        },\n\n        _getPointerElement: function (coordSys, pointerModel, axisType, initShape) {\n            var tooltipModel = this._tooltipModel;\n            var z = tooltipModel.get('z');\n            var zlevel = tooltipModel.get('zlevel');\n            var axisPointers = this._axisPointers;\n            var coordSysName = coordSys.name;\n            axisPointers[coordSysName] = axisPointers[coordSysName] || {};\n            if (axisPointers[coordSysName][axisType]) {\n                return axisPointers[coordSysName][axisType];\n            }\n\n            // Create if not exists\n            var pointerType = pointerModel.get('type');\n            var styleModel = pointerModel.getModel(pointerType + 'Style');\n            var isShadow = pointerType === 'shadow';\n            var style = styleModel[isShadow ? 'getAreaStyle' : 'getLineStyle']();\n\n            var elementType = coordSys.type === 'polar'\n                ? (isShadow ? 'Sector' : (axisType === 'radius' ? 'Circle' : 'Line'))\n                : (isShadow ? 'Rect' : 'Line');\n\n            isShadow ? (style.stroke = null) : (style.fill = null);\n\n            var el = axisPointers[coordSysName][axisType] = new graphic[elementType]({\n                style: style,\n                z: z,\n                zlevel: zlevel,\n                silent: true,\n                shape: initShape\n            });\n\n            this.group.add(el);\n            return el;\n        },\n\n        /**\n         * Dispatch actions and show tooltip on series\n         * @param {Array.<module:echarts/model/Series>} seriesList\n         * @param {Array.<number>} point\n         * @param {Array.<number>} value\n         * @param {boolean} contentNotChange\n         * @param {Array.<number>|string|Function} [positionExpr]\n         */\n        _dispatchAndShowSeriesTooltipContent: function (\n            coordSys, seriesList, point, value, contentNotChange, positionExpr\n        ) {\n\n            var rootTooltipModel = this._tooltipModel;\n\n            var baseAxis = coordSys.getBaseAxis();\n            var baseDimIndex = ({x: 1, radius: 1, single: 1})[baseAxis.dim] ? 0 : 1;\n\n            if (!seriesList.length) {\n                return;\n            }\n\n            var payloadBatch = zrUtil.map(seriesList, function (series) {\n                return {\n                    seriesIndex: series.seriesIndex,\n                    dataIndexInside: series.getAxisTooltipDataIndex\n                        ? series.getAxisTooltipDataIndex(series.coordDimToDataDim(baseAxis.dim), value, baseAxis)\n                        : series.getData().indexOfNearest(\n                            series.coordDimToDataDim(baseAxis.dim)[0],\n                            value[baseDimIndex],\n                            // Add a threshold to avoid find the wrong dataIndex when data length is not same\n                            false, baseAxis.type === 'category' ? 0.5 : null\n                        )\n                };\n            });\n            var sampleSeriesIndex;\n            zrUtil.each(payloadBatch, function (payload, idx) {\n                if (seriesList[idx].getData().hasValue(payload.dataIndexInside)) {\n                    sampleSeriesIndex = idx;\n                }\n            });\n            // Fallback to 0.\n            sampleSeriesIndex = sampleSeriesIndex || 0;\n\n            var lastHover = this._lastHover;\n            var api = this._api;\n            // Dispatch downplay action\n            if (lastHover.payloadBatch && !contentNotChange) {\n                api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Dispatch highlight action\n            if (!contentNotChange) {\n                api.dispatchAction({\n                    type: 'highlight',\n                    batch: payloadBatch\n                });\n                lastHover.payloadBatch = payloadBatch;\n            }\n            // Dispatch showTip action\n            var dataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n            api.dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                // expose to user.\n                dataIndex: seriesList[sampleSeriesIndex].getData().getRawIndex(dataIndex),\n                seriesIndex: payloadBatch[sampleSeriesIndex].seriesIndex,\n                from: this.uid\n            });\n\n            if (baseAxis && rootTooltipModel.get('showContent') && rootTooltipModel.get('show')) {\n                var paramsList = zrUtil.map(seriesList, function (series, index) {\n                    return series.getDataParams(payloadBatch[index].dataIndexInside);\n                });\n\n                if (!contentNotChange) {\n                    // Update html content\n                    var firstDataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = baseAxis.type === 'time'\n                        ? baseAxis.scale.getLabel(value[baseDimIndex])\n                        : seriesList[sampleSeriesIndex].getData().getName(firstDataIndex);\n                    var defaultHtml = (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + zrUtil.map(seriesList, function (series, index) {\n                            return series.formatTooltip(payloadBatch[index].dataIndexInside, true);\n                        }).join('<br />');\n\n                    var asyncTicket = 'axis_' + coordSys.name + '_' + firstDataIndex;\n\n                    this._showTooltipContent(\n                        rootTooltipModel, defaultHtml, paramsList, asyncTicket,\n                        point[0], point[1], positionExpr, null, api\n                    );\n                }\n                else {\n                    updatePosition(\n                        positionExpr || rootTooltipModel.get('position'),\n                        point[0], point[1],\n                        rootTooltipModel.get('confine'),\n                        this._tooltipContent, paramsList, null, api\n                    );\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on item\n         * @param {module:echarts/model/Series} seriesModel\n         * @param {number} dataIndex\n         * @param {string} dataType\n         * @param {Object} e\n         */\n        _showItemTooltipContent: function (seriesModel, dataIndex, dataType, e) {\n            // FIXME Graph data\n            var api = this._api;\n            var data = seriesModel.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var tooltipOpt = itemModel.get('tooltip', true);\n            if (typeof tooltipOpt === 'string') {\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                var tooltipContent = tooltipOpt;\n                tooltipOpt = {\n                    formatter: tooltipContent\n                };\n            }\n            var rootTooltipModel = this._tooltipModel;\n            var seriesTooltipModel = seriesModel.getModel(\n                'tooltip', rootTooltipModel\n            );\n            var tooltipModel = new Model(tooltipOpt, seriesTooltipModel, seriesTooltipModel.ecModel);\n\n            var params = seriesModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = seriesModel.formatTooltip(dataIndex, false, dataType);\n\n            var asyncTicket = 'item_' + seriesModel.name + '_' + dataIndex;\n\n            this._showTooltipContent(\n                tooltipModel, defaultHtml, params, asyncTicket,\n                e.offsetX, e.offsetY, e.position, e.target, api\n            );\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, target, api\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (tooltipModel.get('showContent') && tooltipModel.get('show')) {\n                var tooltipContent = this._tooltipContent;\n                var confine = tooltipModel.get('confine');\n\n                var formatter = tooltipModel.get('formatter');\n                positionExpr = positionExpr || tooltipModel.get('position');\n                var html = defaultHtml;\n\n                if (formatter) {\n                    if (typeof formatter === 'string') {\n                        html = formatUtil.formatTpl(formatter, params, true);\n                    }\n                    else if (typeof formatter === 'function') {\n                        var self = this;\n                        var ticket = asyncTicket;\n                        var callback = function (cbTicket, html) {\n                            if (cbTicket === self._ticket) {\n                                tooltipContent.setContent(html);\n\n                                updatePosition(\n                                    positionExpr, x, y, confine,\n                                    tooltipContent, params, target, api\n                                );\n                            }\n                        };\n                        self._ticket = ticket;\n                        html = formatter(params, ticket, callback);\n                    }\n                }\n\n                tooltipContent.show(tooltipModel);\n                tooltipContent.setContent(html);\n\n                updatePosition(\n                    positionExpr, x, y, confine,\n                    tooltipContent, params, target, api\n                );\n            }\n        },\n\n        /**\n         * Show axis pointer\n         * @param {string} [coordSysName]\n         */\n        _showAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.show();\n                });\n            }\n            else {\n                this.group.eachChild(function (child) {\n                    child.show();\n                });\n                this.group.show();\n            }\n        },\n\n        _resetLastHover: function () {\n            var lastHover = this._lastHover;\n            if (lastHover.payloadBatch) {\n                this._api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Reset lastHover\n            this._lastHover = {};\n        },\n        /**\n         * Hide axis pointer\n         * @param {string} [coordSysName]\n         */\n        _hideAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.hide();\n                });\n            }\n            else {\n                if (this.group.children().length) {\n                    this.group.hide();\n                }\n            }\n        },\n\n        _hide: function () {\n            clearTimeout(this._showTimeout);\n\n            this._hideAxisPointer();\n            this._resetLastHover();\n            if (!this._alwaysShowContent) {\n                this._tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._api.dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n\n            this._lastX = this._lastY = null;\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var zr = api.getZr();\n            this._tooltipContent.hide();\n\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/component/tooltip/TooltipView.js\n// module id = 423\n// module chunks = 0","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        isBlank: function () {\n            return this._isBlank;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        setBlank: function (isBlank) {\n            this._isBlank = isBlank;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/coord/Axis.js\n// module id = 424\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            // Default with axisTick\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/coord/axisDefault.js\n// module id = 425\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/coord/axisModelCommonMixin.js\n// module id = 426\n// module chunks = 0","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/coord/axisModelCreator.js\n// module id = 427\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n    var axisLabelInterval = require('./axisLabelInterval');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        getGlobalExtent: function () {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            return ret;\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/coord/cartesian/Axis2D.js\n// module id = 428\n// module chunks = 0","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/coord/cartesian/Cartesian.js\n// module id = 429\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 430\n// module chunks = 0","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/coord/cartesian/GridModel.js\n// module id = 431\n// module chunks = 0","'use strict';\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('../axisHelper');\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/coord/cartesian/axisLabelInterval.js\n// module id = 432\n// module chunks = 0","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/data/DataDiffer.js\n// module id = 433\n// module chunks = 0","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Array.<string>} [defaultNames]    Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [extraPrefix]             Prefix of name when filling the left dimensions.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\n        if (!data) {\n            return dimensions;\n        }\n\n        var value0 = retrieveValue(data[0]);\n        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\n\n        defaultNames = defaultNames || [];\n        extraPrefix = extraPrefix || 'extra';\n        for (var i = 0; i < dimSize; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/data/helper/completeDimensions.js\n// module id = 434\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var parsePercent = numberUtil.parsePercent;\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(barSeries, function (seriesModel, idx) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n\n            var stackId = getSeriesStackId(seriesModel);\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            if (barWidth && !stacks[stackId].width) {\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                stacks[stackId].width = barWidth;\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (!column.width && maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coords = cartesian.dataToPoints(data, true);\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(valueAxis.dim, function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    module.exports = barLayoutGrid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/layout/barGrid.js\n// module id = 435\n// module chunks = 0","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (coordSys.type === 'singleAxis') {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/layout/points.js\n// module id = 436\n// module chunks = 0","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/loading/default.js\n// module id = 437\n// module chunks = 0","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption();\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts;\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/model/Global.js\n// module id = 438\n// module chunks = 0","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/model/OptionManager.js\n// module id = 439\n// module chunks = 0","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: true,\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/model/globalDefault.js\n// module id = 440\n// module chunks = 0","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/model/mixin/areaStyle.js\n// module id = 441\n// module chunks = 0","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/model/mixin/boxLayout.js\n// module id = 442\n// module chunks = 0","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes) {\n            var style = getItemStyle.call(this, excludes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/model/mixin/itemStyle.js\n// module id = 443\n// module chunks = 0","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/model/mixin/lineStyle.js\n// module id = 444\n// module chunks = 0","\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/model/mixin/textStyle.js\n// module id = 445\n// module chunks = 0","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/preprocessor/backwardCompat.js\n// module id = 446\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 447\n// module chunks = 0","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/processor/dataSample.js\n// module id = 448\n// module chunks = 0","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/scale/Log.js\n// module id = 449\n// module chunks = 0","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/scale/Ordinal.js\n// module id = 450\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date);\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                mathCeil(extent[0] / interval) * interval,\n                mathFloor(extent[1] / interval) * interval\n            ];\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function () {\n        return new TimeScale();\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/scale/Time.js\n// module id = 451\n// module chunks = 0","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/visual/seriesColor.js\n// module id = 452\n// module chunks = 0","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_echarts@3.4.0@echarts/lib/visual/symbol.js\n// module id = 453\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/_css-loader@0.28.0@css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@12.0.4@vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-cb20660c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/_vue-loader@12.0.4@vue-loader/lib/selector.js?type=styles&index=0!./mixchart.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/_vue-style-loader@2.0.5@vue-style-loader/lib/addStylesClient.js\")(\"434cd1bf\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_extract-text-webpack-plugin@2.0.0@extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/_vue-style-loader@2.0.5@vue-style-loader!./~/_css-loader@0.28.0@css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/_vue-loader@12.0.4@vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-cb20660c\",\"scoped\":true,\"hasInlineConfig\":false}!./~/_vue-loader@12.0.4@vue-loader/lib/selector.js?type=styles&index=0!./src/views/charts/mixchart.vue\n// module id = 466\n// module chunks = 0","var Component = require(\"!../../../node_modules/_vue-loader@12.0.4@vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/_vue-loader@12.0.4@vue-loader/lib/selector?type=script&index=0!./mixchart.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/_vue-loader@12.0.4@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1ff12c58\\\"}!../../../node_modules/_vue-loader@12.0.4@vue-loader/lib/selector?type=template&index=0!./mixchart.vue\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Charts/mixchart.vue\n// module id = 468\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: _vm.className,\n    style: ({\n      height: _vm.height,\n      width: _vm.width\n    }),\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@12.0.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-1ff12c58\"}!./~/_vue-loader@12.0.4@vue-loader/lib/selector.js?type=template&index=0!./src/components/Charts/mixchart.vue\n// module id = 482\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"components-container\",\n    staticStyle: {\n      \"height\": \"100vh\"\n    }\n  }, [_c('div', {\n    staticClass: \"chart-container\"\n  }, [_c('mixchart', {\n    attrs: {\n      \"id\": \"apple\",\n      \"height\": \"100%\",\n      \"width\": \"100%\"\n    }\n  })], 1)])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_vue-loader@12.0.4@vue-loader/lib/template-compiler?{\"id\":\"data-v-cb20660c\"}!./~/_vue-loader@12.0.4@vue-loader/lib/selector.js?type=template&index=0!./src/views/charts/mixchart.vue\n// module id = 494\n// module chunks = 0","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Handler.js\n// module id = 495\n// module chunks = 0","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Layer.js\n// module id = 496\n// module chunks = 0","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Painter.js\n// module id = 497\n// module chunks = 0","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/Storage.js\n// module id = 498\n// module chunks = 0","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/Animation.js\n// module id = 499\n// module chunks = 0","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/Clip.js\n// module id = 500\n// module chunks = 0","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/animation/easing.js\n// module id = 501\n// module chunks = 0","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/arc.js\n// module id = 502\n// module chunks = 0","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/cubic.js\n// module id = 503\n// module chunks = 0","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/line.js\n// module id = 504\n// module chunks = 0","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/path.js\n// module id = 505\n// module chunks = 0","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/quadratic.js\n// module id = 506\n// module chunks = 0","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/contain/windingLine.js\n// module id = 507\n// module chunks = 0","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/GestureMgr.js\n// module id = 508\n// module chunks = 0","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/core/bbox.js\n// module id = 509\n// module chunks = 0","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/dom/HandlerProxy.js\n// module id = 510\n// module chunks = 0","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/CompoundPath.js\n// module id = 511\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/LinearGradient.js\n// module id = 512\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/RadialGradient.js\n// module id = 513\n// module chunks = 0","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/Text.js\n// module id = 514\n// module chunks = 0","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/helper/roundRect.js\n// module id = 515\n// module chunks = 0","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/helper/smoothBezier.js\n// module id = 516\n// module chunks = 0","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/helper/smoothSpline.js\n// module id = 517\n// module chunks = 0","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = require('../../contain/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n            rect = style.textPositionRect || rect;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/mixin/RectText.js\n// module id = 518\n// module chunks = 0","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Arc.js\n// module id = 519\n// module chunks = 0","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/BezierCurve.js\n// module id = 520\n// module chunks = 0","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Circle.js\n// module id = 521\n// module chunks = 0","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Line.js\n// module id = 522\n// module chunks = 0","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Polygon.js\n// module id = 523\n// module chunks = 0","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Polyline.js\n// module id = 524\n// module chunks = 0","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Rect.js\n// module id = 525\n// module chunks = 0","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Ring.js\n// module id = 526\n// module chunks = 0","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = require('../../core/env');\n    var Path = require('../Path');\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/graphic/shape/Sector.js\n// module id = 527\n// module chunks = 0","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/mixin/Animatable.js\n// module id = 528\n// module chunks = 0","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/mixin/Draggable.js\n// module id = 529\n// module chunks = 0","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/mixin/Transformable.js\n// module id = 530\n// module chunks = 0","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/tool/path.js\n// module id = 531\n// module chunks = 0","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/tool/transformPath.js\n// module id = 532\n// module chunks = 0","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.5.2';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/_zrender@3.5.2@zrender/lib/zrender.js\n// module id = 533\n// module chunks = 0"],"sourceRoot":""}